== Physical Plan ==
*(8) Project [c_last_name#1, c_first_name#2, s_store_name#3, paid#4]
+- *(8) Filter (isnotnull(sum(netpaid#5)#6) && (cast(sum(netpaid#5)#6 as decimal(33,8)) > cast(Subquery subquery3246 as decimal(33,8))))
   :  +- Subquery subquery3246
   :     +- *(8) HashAggregate(keys=[], functions=[avg(netpaid#5)])
   :        +- Exchange SinglePartition
   :           +- *(7) HashAggregate(keys=[], functions=[partial_avg(netpaid#5)])
   :              +- *(7) HashAggregate(keys=[c_last_name#1, c_first_name#2, s_store_name#3, ca_state#7, s_state#8, i_color#9, i_current_price#10, i_manager_id#11, i_units#12, i_size#13], functions=[sum(UnscaledValue(ss_net_paid#14))])
   :                 +- Exchange hashpartitioning(c_last_name#1, c_first_name#2, s_store_name#3, ca_state#7, s_state#8, i_color#9, i_current_price#10, i_manager_id#11, i_units#12, i_size#13, 200)
   :                    +- *(6) HashAggregate(keys=[c_last_name#1, c_first_name#2, s_store_name#3, ca_state#7, s_state#8, i_color#9, i_current_price#10, i_manager_id#11, i_units#12, i_size#13], functions=[partial_sum(UnscaledValue(ss_net_paid#14))])
   :                       +- *(6) Project [ss_net_paid#14, s_store_name#3, s_state#8, i_current_price#10, i_size#13, i_color#9, i_units#12, i_manager_id#11, c_first_name#2, c_last_name#1, ca_state#7]
   :                          +- *(6) BroadcastHashJoin [c_birth_country#15, s_zip#16], [upper(ca_country#17), ca_zip#18], Inner, BuildRight
   :                             :- *(6) Project [ss_net_paid#14, s_store_name#3, s_state#8, s_zip#16, i_current_price#10, i_size#13, i_color#9, i_units#12, i_manager_id#11, c_first_name#2, c_last_name#1, c_birth_country#15]
   :                             :  +- *(6) BroadcastHashJoin [ss_customer_sk#19], [c_customer_sk#20], Inner, BuildRight
   :                             :     :- *(6) Project [ss_customer_sk#19, ss_net_paid#14, s_store_name#3, s_state#8, s_zip#16, i_current_price#10, i_size#13, i_color#9, i_units#12, i_manager_id#11]
   :                             :     :  +- *(6) BroadcastHashJoin [ss_item_sk#21], [i_item_sk#22], Inner, BuildRight
   :                             :     :     :- *(6) Project [ss_item_sk#21, ss_customer_sk#19, ss_net_paid#14, s_store_name#3, s_state#8, s_zip#16]
   :                             :     :     :  +- *(6) BroadcastHashJoin [ss_store_sk#23], [s_store_sk#24], Inner, BuildRight
   :                             :     :     :     :- *(6) Project [ss_item_sk#21, ss_customer_sk#19, ss_store_sk#23, ss_net_paid#14]
   :                             :     :     :     :  +- *(6) BroadcastHashJoin [cast(ss_ticket_number#25 as bigint), cast(ss_item_sk#21 as bigint)], [sr_ticket_number#26, sr_item_sk#27], Inner, BuildRight
   :                             :     :     :     :     :- *(6) Project [ss_item_sk#21, ss_customer_sk#19, ss_store_sk#23, ss_ticket_number#25, ss_net_paid#14]
   :                             :     :     :     :     :  +- *(6) Filter (((isnotnull(ss_ticket_number#25) && isnotnull(ss_item_sk#21)) && isnotnull(ss_store_sk#23)) && isnotnull(ss_customer_sk#19))
   :                             :     :     :     :     :     +- *(6) FileScan parquet default.store_sales[ss_item_sk#21,ss_customer_sk#19,ss_store_sk#23,ss_ticket_number#25,ss_net_paid#14] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:int,ss_net_paid:decimal...
   :                             :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, bigint, true], input[0, bigint, true]))
   :                             :     :     :     :        +- *(1) Project [sr_item_sk#27, sr_ticket_number#26]
   :                             :     :     :     :           +- *(1) Filter (isnotnull(sr_ticket_number#26) && isnotnull(sr_item_sk#27))
   :                             :     :     :     :              +- *(1) FileScan parquet default.store_returns[sr_item_sk#27,sr_ticket_number#26] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/store_returns], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:bigint,sr_ticket_number:bigint>
   :                             :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
   :                             :     :     :        +- *(2) Project [s_store_sk#24, s_store_name#3, s_state#8, s_zip#16]
   :                             :     :     :           +- *(2) Filter (((isnotnull(s_market_id#28) && (s_market_id#28 = 8)) && isnotnull(s_store_sk#24)) && isnotnull(s_zip#16))
   :                             :     :     :              +- *(2) FileScan parquet default.store[s_store_sk#24,s_store_name#3,s_market_id#28,s_state#8,s_zip#16] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_market_id), EqualTo(s_market_id,8), IsNotNull(s_store_sk), IsNotNull(s_zip)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
   :                             :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
   :                             :     :        +- *(3) Project [i_item_sk#22, i_current_price#10, i_size#13, i_color#9, i_units#12, i_manager_id#11]
   :                             :     :           +- *(3) Filter isnotnull(i_item_sk#22)
   :                             :     :              +- *(3) FileScan parquet default.item[i_item_sk#22,i_current_price#10,i_size#13,i_color#9,i_units#12,i_manager_id#11] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
   :                             :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
   :                             :        +- *(4) Project [c_customer_sk#20, c_first_name#2, c_last_name#1, c_birth_country#15]
   :                             :           +- *(4) Filter (isnotnull(c_customer_sk#20) && isnotnull(c_birth_country#15))
   :                             :              +- *(4) FileScan parquet default.customer[c_customer_sk#20,c_first_name#2,c_last_name#1,c_birth_country#15] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_birth_country)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string,c_birth_country:string>
   :                             +- BroadcastExchange HashedRelationBroadcastMode(List(upper(input[2, string, true]), input[1, string, true]))
   :                                +- *(5) Project [ca_state#7, ca_zip#18, ca_country#17]
   :                                   +- *(5) Filter isnotnull(ca_zip#18)
   :                                      +- *(5) FileScan parquet default.customer_address[ca_state#7,ca_zip#18,ca_country#17] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_zip)], ReadSchema: struct<ca_state:string,ca_zip:string,ca_country:string>
   +- *(8) HashAggregate(keys=[c_last_name#1, c_first_name#2, s_store_name#3], functions=[sum(netpaid#5)])
      +- Exchange hashpartitioning(c_last_name#1, c_first_name#2, s_store_name#3, 200)
         +- *(7) HashAggregate(keys=[c_last_name#1, c_first_name#2, s_store_name#3], functions=[partial_sum(netpaid#5)])
            +- *(7) HashAggregate(keys=[c_last_name#1, c_first_name#2, s_store_name#3, ca_state#7, s_state#8, i_color#9, i_current_price#10, i_manager_id#11, i_units#12, i_size#13], functions=[sum(UnscaledValue(ss_net_paid#14))])
               +- Exchange hashpartitioning(c_last_name#1, c_first_name#2, s_store_name#3, ca_state#7, s_state#8, i_color#9, i_current_price#10, i_manager_id#11, i_units#12, i_size#13, 200)
                  +- *(6) HashAggregate(keys=[c_last_name#1, c_first_name#2, s_store_name#3, ca_state#7, s_state#8, i_color#9, i_current_price#10, i_manager_id#11, i_units#12, i_size#13], functions=[partial_sum(UnscaledValue(ss_net_paid#14))])
                     +- *(6) Project [ss_net_paid#14, s_store_name#3, s_state#8, i_current_price#10, i_size#13, i_color#9, i_units#12, i_manager_id#11, c_first_name#2, c_last_name#1, ca_state#7]
                        +- *(6) BroadcastHashJoin [c_birth_country#15, s_zip#16], [upper(ca_country#17), ca_zip#18], Inner, BuildRight
                           :- *(6) Project [ss_net_paid#14, s_store_name#3, s_state#8, s_zip#16, i_current_price#10, i_size#13, i_color#9, i_units#12, i_manager_id#11, c_first_name#2, c_last_name#1, c_birth_country#15]
                           :  +- *(6) BroadcastHashJoin [ss_customer_sk#19], [c_customer_sk#20], Inner, BuildRight
                           :     :- *(6) Project [ss_customer_sk#19, ss_net_paid#14, s_store_name#3, s_state#8, s_zip#16, i_current_price#10, i_size#13, i_color#9, i_units#12, i_manager_id#11]
                           :     :  +- *(6) BroadcastHashJoin [ss_item_sk#21], [i_item_sk#22], Inner, BuildRight
                           :     :     :- *(6) Project [ss_item_sk#21, ss_customer_sk#19, ss_net_paid#14, s_store_name#3, s_state#8, s_zip#16]
                           :     :     :  +- *(6) BroadcastHashJoin [ss_store_sk#23], [s_store_sk#24], Inner, BuildRight
                           :     :     :     :- *(6) Project [ss_item_sk#21, ss_customer_sk#19, ss_store_sk#23, ss_net_paid#14]
                           :     :     :     :  +- *(6) BroadcastHashJoin [cast(ss_ticket_number#25 as bigint), cast(ss_item_sk#21 as bigint)], [sr_ticket_number#26, sr_item_sk#27], Inner, BuildRight
                           :     :     :     :     :- *(6) Project [ss_item_sk#21, ss_customer_sk#19, ss_store_sk#23, ss_ticket_number#25, ss_net_paid#14]
                           :     :     :     :     :  +- *(6) Filter (((isnotnull(ss_ticket_number#25) && isnotnull(ss_item_sk#21)) && isnotnull(ss_store_sk#23)) && isnotnull(ss_customer_sk#19))
                           :     :     :     :     :     +- *(6) FileScan parquet default.store_sales[ss_item_sk#21,ss_customer_sk#19,ss_store_sk#23,ss_ticket_number#25,ss_net_paid#14] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:int,ss_net_paid:decimal...
                           :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, bigint, true], input[0, bigint, true]))
                           :     :     :     :        +- *(1) Project [sr_item_sk#27, sr_ticket_number#26]
                           :     :     :     :           +- *(1) Filter (isnotnull(sr_ticket_number#26) && isnotnull(sr_item_sk#27))
                           :     :     :     :              +- *(1) FileScan parquet default.store_returns[sr_item_sk#27,sr_ticket_number#26] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/store_returns], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:bigint,sr_ticket_number:bigint>
                           :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           :     :     :        +- *(2) Project [s_store_sk#24, s_store_name#3, s_state#8, s_zip#16]
                           :     :     :           +- *(2) Filter (((isnotnull(s_market_id#28) && (s_market_id#28 = 8)) && isnotnull(s_store_sk#24)) && isnotnull(s_zip#16))
                           :     :     :              +- *(2) FileScan parquet default.store[s_store_sk#24,s_store_name#3,s_market_id#28,s_state#8,s_zip#16] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_market_id), EqualTo(s_market_id,8), IsNotNull(s_store_sk), IsNotNull(s_zip)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
                           :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           :     :        +- *(3) Project [i_item_sk#22, i_current_price#10, i_size#13, i_color#9, i_units#12, i_manager_id#11]
                           :     :           +- *(3) Filter ((isnotnull(i_color#9) && (i_color#9 = pale)) && isnotnull(i_item_sk#22))
                           :     :              +- *(3) FileScan parquet default.item[i_item_sk#22,i_current_price#10,i_size#13,i_color#9,i_units#12,i_manager_id#11] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_color), EqualTo(i_color,pale), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
                           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           :        +- *(4) Project [c_customer_sk#20, c_first_name#2, c_last_name#1, c_birth_country#15]
                           :           +- *(4) Filter (isnotnull(c_customer_sk#20) && isnotnull(c_birth_country#15))
                           :              +- *(4) FileScan parquet default.customer[c_customer_sk#20,c_first_name#2,c_last_name#1,c_birth_country#15] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_birth_country)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string,c_birth_country:string>
                           +- BroadcastExchange HashedRelationBroadcastMode(List(upper(input[2, string, true]), input[1, string, true]))
                              +- *(5) Project [ca_state#7, ca_zip#18, ca_country#17]
                                 +- *(5) Filter isnotnull(ca_zip#18)
                                    +- *(5) FileScan parquet default.customer_address[ca_state#7,ca_zip#18,ca_country#17] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_zip)], ReadSchema: struct<ca_state:string,ca_zip:string,ca_country:string>