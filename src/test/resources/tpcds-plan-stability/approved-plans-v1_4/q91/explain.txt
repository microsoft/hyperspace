== Physical Plan ==
*(9) Sort [Returns_Loss#1 DESC NULLS LAST], true, 0
+- Exchange rangepartitioning(Returns_Loss#1 DESC NULLS LAST, 200)
   +- *(8) HashAggregate(keys=[cc_call_center_id#2, cc_name#3, cc_manager#4, cd_marital_status#5, cd_education_status#6], functions=[sum(UnscaledValue(cr_net_loss#7))])
      +- Exchange hashpartitioning(cc_call_center_id#2, cc_name#3, cc_manager#4, cd_marital_status#5, cd_education_status#6, 200)
         +- *(7) HashAggregate(keys=[cc_call_center_id#2, cc_name#3, cc_manager#4, cd_marital_status#5, cd_education_status#6], functions=[partial_sum(UnscaledValue(cr_net_loss#7))])
            +- *(7) Project [cc_call_center_id#2, cc_name#3, cc_manager#4, cr_net_loss#7, cd_marital_status#5, cd_education_status#6]
               +- *(7) BroadcastHashJoin [c_current_hdemo_sk#8], [hd_demo_sk#9], Inner, BuildRight
                  :- *(7) Project [cc_call_center_id#2, cc_name#3, cc_manager#4, cr_net_loss#7, c_current_hdemo_sk#8, cd_marital_status#5, cd_education_status#6]
                  :  +- *(7) BroadcastHashJoin [c_current_cdemo_sk#10], [cd_demo_sk#11], Inner, BuildRight
                  :     :- *(7) Project [cc_call_center_id#2, cc_name#3, cc_manager#4, cr_net_loss#7, c_current_cdemo_sk#10, c_current_hdemo_sk#8]
                  :     :  +- *(7) BroadcastHashJoin [c_current_addr_sk#12], [ca_address_sk#13], Inner, BuildRight
                  :     :     :- *(7) Project [cc_call_center_id#2, cc_name#3, cc_manager#4, cr_net_loss#7, c_current_cdemo_sk#10, c_current_hdemo_sk#8, c_current_addr_sk#12]
                  :     :     :  +- *(7) BroadcastHashJoin [cr_returning_customer_sk#14], [c_customer_sk#15], Inner, BuildRight
                  :     :     :     :- *(7) Project [cc_call_center_id#2, cc_name#3, cc_manager#4, cr_returning_customer_sk#14, cr_net_loss#7]
                  :     :     :     :  +- *(7) BroadcastHashJoin [cr_returned_date_sk#16], [d_date_sk#17], Inner, BuildRight
                  :     :     :     :     :- *(7) Project [cc_call_center_id#2, cc_name#3, cc_manager#4, cr_returned_date_sk#16, cr_returning_customer_sk#14, cr_net_loss#7]
                  :     :     :     :     :  +- *(7) BroadcastHashJoin [cc_call_center_sk#18], [cr_call_center_sk#19], Inner, BuildRight
                  :     :     :     :     :     :- *(7) Project [cc_call_center_sk#18, cc_call_center_id#2, cc_name#3, cc_manager#4]
                  :     :     :     :     :     :  +- *(7) Filter isnotnull(cc_call_center_sk#18)
                  :     :     :     :     :     :     +- *(7) FileScan parquet default.call_center[cc_call_center_sk#18,cc_call_center_id#2,cc_name#3,cc_manager#4] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/call_center], PartitionFilters: [], PushedFilters: [IsNotNull(cc_call_center_sk)], ReadSchema: struct<cc_call_center_sk:int,cc_call_center_id:string,cc_name:string,cc_manager:string>
                  :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[2, int, true] as bigint)))
                  :     :     :     :     :        +- *(1) Project [cr_returned_date_sk#16, cr_returning_customer_sk#14, cr_call_center_sk#19, cr_net_loss#7]
                  :     :     :     :     :           +- *(1) Filter ((isnotnull(cr_call_center_sk#19) && isnotnull(cr_returned_date_sk#16)) && isnotnull(cr_returning_customer_sk#14))
                  :     :     :     :     :              +- *(1) FileScan parquet default.catalog_returns[cr_returned_date_sk#16,cr_returning_customer_sk#14,cr_call_center_sk#19,cr_net_loss#7] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_call_center_sk), IsNotNull(cr_returned_date_sk), IsNotNull(cr_returning_customer_sk)], ReadSchema: struct<cr_returned_date_sk:int,cr_returning_customer_sk:int,cr_call_center_sk:int,cr_net_loss:dec...
                  :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                  :     :     :     :        +- *(2) Project [d_date_sk#17]
                  :     :     :     :           +- *(2) Filter ((((isnotnull(d_year#20) && isnotnull(d_moy#21)) && (d_year#20 = 1998)) && (d_moy#21 = 11)) && isnotnull(d_date_sk#17))
                  :     :     :     :              +- *(2) FileScan parquet default.date_dim[d_date_sk#17,d_year#20,d_moy#21] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                  :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                  :     :     :        +- *(3) Project [c_customer_sk#15, c_current_cdemo_sk#10, c_current_hdemo_sk#8, c_current_addr_sk#12]
                  :     :     :           +- *(3) Filter (((isnotnull(c_customer_sk#15) && isnotnull(c_current_addr_sk#12)) && isnotnull(c_current_cdemo_sk#10)) && isnotnull(c_current_hdemo_sk#8))
                  :     :     :              +- *(3) FileScan parquet default.customer[c_customer_sk#15,c_current_cdemo_sk#10,c_current_hdemo_sk#8,c_current_addr_sk#12] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk), IsNotNull..., ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int>
                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                  :     :        +- *(4) Project [ca_address_sk#13]
                  :     :           +- *(4) Filter ((isnotnull(ca_gmt_offset#22) && (ca_gmt_offset#22 = -7.00)) && isnotnull(ca_address_sk#13))
                  :     :              +- *(4) FileScan parquet default.customer_address[ca_address_sk#13,ca_gmt_offset#22] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-7.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                  :        +- *(5) Project [cd_demo_sk#11, cd_marital_status#5, cd_education_status#6]
                  :           +- *(5) Filter ((((cd_marital_status#5 = M) && (cd_education_status#6 = Unknown)) || ((cd_marital_status#5 = W) && (cd_education_status#6 = Advanced Degree))) && isnotnull(cd_demo_sk#11))
                  :              +- *(5) FileScan parquet default.customer_demographics[cd_demo_sk#11,cd_marital_status#5,cd_education_status#6] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/customer_demographics], PartitionFilters: [], PushedFilters: [Or(And(EqualTo(cd_marital_status,M),EqualTo(cd_education_status,Unknown)),And(EqualTo(cd_marital..., ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                     +- *(6) Project [hd_demo_sk#9]
                        +- *(6) Filter ((isnotnull(hd_buy_potential#23) && StartsWith(hd_buy_potential#23, Unknown)) && isnotnull(hd_demo_sk#9))
                           +- *(6) FileScan parquet default.household_demographics[hd_demo_sk#9,hd_buy_potential#23] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/household_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(hd_buy_potential), StringStartsWith(hd_buy_potential,Unknown), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>