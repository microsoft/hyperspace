== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[i_category#1 ASC NULLS FIRST,i_class#2 ASC NULLS FIRST,i_brand#3 ASC NULLS FIRST,i_product_name#4 ASC NULLS FIRST,d_year#5 ASC NULLS FIRST,d_qoy#6 ASC NULLS FIRST,d_moy#7 ASC NULLS FIRST,s_store_id#8 ASC NULLS FIRST,sumsales#9 ASC NULLS FIRST,rk#10 ASC NULLS FIRST], output=[i_category#1,i_class#2,i_brand#3,i_product_name#4,d_year#5,d_qoy#6,d_moy#7,s_store_id#8,sumsales#9,rk#10])
+- *(7) Filter (isnotnull(rk#10) && (rk#10 <= 100))
   +- Window [rank(sumsales#9) windowspecdefinition(i_category#1, sumsales#9 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#10], [i_category#1], [sumsales#9 DESC NULLS LAST]
      +- *(6) Sort [i_category#1 ASC NULLS FIRST, sumsales#9 DESC NULLS LAST], false, 0
         +- Exchange hashpartitioning(i_category#1, 200)
            +- *(5) HashAggregate(keys=[i_category#1, i_class#2, i_brand#3, i_product_name#4, d_year#5, d_qoy#6, d_moy#7, s_store_id#8, spark_grouping_id#11], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#12 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#13 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)), 0.00))])
               +- Exchange hashpartitioning(i_category#1, i_class#2, i_brand#3, i_product_name#4, d_year#5, d_qoy#6, d_moy#7, s_store_id#8, spark_grouping_id#11, 200)
                  +- *(4) HashAggregate(keys=[i_category#1, i_class#2, i_brand#3, i_product_name#4, d_year#5, d_qoy#6, d_moy#7, s_store_id#8, spark_grouping_id#11], functions=[partial_sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#12 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#13 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)), 0.00))])
                     +- *(4) Expand [List(ss_quantity#13, ss_sales_price#12, i_category#14, i_class#15, i_brand#16, i_product_name#17, d_year#18, d_qoy#19, d_moy#20, s_store_id#21, 0), List(ss_quantity#13, ss_sales_price#12, i_category#14, i_class#15, i_brand#16, i_product_name#17, d_year#18, d_qoy#19, d_moy#20, null, 1), List(ss_quantity#13, ss_sales_price#12, i_category#14, i_class#15, i_brand#16, i_product_name#17, d_year#18, d_qoy#19, null, null, 3), List(ss_quantity#13, ss_sales_price#12, i_category#14, i_class#15, i_brand#16, i_product_name#17, d_year#18, null, null, null, 7), List(ss_quantity#13, ss_sales_price#12, i_category#14, i_class#15, i_brand#16, i_product_name#17, null, null, null, null, 15), List(ss_quantity#13, ss_sales_price#12, i_category#14, i_class#15, i_brand#16, null, null, null, null, null, 31), List(ss_quantity#13, ss_sales_price#12, i_category#14, i_class#15, null, null, null, null, null, null, 63), List(ss_quantity#13, ss_sales_price#12, i_category#14, null, null, null, null, null, null, null, 127), List(ss_quantity#13, ss_sales_price#12, null, null, null, null, null, null, null, null, 255)], [ss_quantity#13, ss_sales_price#12, i_category#1, i_class#2, i_brand#3, i_product_name#4, d_year#5, d_qoy#6, d_moy#7, s_store_id#8, spark_grouping_id#11]
                        +- *(4) Project [ss_quantity#13, ss_sales_price#12, d_year#18, d_moy#20, d_qoy#19, i_category#22 AS i_category#14, i_class#23 AS i_class#15, i_brand#24 AS i_brand#16, i_product_name#25 AS i_product_name#17, d_year#18, d_qoy#19, d_moy#20, s_store_id#26 AS s_store_id#21]
                           +- *(4) BroadcastHashJoin [ss_item_sk#27], [i_item_sk#28], Inner, BuildRight
                              :- *(4) Project [ss_item_sk#27, ss_quantity#13, ss_sales_price#12, d_year#18, d_moy#20, d_qoy#19, s_store_id#26]
                              :  +- *(4) BroadcastHashJoin [ss_store_sk#29], [s_store_sk#30], Inner, BuildRight
                              :     :- *(4) Project [ss_item_sk#27, ss_store_sk#29, ss_quantity#13, ss_sales_price#12, d_year#18, d_moy#20, d_qoy#19]
                              :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#31], [d_date_sk#32], Inner, BuildRight
                              :     :     :- *(4) Project [ss_sold_date_sk#31, ss_item_sk#27, ss_store_sk#29, ss_quantity#13, ss_sales_price#12]
                              :     :     :  +- *(4) Filter ((isnotnull(ss_sold_date_sk#31) && isnotnull(ss_store_sk#29)) && isnotnull(ss_item_sk#27))
                              :     :     :     +- *(4) FileScan parquet default.store_sales[ss_sold_date_sk#31,ss_item_sk#27,ss_store_sk#29,ss_quantity#13,ss_sales_price#12] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(...
                              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                              :     :        +- *(1) Project [d_date_sk#32, d_year#18, d_moy#20, d_qoy#19]
                              :     :           +- *(1) Filter (((isnotnull(d_month_seq#33) && (d_month_seq#33 >= 1200)) && (d_month_seq#33 <= 1211)) && isnotnull(d_date_sk#32))
                              :     :              +- *(1) FileScan parquet default.date_dim[d_date_sk#32,d_month_seq#33,d_year#18,d_moy#20,d_qoy#19] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>
                              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                              :        +- *(2) Project [s_store_sk#30, s_store_id#26]
                              :           +- *(2) Filter isnotnull(s_store_sk#30)
                              :              +- *(2) FileScan parquet default.store[s_store_sk#30,s_store_id#26] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string>
                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                                 +- *(3) Project [i_item_sk#28, i_brand#24, i_class#23, i_category#22, i_product_name#25]
                                    +- *(3) Filter isnotnull(i_item_sk#28)
                                       +- *(3) FileScan parquet default.item[i_item_sk#28,i_brand#24,i_class#23,i_category#22,i_product_name#25] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>