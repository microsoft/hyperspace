== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[order count #1 ASC NULLS FIRST], output=[order count #1,total shipping cost #2,total net profit #3])
+- *(8) HashAggregate(keys=[], functions=[sum(UnscaledValue(cs_ext_ship_cost#4)), sum(UnscaledValue(cs_net_profit#5)), count(distinct cs_order_number#6)])
   +- Exchange SinglePartition
      +- *(7) HashAggregate(keys=[], functions=[merge_sum(UnscaledValue(cs_ext_ship_cost#4)), merge_sum(UnscaledValue(cs_net_profit#5)), partial_count(distinct cs_order_number#6)])
         +- *(7) HashAggregate(keys=[cs_order_number#6], functions=[merge_sum(UnscaledValue(cs_ext_ship_cost#4)), merge_sum(UnscaledValue(cs_net_profit#5))])
            +- Exchange hashpartitioning(cs_order_number#6, 200)
               +- *(6) HashAggregate(keys=[cs_order_number#6], functions=[partial_sum(UnscaledValue(cs_ext_ship_cost#4)), partial_sum(UnscaledValue(cs_net_profit#5))])
                  +- *(6) Project [cs_order_number#6, cs_ext_ship_cost#4, cs_net_profit#5]
                     +- *(6) BroadcastHashJoin [cs_call_center_sk#7], [cc_call_center_sk#8], Inner, BuildRight
                        :- *(6) Project [cs_call_center_sk#7, cs_order_number#6, cs_ext_ship_cost#4, cs_net_profit#5]
                        :  +- *(6) BroadcastHashJoin [cs_ship_addr_sk#9], [ca_address_sk#10], Inner, BuildRight
                        :     :- *(6) Project [cs_ship_addr_sk#9, cs_call_center_sk#7, cs_order_number#6, cs_ext_ship_cost#4, cs_net_profit#5]
                        :     :  +- *(6) BroadcastHashJoin [cs_ship_date_sk#11], [d_date_sk#12], Inner, BuildRight
                        :     :     :- *(6) BroadcastHashJoin [cs_order_number#6], [cr_order_number#13], LeftAnti, BuildRight
                        :     :     :  :- *(6) Project [cs_ship_date_sk#11, cs_ship_addr_sk#9, cs_call_center_sk#7, cs_order_number#6, cs_ext_ship_cost#4, cs_net_profit#5]
                        :     :     :  :  +- *(6) BroadcastHashJoin [cs_order_number#6], [cs_order_number#6#14], LeftSemi, BuildRight, NOT (cs_warehouse_sk#15 = cs_warehouse_sk#15#16)
                        :     :     :  :     :- *(6) Project [cs_ship_date_sk#11, cs_ship_addr_sk#9, cs_call_center_sk#7, cs_warehouse_sk#15, cs_order_number#6, cs_ext_ship_cost#4, cs_net_profit#5]
                        :     :     :  :     :  +- *(6) Filter ((isnotnull(cs_ship_date_sk#11) && isnotnull(cs_ship_addr_sk#9)) && isnotnull(cs_call_center_sk#7))
                        :     :     :  :     :     +- *(6) FileScan parquet default.catalog_sales[cs_ship_date_sk#11,cs_ship_addr_sk#9,cs_call_center_sk#7,cs_warehouse_sk#15,cs_order_number#6,cs_ext_ship_cost#4,cs_net_profit#5] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_ship_date_sk), IsNotNull(cs_ship_addr_sk), IsNotNull(cs_call_center_sk)], ReadSchema: struct<cs_ship_date_sk:int,cs_ship_addr_sk:int,cs_call_center_sk:int,cs_warehouse_sk:int,cs_order...
                        :     :     :  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)))
                        :     :     :  :        +- *(1) Project [cs_warehouse_sk#15 AS cs_warehouse_sk#15#16, cs_order_number#6 AS cs_order_number#6#14]
                        :     :     :  :           +- *(1) FileScan parquet default.catalog_sales[cs_warehouse_sk#15,cs_order_number#6] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/catalog_sales], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<cs_warehouse_sk:int,cs_order_number:int>
                        :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                        :     :     :     +- *(2) FileScan parquet default.catalog_returns[cr_order_number#13] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/catalog_returns], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<cr_order_number:int>
                        :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                        :     :        +- *(3) Project [d_date_sk#12]
                        :     :           +- *(3) Filter (((isnotnull(d_date#17) && (cast(d_date#17 as string) >= 2002-02-01)) && (d_date#17 <= 11779)) && isnotnull(d_date_sk#12))
                        :     :              +- *(3) FileScan parquet default.date_dim[d_date_sk#12,d_date#17] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), LessThanOrEqual(d_date,2002-04-02), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date>
                        :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                        :        +- *(4) Project [ca_address_sk#10]
                        :           +- *(4) Filter ((isnotnull(ca_state#18) && (ca_state#18 = GA)) && isnotnull(ca_address_sk#10))
                        :              +- *(4) FileScan parquet default.customer_address[ca_address_sk#10,ca_state#18] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,GA), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>
                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           +- *(5) Project [cc_call_center_sk#8]
                              +- *(5) Filter ((isnotnull(cc_county#19) && (cc_county#19 = Williamson County)) && isnotnull(cc_call_center_sk#8))
                                 +- *(5) FileScan parquet default.call_center[cc_call_center_sk#8,cc_county#19] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/C:/Users/apdave/github/hyperspace-1/spark-warehouse/call_center], PartitionFilters: [], PushedFilters: [IsNotNull(cc_county), EqualTo(cc_county,Williamson County), IsNotNull(cc_call_center_sk)], ReadSchema: struct<cc_call_center_sk:int,cc_county:string>