== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[channel#1 ASC NULLS FIRST,id#2 ASC NULLS FIRST], output=[channel#1,id#2,sales#3,returns#4,profit#5])
+- *(49) HashAggregate(keys=[channel#1, id#2, spark_grouping_id#6], functions=[sum(sales#7), sum(returns#8), sum(profit#9)])
   +- Exchange hashpartitioning(channel#1, id#2, spark_grouping_id#6, 5)
      +- *(48) HashAggregate(keys=[channel#1, id#2, spark_grouping_id#6], functions=[partial_sum(sales#7), partial_sum(returns#8), partial_sum(profit#9)])
         +- *(48) Expand [List(sales#7, returns#8, profit#9, channel#10, id#11, 0), List(sales#7, returns#8, profit#9, channel#10, null, 1), List(sales#7, returns#8, profit#9, null, null, 3)], [sales#7, returns#8, profit#9, channel#1, id#2, spark_grouping_id#6]
            +- Union
               :- *(18) Project [sales#7, coalesce(returns#12, 0.00) AS returns#8, CheckOverflow((promote_precision(cast(profit#13 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#14, 0.00) as decimal(18,2)))), DecimalType(18,2)) AS profit#9, store channel AS channel#10, s_store_sk#15 AS id#11]
               :  +- SortMergeJoin [s_store_sk#15], [s_store_sk#16], LeftOuter
               :     :- *(7) Sort [s_store_sk#15 ASC NULLS FIRST], false, 0
               :     :  +- *(7) HashAggregate(keys=[s_store_sk#15], functions=[sum(UnscaledValue(ss_ext_sales_price#17)), sum(UnscaledValue(ss_net_profit#18))])
               :     :     +- *(7) HashAggregate(keys=[s_store_sk#15], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#17)), partial_sum(UnscaledValue(ss_net_profit#18))])
               :     :        +- *(7) Project [ss_ext_sales_price#17, ss_net_profit#18, s_store_sk#15]
               :     :           +- *(7) SortMergeJoin [ss_store_sk#19], [s_store_sk#15], Inner
               :     :              :- *(4) Sort [ss_store_sk#19 ASC NULLS FIRST], false, 0
               :     :              :  +- Exchange hashpartitioning(ss_store_sk#19, 5)
               :     :              :     +- *(3) Project [ss_store_sk#19, ss_ext_sales_price#17, ss_net_profit#18]
               :     :              :        +- *(3) SortMergeJoin [ss_sold_date_sk#20], [d_date_sk#21], Inner
               :     :              :           :- *(1) Project [ss_sold_date_sk#20, ss_store_sk#19, ss_ext_sales_price#17, ss_net_profit#18]
               :     :              :           :  +- *(1) Filter (isnotnull(ss_sold_date_sk#20) && isnotnull(ss_store_sk#19))
               :     :              :           :     +- *(1) FileScan Hyperspace(Type: CI, Name: JoinIndex12-index-1-ss_sold_date_sk-21, LogVersion: 0) default.store_sales[ss_sold_date_sk#20,ss_store_sk#19,ss_ext_sales_price#17,ss_net_profit#18] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(..., SelectedBucketsCount: 200 out of 200
               :     :              :           +- *(2) Project [d_date_sk#21]
               :     :              :              +- *(2) Filter (((isnotnull(d_date#22) && (d_date#22 >= 11172)) && (d_date#22 <= 11202)) && isnotnull(d_date_sk#21))
               :     :              :                 +- *(2) FileScan Hyperspace(Type: CI, Name: JoinIndex03-index-0-d_date_sk-10, LogVersion: 0) default.date_dim[d_date_sk#21,d_date#22] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-08-03), LessThanOrEqual(d_date,2000-09-02), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>, SelectedBucketsCount: 200 out of 200
               :     :              +- *(6) Sort [s_store_sk#15 ASC NULLS FIRST], false, 0
               :     :                 +- Exchange hashpartitioning(s_store_sk#15, 5)
               :     :                    +- *(5) Project [s_store_sk#15]
               :     :                       +- *(5) Filter isnotnull(s_store_sk#15)
               :     :                          +- *(5) FileScan Hyperspace(Type: CI, Name: JoinIndex24-index-4-s_store_sk-15, LogVersion: 0) default.store[s_store_sk#15] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int>
               :     +- *(17) Sort [s_store_sk#16 ASC NULLS FIRST], false, 0
               :        +- *(17) HashAggregate(keys=[s_store_sk#16], functions=[sum(UnscaledValue(sr_return_amt#23)), sum(UnscaledValue(sr_net_loss#24))])
               :           +- Exchange hashpartitioning(s_store_sk#16, 5)
               :              +- *(16) HashAggregate(keys=[s_store_sk#16], functions=[partial_sum(UnscaledValue(sr_return_amt#23)), partial_sum(UnscaledValue(sr_net_loss#24))])
               :                 +- *(16) Project [sr_return_amt#23, sr_net_loss#24, s_store_sk#16]
               :                    +- *(16) SortMergeJoin [sr_store_sk#25], [cast(s_store_sk#16 as bigint)], Inner
               :                       :- *(13) Sort [sr_store_sk#25 ASC NULLS FIRST], false, 0
               :                       :  +- Exchange hashpartitioning(sr_store_sk#25, 5)
               :                       :     +- *(12) Project [sr_store_sk#25, sr_return_amt#23, sr_net_loss#24]
               :                       :        +- *(12) SortMergeJoin [sr_returned_date_sk#26], [cast(d_date_sk#21 as bigint)], Inner
               :                       :           :- *(9) Sort [sr_returned_date_sk#26 ASC NULLS FIRST], false, 0
               :                       :           :  +- Exchange hashpartitioning(sr_returned_date_sk#26, 5)
               :                       :           :     +- *(8) Project [sr_returned_date_sk#26, sr_store_sk#25, sr_return_amt#23, sr_net_loss#24]
               :                       :           :        +- *(8) Filter (isnotnull(sr_returned_date_sk#26) && isnotnull(sr_store_sk#25))
               :                       :           :           +- *(8) FileScan Hyperspace(Type: CI, Name: JoinIndex23-index-37-sr_returned_date_sk-7, LogVersion: 0) default.store_returns[sr_returned_date_sk#26,sr_store_sk#25,sr_return_amt#23,sr_net_loss#24] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(sr_returned_date_sk), IsNotNull(sr_store_sk)], ReadSchema: struct<sr_returned_date_sk:bigint,sr_store_sk:bigint,sr_return_amt:decimal(7,2),sr_net_loss:decim...
               :                       :           +- *(11) Sort [cast(d_date_sk#21 as bigint) ASC NULLS FIRST], false, 0
               :                       :              +- Exchange hashpartitioning(cast(d_date_sk#21 as bigint), 5)
               :                       :                 +- *(10) Project [d_date_sk#21]
               :                       :                    +- *(10) Filter (((isnotnull(d_date#22) && (d_date#22 >= 11172)) && (d_date#22 <= 11202)) && isnotnull(d_date_sk#21))
               :                       :                       +- *(10) FileScan Hyperspace(Type: CI, Name: FilterIndex06-index-14-d_date-2, LogVersion: 0) default.date_dim[d_date_sk#21,d_date#22] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-08-03), LessThanOrEqual(d_date,2000-09-02), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
               :                       +- *(15) Sort [cast(s_store_sk#16 as bigint) ASC NULLS FIRST], false, 0
               :                          +- Exchange hashpartitioning(cast(s_store_sk#16 as bigint), 5)
               :                             +- *(14) Project [s_store_sk#16]
               :                                +- *(14) Filter isnotnull(s_store_sk#16)
               :                                   +- *(14) FileScan Hyperspace(Type: CI, Name: JoinIndex24-index-4-s_store_sk-15, LogVersion: 0) default.store[s_store_sk#16] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int>
               :- *(29) Project [sales#27, returns#28, CheckOverflow((promote_precision(cast(profit#29 as decimal(18,2))) - promote_precision(cast(profit_loss#30 as decimal(18,2)))), DecimalType(18,2)) AS profit#31, catalog channel AS channel#32, cs_call_center_sk#33 AS id#34]
               :  +- CartesianProduct
               :     :- *(22) HashAggregate(keys=[cs_call_center_sk#33], functions=[sum(UnscaledValue(cs_ext_sales_price#35)), sum(UnscaledValue(cs_net_profit#36))])
               :     :  +- Exchange hashpartitioning(cs_call_center_sk#33, 5)
               :     :     +- *(21) HashAggregate(keys=[cs_call_center_sk#33], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#35)), partial_sum(UnscaledValue(cs_net_profit#36))])
               :     :        +- *(21) Project [cs_call_center_sk#33, cs_ext_sales_price#35, cs_net_profit#36]
               :     :           +- *(21) SortMergeJoin [cs_sold_date_sk#37], [d_date_sk#21], Inner
               :     :              :- *(19) Project [cs_sold_date_sk#37, cs_call_center_sk#33, cs_ext_sales_price#35, cs_net_profit#36]
               :     :              :  +- *(19) Filter isnotnull(cs_sold_date_sk#37)
               :     :              :     +- *(19) FileScan Hyperspace(Type: CI, Name: JoinIndex26-index-6-cs_sold_date_sk-26, LogVersion: 0) default.catalog_sales[cs_sold_date_sk#37,cs_call_center_sk#33,cs_ext_sales_price#35,cs_net_profit#36] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_call_center_sk:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:de..., SelectedBucketsCount: 200 out of 200
               :     :              +- *(20) Project [d_date_sk#21]
               :     :                 +- *(20) Filter (((isnotnull(d_date#22) && (d_date#22 >= 11172)) && (d_date#22 <= 11202)) && isnotnull(d_date_sk#21))
               :     :                    +- *(20) FileScan Hyperspace(Type: CI, Name: JoinIndex03-index-0-d_date_sk-10, LogVersion: 0) default.date_dim[d_date_sk#21,d_date#22] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-08-03), LessThanOrEqual(d_date,2000-09-02), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>, SelectedBucketsCount: 200 out of 200
               :     +- *(28) HashAggregate(keys=[], functions=[sum(UnscaledValue(cr_return_amount#38)), sum(UnscaledValue(cr_net_loss#39))])
               :        +- Exchange SinglePartition
               :           +- *(27) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(cr_return_amount#38)), partial_sum(UnscaledValue(cr_net_loss#39))])
               :              +- *(27) Project [cr_return_amount#38, cr_net_loss#39]
               :                 +- *(27) SortMergeJoin [cr_returned_date_sk#40], [d_date_sk#21], Inner
               :                    :- *(24) Sort [cr_returned_date_sk#40 ASC NULLS FIRST], false, 0
               :                    :  +- Exchange hashpartitioning(cr_returned_date_sk#40, 5)
               :                    :     +- *(23) Project [cr_returned_date_sk#40, cr_return_amount#38, cr_net_loss#39]
               :                    :        +- *(23) Filter isnotnull(cr_returned_date_sk#40)
               :                    :           +- *(23) FileScan parquet default.catalog_returns[cr_returned_date_sk#40,cr_return_amount#38,cr_net_loss#39] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_returned_date_sk)], ReadSchema: struct<cr_returned_date_sk:int,cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>
               :                    +- *(26) Sort [d_date_sk#21 ASC NULLS FIRST], false, 0
               :                       +- Exchange hashpartitioning(d_date_sk#21, 5)
               :                          +- *(25) Project [d_date_sk#21]
               :                             +- *(25) Filter (((isnotnull(d_date#22) && (d_date#22 >= 11172)) && (d_date#22 <= 11202)) && isnotnull(d_date_sk#21))
               :                                +- *(25) FileScan Hyperspace(Type: CI, Name: FilterIndex06-index-14-d_date-2, LogVersion: 0) default.date_dim[d_date_sk#21,d_date#22] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-08-03), LessThanOrEqual(d_date,2000-09-02), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
               +- *(47) Project [sales#41, coalesce(returns#42, 0.00) AS returns#43, CheckOverflow((promote_precision(cast(profit#44 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#45, 0.00) as decimal(18,2)))), DecimalType(18,2)) AS profit#46, web channel AS channel#47, wp_web_page_sk#48 AS id#49]
                  +- SortMergeJoin [wp_web_page_sk#48], [wp_web_page_sk#50], LeftOuter
                     :- *(36) Sort [wp_web_page_sk#48 ASC NULLS FIRST], false, 0
                     :  +- *(36) HashAggregate(keys=[wp_web_page_sk#48], functions=[sum(UnscaledValue(ws_ext_sales_price#51)), sum(UnscaledValue(ws_net_profit#52))])
                     :     +- *(36) HashAggregate(keys=[wp_web_page_sk#48], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#51)), partial_sum(UnscaledValue(ws_net_profit#52))])
                     :        +- *(36) Project [ws_ext_sales_price#51, ws_net_profit#52, wp_web_page_sk#48]
                     :           +- *(36) SortMergeJoin [ws_web_page_sk#53], [wp_web_page_sk#48], Inner
                     :              :- *(33) Sort [ws_web_page_sk#53 ASC NULLS FIRST], false, 0
                     :              :  +- Exchange hashpartitioning(ws_web_page_sk#53, 5)
                     :              :     +- *(32) Project [ws_web_page_sk#53, ws_ext_sales_price#51, ws_net_profit#52]
                     :              :        +- *(32) SortMergeJoin [ws_sold_date_sk#54], [d_date_sk#21], Inner
                     :              :           :- *(30) Project [ws_sold_date_sk#54, ws_web_page_sk#53, ws_ext_sales_price#51, ws_net_profit#52]
                     :              :           :  +- *(30) Filter (isnotnull(ws_sold_date_sk#54) && isnotnull(ws_web_page_sk#53))
                     :              :           :     +- *(30) FileScan Hyperspace(Type: CI, Name: JoinIndex37-index-9-ws_sold_date_sk-21, LogVersion: 0) default.web_sales[ws_sold_date_sk#54,ws_web_page_sk#53,ws_ext_sales_price#51,ws_net_profit#52] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_web_page_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_web_page_sk:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decim..., SelectedBucketsCount: 200 out of 200
                     :              :           +- *(31) Project [d_date_sk#21]
                     :              :              +- *(31) Filter (((isnotnull(d_date#22) && (d_date#22 >= 11172)) && (d_date#22 <= 11202)) && isnotnull(d_date_sk#21))
                     :              :                 +- *(31) FileScan Hyperspace(Type: CI, Name: JoinIndex03-index-0-d_date_sk-10, LogVersion: 0) default.date_dim[d_date_sk#21,d_date#22] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-08-03), LessThanOrEqual(d_date,2000-09-02), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>, SelectedBucketsCount: 200 out of 200
                     :              +- *(35) Sort [wp_web_page_sk#48 ASC NULLS FIRST], false, 0
                     :                 +- Exchange hashpartitioning(wp_web_page_sk#48, 5)
                     :                    +- *(34) Project [wp_web_page_sk#48]
                     :                       +- *(34) Filter isnotnull(wp_web_page_sk#48)
                     :                          +- *(34) FileScan parquet default.web_page[wp_web_page_sk#48] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/web_page], PartitionFilters: [], PushedFilters: [IsNotNull(wp_web_page_sk)], ReadSchema: struct<wp_web_page_sk:int>
                     +- *(46) Sort [wp_web_page_sk#50 ASC NULLS FIRST], false, 0
                        +- *(46) HashAggregate(keys=[wp_web_page_sk#50], functions=[sum(UnscaledValue(wr_return_amt#55)), sum(UnscaledValue(wr_net_loss#56))])
                           +- Exchange hashpartitioning(wp_web_page_sk#50, 5)
                              +- *(45) HashAggregate(keys=[wp_web_page_sk#50], functions=[partial_sum(UnscaledValue(wr_return_amt#55)), partial_sum(UnscaledValue(wr_net_loss#56))])
                                 +- *(45) Project [wr_return_amt#55, wr_net_loss#56, wp_web_page_sk#50]
                                    +- *(45) SortMergeJoin [wr_web_page_sk#57], [cast(wp_web_page_sk#50 as bigint)], Inner
                                       :- *(42) Sort [wr_web_page_sk#57 ASC NULLS FIRST], false, 0
                                       :  +- Exchange hashpartitioning(wr_web_page_sk#57, 5)
                                       :     +- *(41) Project [wr_web_page_sk#57, wr_return_amt#55, wr_net_loss#56]
                                       :        +- *(41) SortMergeJoin [wr_returned_date_sk#58], [cast(d_date_sk#21 as bigint)], Inner
                                       :           :- *(38) Sort [wr_returned_date_sk#58 ASC NULLS FIRST], false, 0
                                       :           :  +- Exchange hashpartitioning(wr_returned_date_sk#58, 5)
                                       :           :     +- *(37) Project [wr_returned_date_sk#58, wr_web_page_sk#57, wr_return_amt#55, wr_net_loss#56]
                                       :           :        +- *(37) Filter (isnotnull(wr_returned_date_sk#58) && isnotnull(wr_web_page_sk#57))
                                       :           :           +- *(37) FileScan parquet default.web_returns[wr_returned_date_sk#58,wr_web_page_sk#57,wr_return_amt#55,wr_net_loss#56] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/web_returns], PartitionFilters: [], PushedFilters: [IsNotNull(wr_returned_date_sk), IsNotNull(wr_web_page_sk)], ReadSchema: struct<wr_returned_date_sk:bigint,wr_web_page_sk:bigint,wr_return_amt:decimal(7,2),wr_net_loss:de...
                                       :           +- *(40) Sort [cast(d_date_sk#21 as bigint) ASC NULLS FIRST], false, 0
                                       :              +- ReusedExchange [d_date_sk#21], Exchange hashpartitioning(cast(d_date_sk#21 as bigint), 5)
                                       +- *(44) Sort [cast(wp_web_page_sk#50 as bigint) ASC NULLS FIRST], false, 0
                                          +- Exchange hashpartitioning(cast(wp_web_page_sk#50 as bigint), 5)
                                             +- *(43) Project [wp_web_page_sk#50]
                                                +- *(43) Filter isnotnull(wp_web_page_sk#50)
                                                   +- *(43) FileScan parquet default.web_page[wp_web_page_sk#50] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/web_page], PartitionFilters: [], PushedFilters: [IsNotNull(wp_web_page_sk)], ReadSchema: struct<wp_web_page_sk:int>