== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#1 ASC NULLS FIRST,c_salutation#2 ASC NULLS FIRST,c_first_name#3 ASC NULLS FIRST,c_last_name#4 ASC NULLS FIRST,c_preferred_cust_flag#5 ASC NULLS FIRST,c_birth_day#6 ASC NULLS FIRST,c_birth_month#7 ASC NULLS FIRST,c_birth_year#8 ASC NULLS FIRST,c_birth_country#9 ASC NULLS FIRST,c_login#10 ASC NULLS FIRST,c_email_address#11 ASC NULLS FIRST,c_last_review_date#12 ASC NULLS FIRST,ctr_total_return#13 ASC NULLS FIRST], output=[c_customer_id#1,c_salutation#2,c_first_name#3,c_last_name#4,c_preferred_cust_flag#5,c_birth_day#6,c_birth_month#7,c_birth_year#8,c_birth_country#9,c_login#10,c_email_address#11,c_last_review_date#12,ctr_total_return#13])
+- *(32) Project [c_customer_id#1, c_salutation#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_day#6, c_birth_month#7, c_birth_year#8, c_birth_country#9, c_login#10, c_email_address#11, c_last_review_date#12, ctr_total_return#13]
   +- *(32) SortMergeJoin [c_current_addr_sk#14], [ca_address_sk#15], Inner
      :- *(29) Sort [c_current_addr_sk#14 ASC NULLS FIRST], false, 0
      :  +- Exchange hashpartitioning(c_current_addr_sk#14, 5)
      :     +- *(28) Project [ctr_total_return#13, c_customer_id#1, c_current_addr_sk#14, c_salutation#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_day#6, c_birth_month#7, c_birth_year#8, c_birth_country#9, c_login#10, c_email_address#11, c_last_review_date#12]
      :        +- *(28) SortMergeJoin [ctr_customer_sk#16], [cast(c_customer_sk#17 as bigint)], Inner
      :           :- *(25) Sort [ctr_customer_sk#16 ASC NULLS FIRST], false, 0
      :           :  +- Exchange hashpartitioning(ctr_customer_sk#16, 5)
      :           :     +- *(24) Project [ctr_customer_sk#16, ctr_total_return#13]
      :           :        +- *(24) SortMergeJoin [ctr_state#18], [ctr_state#18#19], Inner, (cast(ctr_total_return#13 as decimal(24,7)) > (CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#20)
      :           :           :- *(11) Sort [ctr_state#18 ASC NULLS FIRST], false, 0
      :           :           :  +- Exchange hashpartitioning(ctr_state#18, 5)
      :           :           :     +- *(10) Filter isnotnull(ctr_total_return#13)
      :           :           :        +- *(10) HashAggregate(keys=[wr_returning_customer_sk#21, ca_state#22], functions=[sum(UnscaledValue(wr_return_amt#23))])
      :           :           :           +- Exchange hashpartitioning(wr_returning_customer_sk#21, ca_state#22, 5)
      :           :           :              +- *(9) HashAggregate(keys=[wr_returning_customer_sk#21, ca_state#22], functions=[partial_sum(UnscaledValue(wr_return_amt#23))])
      :           :           :                 +- *(9) Project [wr_returning_customer_sk#21, wr_return_amt#23, ca_state#22]
      :           :           :                    +- *(9) SortMergeJoin [wr_returning_addr_sk#24], [cast(ca_address_sk#15 as bigint)], Inner
      :           :           :                       :- *(6) Sort [wr_returning_addr_sk#24 ASC NULLS FIRST], false, 0
      :           :           :                       :  +- Exchange hashpartitioning(wr_returning_addr_sk#24, 5)
      :           :           :                       :     +- *(5) Project [wr_returning_customer_sk#21, wr_returning_addr_sk#24, wr_return_amt#23]
      :           :           :                       :        +- *(5) SortMergeJoin [wr_returned_date_sk#25], [cast(d_date_sk#26 as bigint)], Inner
      :           :           :                       :           :- *(2) Sort [wr_returned_date_sk#25 ASC NULLS FIRST], false, 0
      :           :           :                       :           :  +- Exchange hashpartitioning(wr_returned_date_sk#25, 5)
      :           :           :                       :           :     +- *(1) Project [wr_returned_date_sk#25, wr_returning_customer_sk#21, wr_returning_addr_sk#24, wr_return_amt#23]
      :           :           :                       :           :        +- *(1) Filter ((isnotnull(wr_returned_date_sk#25) && isnotnull(wr_returning_addr_sk#24)) && isnotnull(wr_returning_customer_sk#21))
      :           :           :                       :           :           +- *(1) FileScan parquet default.web_returns[wr_returned_date_sk#25,wr_returning_customer_sk#21,wr_returning_addr_sk#24,wr_return_amt#23] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/web_returns], PartitionFilters: [], PushedFilters: [IsNotNull(wr_returned_date_sk), IsNotNull(wr_returning_addr_sk), IsNotNull(wr_returning_customer..., ReadSchema: struct<wr_returned_date_sk:bigint,wr_returning_customer_sk:bigint,wr_returning_addr_sk:bigint,wr_...
      :           :           :                       :           +- *(4) Sort [cast(d_date_sk#26 as bigint) ASC NULLS FIRST], false, 0
      :           :           :                       :              +- Exchange hashpartitioning(cast(d_date_sk#26 as bigint), 5)
      :           :           :                       :                 +- *(3) Project [d_date_sk#26]
      :           :           :                       :                    +- *(3) Filter ((isnotnull(d_year#27) && (d_year#27 = 2002)) && isnotnull(d_date_sk#26))
      :           :           :                       :                       +- *(3) FileScan Hyperspace(Type: CI, Name: FilterIndex04-index-11-d_year-5, LogVersion: 0) default.date_dim[d_date_sk#26,d_year#27] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
      :           :           :                       +- *(8) Sort [cast(ca_address_sk#15 as bigint) ASC NULLS FIRST], false, 0
      :           :           :                          +- Exchange hashpartitioning(cast(ca_address_sk#15 as bigint), 5)
      :           :           :                             +- *(7) Project [ca_address_sk#15, ca_state#22]
      :           :           :                                +- *(7) Filter (isnotnull(ca_address_sk#15) && isnotnull(ca_state#22))
      :           :           :                                   +- *(7) FileScan Hyperspace(Type: CI, Name: FilterIndex32-index-35-ca_state-11, LogVersion: 0) default.customer_address[ca_address_sk#15,ca_state#22] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_state)], ReadSchema: struct<ca_address_sk:int,ca_state:string>
      :           :           +- *(23) Sort [ctr_state#18#19 ASC NULLS FIRST], false, 0
      :           :              +- Exchange hashpartitioning(ctr_state#18#19, 5)
      :           :                 +- *(22) Filter isnotnull((CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#20)
      :           :                    +- *(22) HashAggregate(keys=[ctr_state#18], functions=[avg(ctr_total_return#13)])
      :           :                       +- Exchange hashpartitioning(ctr_state#18, 5)
      :           :                          +- *(21) HashAggregate(keys=[ctr_state#18], functions=[partial_avg(ctr_total_return#13)])
      :           :                             +- *(21) HashAggregate(keys=[wr_returning_customer_sk#21, ca_state#22], functions=[sum(UnscaledValue(wr_return_amt#23))])
      :           :                                +- Exchange hashpartitioning(wr_returning_customer_sk#21, ca_state#22, 5)
      :           :                                   +- *(20) HashAggregate(keys=[wr_returning_customer_sk#21, ca_state#22], functions=[partial_sum(UnscaledValue(wr_return_amt#23))])
      :           :                                      +- *(20) Project [wr_returning_customer_sk#21, wr_return_amt#23, ca_state#22]
      :           :                                         +- *(20) SortMergeJoin [wr_returning_addr_sk#24], [cast(ca_address_sk#15 as bigint)], Inner
      :           :                                            :- *(17) Sort [wr_returning_addr_sk#24 ASC NULLS FIRST], false, 0
      :           :                                            :  +- Exchange hashpartitioning(wr_returning_addr_sk#24, 5)
      :           :                                            :     +- *(16) Project [wr_returning_customer_sk#21, wr_returning_addr_sk#24, wr_return_amt#23]
      :           :                                            :        +- *(16) SortMergeJoin [wr_returned_date_sk#25], [cast(d_date_sk#26 as bigint)], Inner
      :           :                                            :           :- *(13) Sort [wr_returned_date_sk#25 ASC NULLS FIRST], false, 0
      :           :                                            :           :  +- Exchange hashpartitioning(wr_returned_date_sk#25, 5)
      :           :                                            :           :     +- *(12) Project [wr_returned_date_sk#25, wr_returning_customer_sk#21, wr_returning_addr_sk#24, wr_return_amt#23]
      :           :                                            :           :        +- *(12) Filter (isnotnull(wr_returned_date_sk#25) && isnotnull(wr_returning_addr_sk#24))
      :           :                                            :           :           +- *(12) FileScan parquet default.web_returns[wr_returned_date_sk#25,wr_returning_customer_sk#21,wr_returning_addr_sk#24,wr_return_amt#23] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/web_returns], PartitionFilters: [], PushedFilters: [IsNotNull(wr_returned_date_sk), IsNotNull(wr_returning_addr_sk)], ReadSchema: struct<wr_returned_date_sk:bigint,wr_returning_customer_sk:bigint,wr_returning_addr_sk:bigint,wr_...
      :           :                                            :           +- *(15) Sort [cast(d_date_sk#26 as bigint) ASC NULLS FIRST], false, 0
      :           :                                            :              +- ReusedExchange [d_date_sk#26], Exchange hashpartitioning(cast(d_date_sk#26 as bigint), 5)
      :           :                                            +- *(19) Sort [cast(ca_address_sk#15 as bigint) ASC NULLS FIRST], false, 0
      :           :                                               +- ReusedExchange [ca_address_sk#15, ca_state#22], Exchange hashpartitioning(cast(ca_address_sk#15 as bigint), 5)
      :           +- *(27) Sort [cast(c_customer_sk#17 as bigint) ASC NULLS FIRST], false, 0
      :              +- Exchange hashpartitioning(cast(c_customer_sk#17 as bigint), 5)
      :                 +- *(26) Project [c_customer_sk#17, c_customer_id#1, c_current_addr_sk#14, c_salutation#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_day#6, c_birth_month#7, c_birth_year#8, c_birth_country#9, c_login#10, c_email_address#11, c_last_review_date#12]
      :                    +- *(26) Filter (isnotnull(c_customer_sk#17) && isnotnull(c_current_addr_sk#14))
      :                       +- *(26) FileScan Hyperspace(Type: CI, Name: JoinIndex43-index-8-c_customer_sk-17, LogVersion: 0) default.customer[c_customer_sk#17,c_customer_id#1,c_current_addr_sk#14,c_salutation#2,c_first_name#3,c_last_name#4,c_preferred_cust_flag#5,c_birth_day#6,c_birth_month#7,c_birth_year#8,c_birth_country#9,c_login#10,c_email_address#11,c_last_review_date#12] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_addr_sk:int,c_salutation:string,c_first_n...
      +- *(31) Sort [ca_address_sk#15 ASC NULLS FIRST], false, 0
         +- Exchange hashpartitioning(ca_address_sk#15, 5)
            +- *(30) Project [ca_address_sk#15]
               +- *(30) Filter ((isnotnull(ca_state#22) && (ca_state#22 = GA)) && isnotnull(ca_address_sk#15))
                  +- *(30) FileScan Hyperspace(Type: CI, Name: FilterIndex32-index-35-ca_state-11, LogVersion: 0) default.customer_address[ca_address_sk#15,ca_state#22] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,GA), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>