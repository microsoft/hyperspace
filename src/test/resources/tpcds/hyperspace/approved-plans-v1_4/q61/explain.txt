== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[promotions#1 ASC NULLS FIRST,total#2 ASC NULLS FIRST], output=[promotions#1,total#2,(CAST((CAST(CAST(promotions AS DECIMAL(15,4)) AS DECIMAL(15,4)) / CAST(CAST(total AS DECIMAL(15,4)) AS DECIMAL(15,4))) AS DECIMAL(35,20)) * CAST(CAST(100 AS DECIMAL(3,0)) AS DECIMAL(35,20)))#3])
+- *(45) Project [promotions#1, total#2, CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(promotions#1 as decimal(15,4))) / promote_precision(cast(total#2 as decimal(15,4)))), DecimalType(35,20))) * 100.00000000000000000000), DecimalType(38,19)) AS (CAST((CAST(CAST(promotions AS DECIMAL(15,4)) AS DECIMAL(15,4)) / CAST(CAST(total AS DECIMAL(15,4)) AS DECIMAL(15,4))) AS DECIMAL(35,20)) * CAST(CAST(100 AS DECIMAL(3,0)) AS DECIMAL(35,20)))#3]
   +- CartesianProduct
      :- *(24) HashAggregate(keys=[], functions=[sum(UnscaledValue(ss_ext_sales_price#4))])
      :  +- Exchange SinglePartition
      :     +- *(23) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#4))])
      :        +- *(23) Project [ss_ext_sales_price#4]
      :           +- *(23) SortMergeJoin [ss_item_sk#5], [i_item_sk#6], Inner
      :              :- *(20) Sort [ss_item_sk#5 ASC NULLS FIRST], false, 0
      :              :  +- Exchange hashpartitioning(ss_item_sk#5, 5)
      :              :     +- *(19) Project [ss_item_sk#5, ss_ext_sales_price#4]
      :              :        +- *(19) SortMergeJoin [c_current_addr_sk#7], [ca_address_sk#8], Inner
      :              :           :- *(16) Sort [c_current_addr_sk#7 ASC NULLS FIRST], false, 0
      :              :           :  +- Exchange hashpartitioning(c_current_addr_sk#7, 5)
      :              :           :     +- *(15) Project [ss_item_sk#5, ss_ext_sales_price#4, c_current_addr_sk#7]
      :              :           :        +- *(15) SortMergeJoin [ss_customer_sk#9], [c_customer_sk#10], Inner
      :              :           :           :- *(12) Sort [ss_customer_sk#9 ASC NULLS FIRST], false, 0
      :              :           :           :  +- Exchange hashpartitioning(ss_customer_sk#9, 5)
      :              :           :           :     +- *(11) Project [ss_item_sk#5, ss_customer_sk#9, ss_ext_sales_price#4]
      :              :           :           :        +- *(11) SortMergeJoin [ss_sold_date_sk#11], [d_date_sk#12], Inner
      :              :           :           :           :- *(8) Sort [ss_sold_date_sk#11 ASC NULLS FIRST], false, 0
      :              :           :           :           :  +- Exchange hashpartitioning(ss_sold_date_sk#11, 5)
      :              :           :           :           :     +- *(7) Project [ss_sold_date_sk#11, ss_item_sk#5, ss_customer_sk#9, ss_ext_sales_price#4]
      :              :           :           :           :        +- *(7) SortMergeJoin [ss_promo_sk#13], [p_promo_sk#14], Inner
      :              :           :           :           :           :- *(4) Sort [ss_promo_sk#13 ASC NULLS FIRST], false, 0
      :              :           :           :           :           :  +- Exchange hashpartitioning(ss_promo_sk#13, 5)
      :              :           :           :           :           :     +- *(3) Project [ss_sold_date_sk#11, ss_item_sk#5, ss_customer_sk#9, ss_promo_sk#13, ss_ext_sales_price#4]
      :              :           :           :           :           :        +- *(3) SortMergeJoin [ss_store_sk#15], [s_store_sk#16], Inner
      :              :           :           :           :           :           :- *(1) Project [ss_sold_date_sk#11, ss_item_sk#5, ss_customer_sk#9, ss_store_sk#15, ss_promo_sk#13, ss_ext_sales_price#4]
      :              :           :           :           :           :           :  +- *(1) Filter ((((isnotnull(ss_store_sk#15) && isnotnull(ss_promo_sk#13)) && isnotnull(ss_sold_date_sk#11)) && isnotnull(ss_customer_sk#9)) && isnotnull(ss_item_sk#5))
      :              :           :           :           :           :           :     +- *(1) FileScan Hyperspace(Type: CI, Name: JoinIndex14-index-5-ss_store_sk-20, LogVersion: 0) default.store_sales[ss_sold_date_sk#11,ss_item_sk#5,ss_customer_sk#9,ss_store_sk#15,ss_promo_sk#13,ss_ext_sales_price#4] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_promo_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_e..., SelectedBucketsCount: 200 out of 200
      :              :           :           :           :           :           +- *(2) Project [s_store_sk#16]
      :              :           :           :           :           :              +- *(2) Filter ((isnotnull(s_gmt_offset#17) && (s_gmt_offset#17 = -5.00)) && isnotnull(s_store_sk#16))
      :              :           :           :           :           :                 +- *(2) FileScan Hyperspace(Type: CI, Name: JoinIndex24-index-4-s_store_sk-15, LogVersion: 0) default.store[s_store_sk#16,s_gmt_offset#17] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(s_gmt_offset), EqualTo(s_gmt_offset,-5.00), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_gmt_offset:decimal(5,2)>, SelectedBucketsCount: 200 out of 200
      :              :           :           :           :           +- *(6) Sort [p_promo_sk#14 ASC NULLS FIRST], false, 0
      :              :           :           :           :              +- Exchange hashpartitioning(p_promo_sk#14, 5)
      :              :           :           :           :                 +- *(5) Project [p_promo_sk#14]
      :              :           :           :           :                    +- *(5) Filter ((((p_channel_dmail#18 = Y) || (p_channel_email#19 = Y)) || (p_channel_tv#20 = Y)) && isnotnull(p_promo_sk#14))
      :              :           :           :           :                       +- *(5) FileScan Hyperspace(Type: CI, Name: JoinIndex49-index-40-p_promo_sk-4, LogVersion: 0) default.promotion[p_promo_sk#14,p_channel_dmail#18,p_channel_email#19,p_channel_tv#20] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(p_channel_dmail,Y),EqualTo(p_channel_email,Y)),EqualTo(p_channel_tv,Y)), IsNotNull..., ReadSchema: struct<p_promo_sk:int,p_channel_dmail:string,p_channel_email:string,p_channel_tv:string>
      :              :           :           :           +- *(10) Sort [d_date_sk#12 ASC NULLS FIRST], false, 0
      :              :           :           :              +- Exchange hashpartitioning(d_date_sk#12, 5)
      :              :           :           :                 +- *(9) Project [d_date_sk#12]
      :              :           :           :                    +- *(9) Filter ((((isnotnull(d_year#21) && isnotnull(d_moy#22)) && (d_year#21 = 1998)) && (d_moy#22 = 11)) && isnotnull(d_date_sk#12))
      :              :           :           :                       +- *(9) FileScan Hyperspace(Type: CI, Name: FilterIndex04-index-11-d_year-5, LogVersion: 0) default.date_dim[d_date_sk#12,d_year#21,d_moy#22] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
      :              :           :           +- *(14) Sort [c_customer_sk#10 ASC NULLS FIRST], false, 0
      :              :           :              +- Exchange hashpartitioning(c_customer_sk#10, 5)
      :              :           :                 +- *(13) Project [c_customer_sk#10, c_current_addr_sk#7]
      :              :           :                    +- *(13) Filter (isnotnull(c_customer_sk#10) && isnotnull(c_current_addr_sk#7))
      :              :           :                       +- *(13) FileScan Hyperspace(Type: CI, Name: JoinIndex43-index-8-c_customer_sk-17, LogVersion: 0) default.customer[c_customer_sk#10,c_current_addr_sk#7] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
      :              :           +- *(18) Sort [ca_address_sk#8 ASC NULLS FIRST], false, 0
      :              :              +- Exchange hashpartitioning(ca_address_sk#8, 5)
      :              :                 +- *(17) Project [ca_address_sk#8]
      :              :                    +- *(17) Filter ((isnotnull(ca_gmt_offset#23) && (ca_gmt_offset#23 = -5.00)) && isnotnull(ca_address_sk#8))
      :              :                       +- *(17) FileScan Hyperspace(Type: CI, Name: FilterIndex34-index-45-ca_gmt_offset-1, LogVersion: 0) default.customer_address[ca_address_sk#8,ca_gmt_offset#23] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-5.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>
      :              +- *(22) Sort [i_item_sk#6 ASC NULLS FIRST], false, 0
      :                 +- Exchange hashpartitioning(i_item_sk#6, 5)
      :                    +- *(21) Project [i_item_sk#6]
      :                       +- *(21) Filter ((isnotnull(i_category#24) && (i_category#24 = Jewelry)) && isnotnull(i_item_sk#6))
      :                          +- *(21) FileScan Hyperspace(Type: CI, Name: FilterIndex10-index-39-i_category-9, LogVersion: 0) default.item[i_item_sk#6,i_category#24] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Jewelry), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_category:string>
      +- *(44) HashAggregate(keys=[], functions=[sum(UnscaledValue(ss_ext_sales_price#4))])
         +- Exchange SinglePartition
            +- *(43) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#4))])
               +- *(43) Project [ss_ext_sales_price#4]
                  +- *(43) SortMergeJoin [ss_item_sk#5], [i_item_sk#6], Inner
                     :- *(40) Sort [ss_item_sk#5 ASC NULLS FIRST], false, 0
                     :  +- Exchange hashpartitioning(ss_item_sk#5, 5)
                     :     +- *(39) Project [ss_item_sk#5, ss_ext_sales_price#4]
                     :        +- *(39) SortMergeJoin [c_current_addr_sk#7], [ca_address_sk#8], Inner
                     :           :- *(36) Sort [c_current_addr_sk#7 ASC NULLS FIRST], false, 0
                     :           :  +- Exchange hashpartitioning(c_current_addr_sk#7, 5)
                     :           :     +- *(35) Project [ss_item_sk#5, ss_ext_sales_price#4, c_current_addr_sk#7]
                     :           :        +- *(35) SortMergeJoin [ss_customer_sk#9], [c_customer_sk#10], Inner
                     :           :           :- *(32) Sort [ss_customer_sk#9 ASC NULLS FIRST], false, 0
                     :           :           :  +- Exchange hashpartitioning(ss_customer_sk#9, 5)
                     :           :           :     +- *(31) Project [ss_item_sk#5, ss_customer_sk#9, ss_ext_sales_price#4]
                     :           :           :        +- *(31) SortMergeJoin [ss_sold_date_sk#11], [d_date_sk#12], Inner
                     :           :           :           :- *(28) Sort [ss_sold_date_sk#11 ASC NULLS FIRST], false, 0
                     :           :           :           :  +- Exchange hashpartitioning(ss_sold_date_sk#11, 5)
                     :           :           :           :     +- *(27) Project [ss_sold_date_sk#11, ss_item_sk#5, ss_customer_sk#9, ss_ext_sales_price#4]
                     :           :           :           :        +- *(27) SortMergeJoin [ss_store_sk#15], [s_store_sk#16], Inner
                     :           :           :           :           :- *(25) Project [ss_sold_date_sk#11, ss_item_sk#5, ss_customer_sk#9, ss_store_sk#15, ss_ext_sales_price#4]
                     :           :           :           :           :  +- *(25) Filter (((isnotnull(ss_store_sk#15) && isnotnull(ss_sold_date_sk#11)) && isnotnull(ss_customer_sk#9)) && isnotnull(ss_item_sk#5))
                     :           :           :           :           :     +- *(25) FileScan Hyperspace(Type: CI, Name: JoinIndex14-index-5-ss_store_sk-20, LogVersion: 0) default.store_sales[ss_sold_date_sk#11,ss_item_sk#5,ss_customer_sk#9,ss_store_sk#15,ss_ext_sales_price#4] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_item..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ext_sales_price:d..., SelectedBucketsCount: 200 out of 200
                     :           :           :           :           +- *(26) Project [s_store_sk#16]
                     :           :           :           :              +- *(26) Filter ((isnotnull(s_gmt_offset#17) && (s_gmt_offset#17 = -5.00)) && isnotnull(s_store_sk#16))
                     :           :           :           :                 +- *(26) FileScan Hyperspace(Type: CI, Name: JoinIndex24-index-4-s_store_sk-15, LogVersion: 0) default.store[s_store_sk#16,s_gmt_offset#17] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(s_gmt_offset), EqualTo(s_gmt_offset,-5.00), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_gmt_offset:decimal(5,2)>, SelectedBucketsCount: 200 out of 200
                     :           :           :           +- *(30) Sort [d_date_sk#12 ASC NULLS FIRST], false, 0
                     :           :           :              +- ReusedExchange [d_date_sk#12], Exchange hashpartitioning(d_date_sk#12, 5)
                     :           :           +- *(34) Sort [c_customer_sk#10 ASC NULLS FIRST], false, 0
                     :           :              +- ReusedExchange [c_customer_sk#10, c_current_addr_sk#7], Exchange hashpartitioning(c_customer_sk#10, 5)
                     :           +- *(38) Sort [ca_address_sk#8 ASC NULLS FIRST], false, 0
                     :              +- ReusedExchange [ca_address_sk#8], Exchange hashpartitioning(ca_address_sk#8, 5)
                     +- *(42) Sort [i_item_sk#6 ASC NULLS FIRST], false, 0
                        +- ReusedExchange [i_item_sk#6], Exchange hashpartitioning(i_item_sk#6, 5)