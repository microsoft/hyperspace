== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[w_warehouse_name#1 ASC NULLS FIRST], output=[w_warehouse_name#1,w_warehouse_sq_ft#2,w_city#3,w_county#4,w_state#5,w_country#6,ship_carriers#7,year#8,jan_sales#9,feb_sales#10,mar_sales#11,apr_sales#12,may_sales#13,jun_sales#14,jul_sales#15,aug_sales#16,sep_sales#17,oct_sales#18,nov_sales#19,dec_sales#20,jan_sales_per_sq_foot#21,feb_sales_per_sq_foot#22,mar_sales_per_sq_foot#23,apr_sales_per_sq_foot#24,... 20 more fields])
+- *(38) HashAggregate(keys=[w_warehouse_name#1, w_warehouse_sq_ft#2, w_city#3, w_county#4, w_state#5, w_country#6, ship_carriers#7, year#8], functions=[sum(jan_sales#25), sum(feb_sales#26), sum(mar_sales#27), sum(apr_sales#28), sum(may_sales#29), sum(jun_sales#30), sum(jul_sales#31), sum(aug_sales#32), sum(sep_sales#33), sum(oct_sales#34), sum(nov_sales#35), sum(dec_sales#36), sum(CheckOverflow((promote_precision(jan_sales#25) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(feb_sales#26) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(mar_sales#27) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(apr_sales#28) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(may_sales#29) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(jun_sales#30) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(jul_sales#31) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(aug_sales#32) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(sep_sales#33) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(oct_sales#34) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(nov_sales#35) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(dec_sales#36) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), ... 12 more fields])
   +- Exchange hashpartitioning(w_warehouse_name#1, w_warehouse_sq_ft#2, w_city#3, w_county#4, w_state#5, w_country#6, ship_carriers#7, year#8, 5)
      +- *(37) HashAggregate(keys=[w_warehouse_name#1, w_warehouse_sq_ft#2, w_city#3, w_county#4, w_state#5, w_country#6, ship_carriers#7, year#8], functions=[partial_sum(jan_sales#25), partial_sum(feb_sales#26), partial_sum(mar_sales#27), partial_sum(apr_sales#28), partial_sum(may_sales#29), partial_sum(jun_sales#30), partial_sum(jul_sales#31), partial_sum(aug_sales#32), partial_sum(sep_sales#33), partial_sum(oct_sales#34), partial_sum(nov_sales#35), partial_sum(dec_sales#36), partial_sum(CheckOverflow((promote_precision(jan_sales#25) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(feb_sales#26) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(mar_sales#27) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(apr_sales#28) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(may_sales#29) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(jun_sales#30) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(jul_sales#31) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(aug_sales#32) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(sep_sales#33) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(oct_sales#34) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(nov_sales#35) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(dec_sales#36) / promote_precision(cast(cast(w_warehouse_sq_ft#2 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12))), ... 12 more fields])
         +- Union
            :- *(18) HashAggregate(keys=[w_warehouse_name#1, w_warehouse_sq_ft#2, w_city#3, w_county#4, w_state#5, w_country#6, d_year#37], functions=[sum(CASE WHEN (d_moy#38 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END)])
            :  +- Exchange hashpartitioning(w_warehouse_name#1, w_warehouse_sq_ft#2, w_city#3, w_county#4, w_state#5, w_country#6, d_year#37, 5)
            :     +- *(17) HashAggregate(keys=[w_warehouse_name#1, w_warehouse_sq_ft#2, w_city#3, w_county#4, w_state#5, w_country#6, d_year#37], functions=[partial_sum(CASE WHEN (d_moy#38 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#39 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#41 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#40 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END)])
            :        +- *(17) Project [ws_quantity#40, ws_ext_sales_price#39, ws_net_paid#41, w_warehouse_name#1, w_warehouse_sq_ft#2, w_city#3, w_county#4, w_state#5, w_country#6, d_year#37, d_moy#38]
            :           +- *(17) SortMergeJoin [ws_ship_mode_sk#42], [sm_ship_mode_sk#43], Inner
            :              :- *(14) Sort [ws_ship_mode_sk#42 ASC NULLS FIRST], false, 0
            :              :  +- Exchange hashpartitioning(ws_ship_mode_sk#42, 5)
            :              :     +- *(13) Project [ws_ship_mode_sk#42, ws_quantity#40, ws_ext_sales_price#39, ws_net_paid#41, w_warehouse_name#1, w_warehouse_sq_ft#2, w_city#3, w_county#4, w_state#5, w_country#6, d_year#37, d_moy#38]
            :              :        +- *(13) SortMergeJoin [ws_sold_time_sk#44], [t_time_sk#45], Inner
            :              :           :- *(10) Sort [ws_sold_time_sk#44 ASC NULLS FIRST], false, 0
            :              :           :  +- Exchange hashpartitioning(ws_sold_time_sk#44, 5)
            :              :           :     +- *(9) Project [ws_sold_time_sk#44, ws_ship_mode_sk#42, ws_quantity#40, ws_ext_sales_price#39, ws_net_paid#41, w_warehouse_name#1, w_warehouse_sq_ft#2, w_city#3, w_county#4, w_state#5, w_country#6, d_year#37, d_moy#38]
            :              :           :        +- *(9) SortMergeJoin [ws_sold_date_sk#46], [d_date_sk#47], Inner
            :              :           :           :- *(6) Sort [ws_sold_date_sk#46 ASC NULLS FIRST], false, 0
            :              :           :           :  +- Exchange hashpartitioning(ws_sold_date_sk#46, 5)
            :              :           :           :     +- *(5) Project [ws_sold_date_sk#46, ws_sold_time_sk#44, ws_ship_mode_sk#42, ws_quantity#40, ws_ext_sales_price#39, ws_net_paid#41, w_warehouse_name#1, w_warehouse_sq_ft#2, w_city#3, w_county#4, w_state#5, w_country#6]
            :              :           :           :        +- *(5) SortMergeJoin [ws_warehouse_sk#48], [w_warehouse_sk#49], Inner
            :              :           :           :           :- *(2) Sort [ws_warehouse_sk#48 ASC NULLS FIRST], false, 0
            :              :           :           :           :  +- Exchange hashpartitioning(ws_warehouse_sk#48, 5)
            :              :           :           :           :     +- *(1) Project [ws_sold_date_sk#46, ws_sold_time_sk#44, ws_ship_mode_sk#42, ws_warehouse_sk#48, ws_quantity#40, ws_ext_sales_price#39, ws_net_paid#41]
            :              :           :           :           :        +- *(1) Filter (((isnotnull(ws_warehouse_sk#48) && isnotnull(ws_sold_date_sk#46)) && isnotnull(ws_sold_time_sk#44)) && isnotnull(ws_ship_mode_sk#42))
            :              :           :           :           :           +- *(1) FileScan Hyperspace(Type: CI, Name: JoinIndex37-index-9-ws_sold_date_sk-21, LogVersion: 0) default.web_sales[ws_sold_date_sk#46,ws_sold_time_sk#44,ws_ship_mode_sk#42,ws_warehouse_sk#48,ws_quantity#40,ws_ext_sales_price#39,ws_net_paid#41] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ws_warehouse_sk), IsNotNull(ws_sold_date_sk), IsNotNull(ws_sold_time_sk), IsNotNull(ws..., ReadSchema: struct<ws_sold_date_sk:int,ws_sold_time_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_quantit...
            :              :           :           :           +- *(4) Sort [w_warehouse_sk#49 ASC NULLS FIRST], false, 0
            :              :           :           :              +- Exchange hashpartitioning(w_warehouse_sk#49, 5)
            :              :           :           :                 +- *(3) Project [w_warehouse_sk#49, w_warehouse_name#1, w_warehouse_sq_ft#2, w_city#3, w_county#4, w_state#5, w_country#6]
            :              :           :           :                    +- *(3) Filter isnotnull(w_warehouse_sk#49)
            :              :           :           :                       +- *(3) FileScan Hyperspace(Type: CI, Name: JoinIndex35-index-24-w_warehouse_sk-6, LogVersion: 0) default.warehouse[w_warehouse_sk#49,w_warehouse_name#1,w_warehouse_sq_ft#2,w_city#3,w_county#4,w_state#5,w_country#6] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:st...
            :              :           :           +- *(8) Sort [d_date_sk#47 ASC NULLS FIRST], false, 0
            :              :           :              +- Exchange hashpartitioning(d_date_sk#47, 5)
            :              :           :                 +- *(7) Project [d_date_sk#47, d_year#37, d_moy#38]
            :              :           :                    +- *(7) Filter ((isnotnull(d_year#37) && (d_year#37 = 2001)) && isnotnull(d_date_sk#47))
            :              :           :                       +- *(7) FileScan Hyperspace(Type: CI, Name: FilterIndex04-index-11-d_year-5, LogVersion: 0) default.date_dim[d_date_sk#47,d_year#37,d_moy#38] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
            :              :           +- *(12) Sort [t_time_sk#45 ASC NULLS FIRST], false, 0
            :              :              +- Exchange hashpartitioning(t_time_sk#45, 5)
            :              :                 +- *(11) Project [t_time_sk#45]
            :              :                    +- *(11) Filter (((isnotnull(t_time#50) && (t_time#50 >= 30838)) && (t_time#50 <= 59638)) && isnotnull(t_time_sk#45))
            :              :                       +- *(11) FileScan Hyperspace(Type: CI, Name: JoinIndex20-index-43-t_time_sk-4, LogVersion: 0) default.time_dim[t_time_sk#45,t_time#50] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,30838), LessThanOrEqual(t_time,59638), IsNotNull(t_..., ReadSchema: struct<t_time_sk:int,t_time:int>
            :              +- *(16) Sort [sm_ship_mode_sk#43 ASC NULLS FIRST], false, 0
            :                 +- Exchange hashpartitioning(sm_ship_mode_sk#43, 5)
            :                    +- *(15) Project [sm_ship_mode_sk#43]
            :                       +- *(15) Filter (sm_carrier#51 IN (DHL,BARIAN) && isnotnull(sm_ship_mode_sk#43))
            :                          +- *(15) FileScan parquet default.ship_mode[sm_ship_mode_sk#43,sm_carrier#51] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/ship_mode], PartitionFilters: [], PushedFilters: [In(sm_carrier, [DHL,BARIAN]), IsNotNull(sm_ship_mode_sk)], ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>
            +- *(36) HashAggregate(keys=[w_warehouse_name#1, w_warehouse_sq_ft#2, w_city#3, w_county#4, w_state#5, w_country#6, d_year#37], functions=[sum(CASE WHEN (d_moy#38 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#38 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END)])
               +- Exchange hashpartitioning(w_warehouse_name#1, w_warehouse_sq_ft#2, w_city#3, w_county#4, w_state#5, w_country#6, d_year#37, 5)
                  +- *(35) HashAggregate(keys=[w_warehouse_name#1, w_warehouse_sq_ft#2, w_city#3, w_county#4, w_state#5, w_country#6, d_year#37], functions=[partial_sum(CASE WHEN (d_moy#38 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#52 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#38 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#54 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#53 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END)])
                     +- *(35) Project [cs_quantity#53, cs_sales_price#52, cs_net_paid_inc_tax#54, w_warehouse_name#1, w_warehouse_sq_ft#2, w_city#3, w_county#4, w_state#5, w_country#6, d_year#37, d_moy#38]
                        +- *(35) SortMergeJoin [cs_ship_mode_sk#55], [sm_ship_mode_sk#43], Inner
                           :- *(32) Sort [cs_ship_mode_sk#55 ASC NULLS FIRST], false, 0
                           :  +- Exchange hashpartitioning(cs_ship_mode_sk#55, 5)
                           :     +- *(31) Project [cs_ship_mode_sk#55, cs_quantity#53, cs_sales_price#52, cs_net_paid_inc_tax#54, w_warehouse_name#1, w_warehouse_sq_ft#2, w_city#3, w_county#4, w_state#5, w_country#6, d_year#37, d_moy#38]
                           :        +- *(31) SortMergeJoin [cs_sold_time_sk#56], [t_time_sk#45], Inner
                           :           :- *(28) Sort [cs_sold_time_sk#56 ASC NULLS FIRST], false, 0
                           :           :  +- Exchange hashpartitioning(cs_sold_time_sk#56, 5)
                           :           :     +- *(27) Project [cs_sold_time_sk#56, cs_ship_mode_sk#55, cs_quantity#53, cs_sales_price#52, cs_net_paid_inc_tax#54, w_warehouse_name#1, w_warehouse_sq_ft#2, w_city#3, w_county#4, w_state#5, w_country#6, d_year#37, d_moy#38]
                           :           :        +- *(27) SortMergeJoin [cs_sold_date_sk#57], [d_date_sk#47], Inner
                           :           :           :- *(24) Sort [cs_sold_date_sk#57 ASC NULLS FIRST], false, 0
                           :           :           :  +- Exchange hashpartitioning(cs_sold_date_sk#57, 5)
                           :           :           :     +- *(23) Project [cs_sold_date_sk#57, cs_sold_time_sk#56, cs_ship_mode_sk#55, cs_quantity#53, cs_sales_price#52, cs_net_paid_inc_tax#54, w_warehouse_name#1, w_warehouse_sq_ft#2, w_city#3, w_county#4, w_state#5, w_country#6]
                           :           :           :        +- *(23) SortMergeJoin [cs_warehouse_sk#58], [w_warehouse_sk#49], Inner
                           :           :           :           :- *(20) Sort [cs_warehouse_sk#58 ASC NULLS FIRST], false, 0
                           :           :           :           :  +- Exchange hashpartitioning(cs_warehouse_sk#58, 5)
                           :           :           :           :     +- *(19) Project [cs_sold_date_sk#57, cs_sold_time_sk#56, cs_ship_mode_sk#55, cs_warehouse_sk#58, cs_quantity#53, cs_sales_price#52, cs_net_paid_inc_tax#54]
                           :           :           :           :        +- *(19) Filter (((isnotnull(cs_warehouse_sk#58) && isnotnull(cs_sold_date_sk#57)) && isnotnull(cs_sold_time_sk#56)) && isnotnull(cs_ship_mode_sk#55))
                           :           :           :           :           +- *(19) FileScan Hyperspace(Type: CI, Name: JoinIndex26-index-6-cs_sold_date_sk-26, LogVersion: 0) default.catalog_sales[cs_sold_date_sk#57,cs_sold_time_sk#56,cs_ship_mode_sk#55,cs_warehouse_sk#58,cs_quantity#53,cs_sales_price#52,cs_net_paid_inc_tax#54] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_sold_time_sk), IsNotNull(cs..., ReadSchema: struct<cs_sold_date_sk:int,cs_sold_time_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_quantit...
                           :           :           :           +- *(22) Sort [w_warehouse_sk#49 ASC NULLS FIRST], false, 0
                           :           :           :              +- ReusedExchange [w_warehouse_sk#49, w_warehouse_name#1, w_warehouse_sq_ft#2, w_city#3, w_county#4, w_state#5, w_country#6], Exchange hashpartitioning(w_warehouse_sk#49, 5)
                           :           :           +- *(26) Sort [d_date_sk#47 ASC NULLS FIRST], false, 0
                           :           :              +- ReusedExchange [d_date_sk#47, d_year#37, d_moy#38], Exchange hashpartitioning(d_date_sk#47, 5)
                           :           +- *(30) Sort [t_time_sk#45 ASC NULLS FIRST], false, 0
                           :              +- ReusedExchange [t_time_sk#45], Exchange hashpartitioning(t_time_sk#45, 5)
                           +- *(34) Sort [sm_ship_mode_sk#43 ASC NULLS FIRST], false, 0
                              +- ReusedExchange [sm_ship_mode_sk#43], Exchange hashpartitioning(sm_ship_mode_sk#43, 5)