== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[i_item_id#1 ASC NULLS FIRST,i_item_desc#2 ASC NULLS FIRST,s_store_id#3 ASC NULLS FIRST,s_store_name#4 ASC NULLS FIRST], output=[i_item_id#1,i_item_desc#2,s_store_id#3,s_store_name#4,store_sales_quantity#5,store_returns_quantity#6,catalog_sales_quantity#7])
+- *(30) HashAggregate(keys=[i_item_id#1, i_item_desc#2, s_store_id#3, s_store_name#4], functions=[sum(cast(ss_quantity#8 as bigint)), sum(cast(sr_return_quantity#9 as bigint)), sum(cast(cs_quantity#10 as bigint))])
   +- Exchange hashpartitioning(i_item_id#1, i_item_desc#2, s_store_id#3, s_store_name#4, 5)
      +- *(29) HashAggregate(keys=[i_item_id#1, i_item_desc#2, s_store_id#3, s_store_name#4], functions=[partial_sum(cast(ss_quantity#8 as bigint)), partial_sum(cast(sr_return_quantity#9 as bigint)), partial_sum(cast(cs_quantity#10 as bigint))])
         +- *(29) Project [ss_quantity#8, sr_return_quantity#9, cs_quantity#10, s_store_id#3, s_store_name#4, i_item_id#1, i_item_desc#2]
            +- *(29) SortMergeJoin [ss_item_sk#11], [i_item_sk#12], Inner
               :- *(26) Sort [ss_item_sk#11 ASC NULLS FIRST], false, 0
               :  +- Exchange hashpartitioning(ss_item_sk#11, 5)
               :     +- *(25) Project [ss_item_sk#11, ss_quantity#8, sr_return_quantity#9, cs_quantity#10, s_store_id#3, s_store_name#4]
               :        +- *(25) SortMergeJoin [ss_store_sk#13], [s_store_sk#14], Inner
               :           :- *(22) Sort [ss_store_sk#13 ASC NULLS FIRST], false, 0
               :           :  +- Exchange hashpartitioning(ss_store_sk#13, 5)
               :           :     +- *(21) Project [ss_item_sk#11, ss_store_sk#13, ss_quantity#8, sr_return_quantity#9, cs_quantity#10]
               :           :        +- *(21) SortMergeJoin [cs_sold_date_sk#15], [d_date_sk#16], Inner
               :           :           :- *(18) Sort [cs_sold_date_sk#15 ASC NULLS FIRST], false, 0
               :           :           :  +- Exchange hashpartitioning(cs_sold_date_sk#15, 5)
               :           :           :     +- *(17) Project [ss_item_sk#11, ss_store_sk#13, ss_quantity#8, sr_return_quantity#9, cs_sold_date_sk#15, cs_quantity#10]
               :           :           :        +- *(17) SortMergeJoin [sr_returned_date_sk#17], [cast(d_date_sk#18 as bigint)], Inner
               :           :           :           :- *(14) Sort [sr_returned_date_sk#17 ASC NULLS FIRST], false, 0
               :           :           :           :  +- Exchange hashpartitioning(sr_returned_date_sk#17, 5)
               :           :           :           :     +- *(13) Project [ss_item_sk#11, ss_store_sk#13, ss_quantity#8, sr_returned_date_sk#17, sr_return_quantity#9, cs_sold_date_sk#15, cs_quantity#10]
               :           :           :           :        +- *(13) SortMergeJoin [ss_sold_date_sk#19], [d_date_sk#20], Inner
               :           :           :           :           :- *(10) Sort [ss_sold_date_sk#19 ASC NULLS FIRST], false, 0
               :           :           :           :           :  +- Exchange hashpartitioning(ss_sold_date_sk#19, 5)
               :           :           :           :           :     +- *(9) Project [ss_sold_date_sk#19, ss_item_sk#11, ss_store_sk#13, ss_quantity#8, sr_returned_date_sk#17, sr_return_quantity#9, cs_sold_date_sk#15, cs_quantity#10]
               :           :           :           :           :        +- *(9) SortMergeJoin [sr_customer_sk#21, sr_item_sk#22], [cast(cs_bill_customer_sk#23 as bigint), cast(cs_item_sk#24 as bigint)], Inner
               :           :           :           :           :           :- *(6) Sort [sr_customer_sk#21 ASC NULLS FIRST, sr_item_sk#22 ASC NULLS FIRST], false, 0
               :           :           :           :           :           :  +- Exchange hashpartitioning(sr_customer_sk#21, sr_item_sk#22, 5)
               :           :           :           :           :           :     +- *(5) Project [ss_sold_date_sk#19, ss_item_sk#11, ss_store_sk#13, ss_quantity#8, sr_returned_date_sk#17, sr_item_sk#22, sr_customer_sk#21, sr_return_quantity#9]
               :           :           :           :           :           :        +- *(5) SortMergeJoin [cast(ss_customer_sk#25 as bigint), cast(ss_item_sk#11 as bigint), cast(ss_ticket_number#26 as bigint)], [sr_customer_sk#21, sr_item_sk#22, sr_ticket_number#27], Inner
               :           :           :           :           :           :           :- *(2) Sort [cast(ss_customer_sk#25 as bigint) ASC NULLS FIRST, cast(ss_item_sk#11 as bigint) ASC NULLS FIRST, cast(ss_ticket_number#26 as bigint) ASC NULLS FIRST], false, 0
               :           :           :           :           :           :           :  +- Exchange hashpartitioning(cast(ss_customer_sk#25 as bigint), cast(ss_item_sk#11 as bigint), cast(ss_ticket_number#26 as bigint), 5)
               :           :           :           :           :           :           :     +- *(1) Project [ss_sold_date_sk#19, ss_item_sk#11, ss_customer_sk#25, ss_store_sk#13, ss_ticket_number#26, ss_quantity#8]
               :           :           :           :           :           :           :        +- *(1) Filter ((((isnotnull(ss_item_sk#11) && isnotnull(ss_ticket_number#26)) && isnotnull(ss_customer_sk#25)) && isnotnull(ss_sold_date_sk#19)) && isnotnull(ss_store_sk#13))
               :           :           :           :           :           :           :           +- *(1) FileScan Hyperspace(Type: CI, Name: JoinIndex12-index-1-ss_sold_date_sk-21, LogVersion: 0) default.store_sales[ss_sold_date_sk#19,ss_item_sk#11,ss_customer_sk#25,ss_store_sk#13,ss_ticket_number#26,ss_quantity#8] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_ticket_number), IsNotNull(ss_customer_sk), IsNotNull(ss_sold..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:int...
               :           :           :           :           :           :           +- *(4) Sort [sr_customer_sk#21 ASC NULLS FIRST, sr_item_sk#22 ASC NULLS FIRST, sr_ticket_number#27 ASC NULLS FIRST], false, 0
               :           :           :           :           :           :              +- Exchange hashpartitioning(sr_customer_sk#21, sr_item_sk#22, sr_ticket_number#27, 5)
               :           :           :           :           :           :                 +- *(3) Project [sr_returned_date_sk#17, sr_item_sk#22, sr_customer_sk#21, sr_ticket_number#27, sr_return_quantity#9]
               :           :           :           :           :           :                    +- *(3) Filter (((isnotnull(sr_ticket_number#27) && isnotnull(sr_customer_sk#21)) && isnotnull(sr_item_sk#22)) && isnotnull(sr_returned_date_sk#17))
               :           :           :           :           :           :                       +- *(3) FileScan Hyperspace(Type: CI, Name: JoinIndex21-index-20-sr_item_sk-7, LogVersion: 0) default.store_returns[sr_returned_date_sk#17,sr_item_sk#22,sr_customer_sk#21,sr_ticket_number#27,sr_return_quantity#9] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_customer_sk), IsNotNull(sr_item_sk), IsNotNull(sr_retu..., ReadSchema: struct<sr_returned_date_sk:bigint,sr_item_sk:bigint,sr_customer_sk:bigint,sr_ticket_number:bigint...
               :           :           :           :           :           +- *(8) Sort [cast(cs_bill_customer_sk#23 as bigint) ASC NULLS FIRST, cast(cs_item_sk#24 as bigint) ASC NULLS FIRST], false, 0
               :           :           :           :           :              +- Exchange hashpartitioning(cast(cs_bill_customer_sk#23 as bigint), cast(cs_item_sk#24 as bigint), 5)
               :           :           :           :           :                 +- *(7) Project [cs_sold_date_sk#15, cs_bill_customer_sk#23, cs_item_sk#24, cs_quantity#10]
               :           :           :           :           :                    +- *(7) Filter ((isnotnull(cs_item_sk#24) && isnotnull(cs_bill_customer_sk#23)) && isnotnull(cs_sold_date_sk#15))
               :           :           :           :           :                       +- *(7) FileScan Hyperspace(Type: CI, Name: JoinIndex26-index-6-cs_sold_date_sk-26, LogVersion: 0) default.catalog_sales[cs_sold_date_sk#15,cs_bill_customer_sk#23,cs_item_sk#24,cs_quantity#10] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_bill_customer_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int>
               :           :           :           :           +- *(12) Sort [d_date_sk#20 ASC NULLS FIRST], false, 0
               :           :           :           :              +- Exchange hashpartitioning(d_date_sk#20, 5)
               :           :           :           :                 +- *(11) Project [d_date_sk#20]
               :           :           :           :                    +- *(11) Filter ((((isnotnull(d_moy#28) && isnotnull(d_year#29)) && (d_moy#28 = 9)) && (d_year#29 = 1999)) && isnotnull(d_date_sk#20))
               :           :           :           :                       +- *(11) FileScan Hyperspace(Type: CI, Name: FilterIndex04-index-11-d_year-5, LogVersion: 0) default.date_dim[d_date_sk#20,d_year#29,d_moy#28] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,9), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
               :           :           :           +- *(16) Sort [cast(d_date_sk#18 as bigint) ASC NULLS FIRST], false, 0
               :           :           :              +- Exchange hashpartitioning(cast(d_date_sk#18 as bigint), 5)
               :           :           :                 +- *(15) Project [d_date_sk#18]
               :           :           :                    +- *(15) Filter (((((isnotnull(d_moy#30) && isnotnull(d_year#31)) && (d_moy#30 >= 9)) && (d_moy#30 <= 12)) && (d_year#31 = 1999)) && isnotnull(d_date_sk#18))
               :           :           :                       +- *(15) FileScan Hyperspace(Type: CI, Name: FilterIndex04-index-11-d_year-5, LogVersion: 0) default.date_dim[d_date_sk#18,d_year#31,d_moy#30] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), GreaterThanOrEqual(d_moy,9), LessThanOrEqual(d_moy,12), Equ..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
               :           :           +- *(20) Sort [d_date_sk#16 ASC NULLS FIRST], false, 0
               :           :              +- Exchange hashpartitioning(d_date_sk#16, 5)
               :           :                 +- *(19) Project [d_date_sk#16]
               :           :                    +- *(19) Filter (d_year#32 IN (1999,2000,2001) && isnotnull(d_date_sk#16))
               :           :                       +- *(19) FileScan Hyperspace(Type: CI, Name: FilterIndex04-index-11-d_year-5, LogVersion: 0) default.date_dim[d_date_sk#16,d_year#32] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
               :           +- *(24) Sort [s_store_sk#14 ASC NULLS FIRST], false, 0
               :              +- Exchange hashpartitioning(s_store_sk#14, 5)
               :                 +- *(23) Project [s_store_sk#14, s_store_id#3, s_store_name#4]
               :                    +- *(23) Filter isnotnull(s_store_sk#14)
               :                       +- *(23) FileScan Hyperspace(Type: CI, Name: JoinIndex24-index-4-s_store_sk-15, LogVersion: 0) default.store[s_store_sk#14,s_store_id#3,s_store_name#4] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string>
               +- *(28) Sort [i_item_sk#12 ASC NULLS FIRST], false, 0
                  +- Exchange hashpartitioning(i_item_sk#12, 5)
                     +- *(27) Project [i_item_sk#12, i_item_id#1, i_item_desc#2]
                        +- *(27) Filter isnotnull(i_item_sk#12)
                           +- *(27) FileScan Hyperspace(Type: CI, Name: JoinIndex08-index-2-i_item_sk-17, LogVersion: 0) default.item[i_item_sk#12,i_item_id#1,i_item_desc#2] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string>