== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#1 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#2 as decimal(22,6)))), DecimalType(22,6)) ASC NULLS FIRST,s_store_name#3 ASC NULLS FIRST], output=[i_category#4,i_class#5,i_brand#6,s_store_name#3,s_company_name#7,d_moy#8,sum_sales#1,avg_monthly_sales#2])
+- *(14) Project [i_category#4, i_class#5, i_brand#6, s_store_name#3, s_company_name#7, d_moy#8, sum_sales#1, avg_monthly_sales#2]
   +- *(14) Filter (CASE WHEN NOT (avg_monthly_sales#2 = 0.000000) THEN CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#1 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#2 as decimal(22,6)))), DecimalType(22,6)))) / promote_precision(cast(avg_monthly_sales#2 as decimal(22,6)))), DecimalType(38,16)) ELSE null END > 0.1000000000000000)
      +- Window [avg(_w0#9) windowspecdefinition(i_category#4, i_brand#6, s_store_name#3, s_company_name#7, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#2], [i_category#4, i_brand#6, s_store_name#3, s_company_name#7]
         +- *(13) Sort [i_category#4 ASC NULLS FIRST, i_brand#6 ASC NULLS FIRST, s_store_name#3 ASC NULLS FIRST, s_company_name#7 ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(i_category#4, i_brand#6, s_store_name#3, s_company_name#7, 5)
               +- *(12) HashAggregate(keys=[i_category#4, i_class#5, i_brand#6, s_store_name#3, s_company_name#7, d_moy#8], functions=[sum(UnscaledValue(ss_sales_price#10))])
                  +- Exchange hashpartitioning(i_category#4, i_class#5, i_brand#6, s_store_name#3, s_company_name#7, d_moy#8, 5)
                     +- *(11) HashAggregate(keys=[i_category#4, i_class#5, i_brand#6, s_store_name#3, s_company_name#7, d_moy#8], functions=[partial_sum(UnscaledValue(ss_sales_price#10))])
                        +- *(11) Project [i_brand#6, i_class#5, i_category#4, ss_sales_price#10, d_moy#8, s_store_name#3, s_company_name#7]
                           +- *(11) SortMergeJoin [ss_store_sk#11], [s_store_sk#12], Inner
                              :- *(8) Sort [ss_store_sk#11 ASC NULLS FIRST], false, 0
                              :  +- Exchange hashpartitioning(ss_store_sk#11, 5)
                              :     +- *(7) Project [i_brand#6, i_class#5, i_category#4, ss_store_sk#11, ss_sales_price#10, d_moy#8]
                              :        +- *(7) SortMergeJoin [ss_sold_date_sk#13], [d_date_sk#14], Inner
                              :           :- *(4) Sort [ss_sold_date_sk#13 ASC NULLS FIRST], false, 0
                              :           :  +- Exchange hashpartitioning(ss_sold_date_sk#13, 5)
                              :           :     +- *(3) Project [i_brand#6, i_class#5, i_category#4, ss_sold_date_sk#13, ss_store_sk#11, ss_sales_price#10]
                              :           :        +- *(3) SortMergeJoin [i_item_sk#15], [ss_item_sk#16], Inner
                              :           :           :- *(1) Project [i_item_sk#15, i_brand#6, i_class#5, i_category#4]
                              :           :           :  +- *(1) Filter (((i_category#4 IN (Books,Electronics,Sports) && i_class#5 IN (computers,stereo,football)) || (i_category#4 IN (Men,Jewelry,Women) && i_class#5 IN (shirts,birdal,dresses))) && isnotnull(i_item_sk#15))
                              :           :           :     +- *(1) FileScan Hyperspace(Type: CI, Name: JoinIndex08-index-2-i_item_sk-17, LogVersion: 0) default.item[i_item_sk#15,i_brand#6,i_class#5,i_category#4] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [Or(And(In(i_category, [Books,Electronics,Sports]),In(i_class, [computers,stereo,football])),And(..., ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string>, SelectedBucketsCount: 200 out of 200
                              :           :           +- *(2) Project [ss_sold_date_sk#13, ss_item_sk#16, ss_store_sk#11, ss_sales_price#10]
                              :           :              +- *(2) Filter ((isnotnull(ss_item_sk#16) && isnotnull(ss_sold_date_sk#13)) && isnotnull(ss_store_sk#11))
                              :           :                 +- *(2) FileScan Hyperspace(Type: CI, Name: JoinIndex13-index-3-ss_item_sk-16, LogVersion: 0) default.store_sales[ss_sold_date_sk#13,ss_item_sk#16,ss_store_sk#11,ss_sales_price#10] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>, SelectedBucketsCount: 200 out of 200
                              :           +- *(6) Sort [d_date_sk#14 ASC NULLS FIRST], false, 0
                              :              +- Exchange hashpartitioning(d_date_sk#14, 5)
                              :                 +- *(5) Project [d_date_sk#14, d_moy#8]
                              :                    +- *(5) Filter ((isnotnull(d_year#17) && (d_year#17 = 1999)) && isnotnull(d_date_sk#14))
                              :                       +- *(5) FileScan Hyperspace(Type: CI, Name: FilterIndex04-index-11-d_year-5, LogVersion: 0) default.date_dim[d_date_sk#14,d_year#17,d_moy#8] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                              +- *(10) Sort [s_store_sk#12 ASC NULLS FIRST], false, 0
                                 +- Exchange hashpartitioning(s_store_sk#12, 5)
                                    +- *(9) Project [s_store_sk#12, s_store_name#3, s_company_name#7]
                                       +- *(9) Filter isnotnull(s_store_sk#12)
                                          +- *(9) FileScan Hyperspace(Type: CI, Name: JoinIndex24-index-4-s_store_sk-15, LogVersion: 0) default.store[s_store_sk#12,s_store_name#3,s_company_name#7] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>