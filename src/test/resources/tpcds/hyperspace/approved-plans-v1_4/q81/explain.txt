== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#1 ASC NULLS FIRST,c_salutation#2 ASC NULLS FIRST,c_first_name#3 ASC NULLS FIRST,c_last_name#4 ASC NULLS FIRST,ca_street_number#5 ASC NULLS FIRST,ca_street_name#6 ASC NULLS FIRST,ca_street_type#7 ASC NULLS FIRST,ca_suite_number#8 ASC NULLS FIRST,ca_city#9 ASC NULLS FIRST,ca_county#10 ASC NULLS FIRST,ca_state#11 ASC NULLS FIRST,ca_zip#12 ASC NULLS FIRST,ca_country#13 ASC NULLS FIRST,ca_gmt_offset#14 ASC NULLS FIRST,ca_location_type#15 ASC NULLS FIRST,ctr_total_return#16 ASC NULLS FIRST], output=[c_customer_id#1,c_salutation#2,c_first_name#3,c_last_name#4,ca_street_number#5,ca_street_name#6,ca_street_type#7,ca_suite_number#8,ca_city#9,ca_county#10,ca_state#11,ca_zip#12,ca_country#13,ca_gmt_offset#14,ca_location_type#15,ctr_total_return#16])
+- *(32) Project [c_customer_id#1, c_salutation#2, c_first_name#3, c_last_name#4, ca_street_number#5, ca_street_name#6, ca_street_type#7, ca_suite_number#8, ca_city#9, ca_county#10, ca_state#11, ca_zip#12, ca_country#13, ca_gmt_offset#14, ca_location_type#15, ctr_total_return#16]
   +- *(32) SortMergeJoin [c_current_addr_sk#17], [ca_address_sk#18], Inner
      :- *(29) Sort [c_current_addr_sk#17 ASC NULLS FIRST], false, 0
      :  +- Exchange hashpartitioning(c_current_addr_sk#17, 5)
      :     +- *(28) Project [ctr_total_return#16, c_customer_id#1, c_current_addr_sk#17, c_salutation#2, c_first_name#3, c_last_name#4]
      :        +- *(28) SortMergeJoin [ctr_customer_sk#19], [c_customer_sk#20], Inner
      :           :- *(25) Sort [ctr_customer_sk#19 ASC NULLS FIRST], false, 0
      :           :  +- Exchange hashpartitioning(ctr_customer_sk#19, 5)
      :           :     +- *(24) Project [ctr_customer_sk#19, ctr_total_return#16]
      :           :        +- *(24) SortMergeJoin [ctr_state#21], [ctr_state#21#22], Inner, (cast(ctr_total_return#16 as decimal(24,7)) > (CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#23)
      :           :           :- *(11) Sort [ctr_state#21 ASC NULLS FIRST], false, 0
      :           :           :  +- Exchange hashpartitioning(ctr_state#21, 5)
      :           :           :     +- *(10) Filter isnotnull(ctr_total_return#16)
      :           :           :        +- *(10) HashAggregate(keys=[cr_returning_customer_sk#24, ca_state#11], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#25))])
      :           :           :           +- Exchange hashpartitioning(cr_returning_customer_sk#24, ca_state#11, 5)
      :           :           :              +- *(9) HashAggregate(keys=[cr_returning_customer_sk#24, ca_state#11], functions=[partial_sum(UnscaledValue(cr_return_amt_inc_tax#25))])
      :           :           :                 +- *(9) Project [cr_returning_customer_sk#24, cr_return_amt_inc_tax#25, ca_state#11]
      :           :           :                    +- *(9) SortMergeJoin [cr_returning_addr_sk#26], [ca_address_sk#18], Inner
      :           :           :                       :- *(6) Sort [cr_returning_addr_sk#26 ASC NULLS FIRST], false, 0
      :           :           :                       :  +- Exchange hashpartitioning(cr_returning_addr_sk#26, 5)
      :           :           :                       :     +- *(5) Project [cr_returning_customer_sk#24, cr_returning_addr_sk#26, cr_return_amt_inc_tax#25]
      :           :           :                       :        +- *(5) SortMergeJoin [cr_returned_date_sk#27], [d_date_sk#28], Inner
      :           :           :                       :           :- *(2) Sort [cr_returned_date_sk#27 ASC NULLS FIRST], false, 0
      :           :           :                       :           :  +- Exchange hashpartitioning(cr_returned_date_sk#27, 5)
      :           :           :                       :           :     +- *(1) Project [cr_returned_date_sk#27, cr_returning_customer_sk#24, cr_returning_addr_sk#26, cr_return_amt_inc_tax#25]
      :           :           :                       :           :        +- *(1) Filter ((isnotnull(cr_returned_date_sk#27) && isnotnull(cr_returning_addr_sk#26)) && isnotnull(cr_returning_customer_sk#24))
      :           :           :                       :           :           +- *(1) FileScan parquet default.catalog_returns[cr_returned_date_sk#27,cr_returning_customer_sk#24,cr_returning_addr_sk#26,cr_return_amt_inc_tax#25] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_returned_date_sk), IsNotNull(cr_returning_addr_sk), IsNotNull(cr_returning_customer..., ReadSchema: struct<cr_returned_date_sk:int,cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_am...
      :           :           :                       :           +- *(4) Sort [d_date_sk#28 ASC NULLS FIRST], false, 0
      :           :           :                       :              +- Exchange hashpartitioning(d_date_sk#28, 5)
      :           :           :                       :                 +- *(3) Project [d_date_sk#28]
      :           :           :                       :                    +- *(3) Filter ((isnotnull(d_year#29) && (d_year#29 = 2000)) && isnotnull(d_date_sk#28))
      :           :           :                       :                       +- *(3) FileScan Hyperspace(Type: CI, Name: FilterIndex04-index-11-d_year-5, LogVersion: 0) default.date_dim[d_date_sk#28,d_year#29] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
      :           :           :                       +- *(8) Sort [ca_address_sk#18 ASC NULLS FIRST], false, 0
      :           :           :                          +- Exchange hashpartitioning(ca_address_sk#18, 5)
      :           :           :                             +- *(7) Project [ca_address_sk#18, ca_state#11]
      :           :           :                                +- *(7) Filter (isnotnull(ca_address_sk#18) && isnotnull(ca_state#11))
      :           :           :                                   +- *(7) FileScan Hyperspace(Type: CI, Name: FilterIndex32-index-35-ca_state-11, LogVersion: 0) default.customer_address[ca_address_sk#18,ca_state#11] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_state)], ReadSchema: struct<ca_address_sk:int,ca_state:string>
      :           :           +- *(23) Sort [ctr_state#21#22 ASC NULLS FIRST], false, 0
      :           :              +- Exchange hashpartitioning(ctr_state#21#22, 5)
      :           :                 +- *(22) Filter isnotnull((CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#23)
      :           :                    +- *(22) HashAggregate(keys=[ctr_state#21], functions=[avg(ctr_total_return#16)])
      :           :                       +- Exchange hashpartitioning(ctr_state#21, 5)
      :           :                          +- *(21) HashAggregate(keys=[ctr_state#21], functions=[partial_avg(ctr_total_return#16)])
      :           :                             +- *(21) HashAggregate(keys=[cr_returning_customer_sk#24, ca_state#11], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#25))])
      :           :                                +- Exchange hashpartitioning(cr_returning_customer_sk#24, ca_state#11, 5)
      :           :                                   +- *(20) HashAggregate(keys=[cr_returning_customer_sk#24, ca_state#11], functions=[partial_sum(UnscaledValue(cr_return_amt_inc_tax#25))])
      :           :                                      +- *(20) Project [cr_returning_customer_sk#24, cr_return_amt_inc_tax#25, ca_state#11]
      :           :                                         +- *(20) SortMergeJoin [cr_returning_addr_sk#26], [ca_address_sk#18], Inner
      :           :                                            :- *(17) Sort [cr_returning_addr_sk#26 ASC NULLS FIRST], false, 0
      :           :                                            :  +- Exchange hashpartitioning(cr_returning_addr_sk#26, 5)
      :           :                                            :     +- *(16) Project [cr_returning_customer_sk#24, cr_returning_addr_sk#26, cr_return_amt_inc_tax#25]
      :           :                                            :        +- *(16) SortMergeJoin [cr_returned_date_sk#27], [d_date_sk#28], Inner
      :           :                                            :           :- *(13) Sort [cr_returned_date_sk#27 ASC NULLS FIRST], false, 0
      :           :                                            :           :  +- Exchange hashpartitioning(cr_returned_date_sk#27, 5)
      :           :                                            :           :     +- *(12) Project [cr_returned_date_sk#27, cr_returning_customer_sk#24, cr_returning_addr_sk#26, cr_return_amt_inc_tax#25]
      :           :                                            :           :        +- *(12) Filter (isnotnull(cr_returned_date_sk#27) && isnotnull(cr_returning_addr_sk#26))
      :           :                                            :           :           +- *(12) FileScan parquet default.catalog_returns[cr_returned_date_sk#27,cr_returning_customer_sk#24,cr_returning_addr_sk#26,cr_return_amt_inc_tax#25] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_returned_date_sk), IsNotNull(cr_returning_addr_sk)], ReadSchema: struct<cr_returned_date_sk:int,cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_am...
      :           :                                            :           +- *(15) Sort [d_date_sk#28 ASC NULLS FIRST], false, 0
      :           :                                            :              +- ReusedExchange [d_date_sk#28], Exchange hashpartitioning(d_date_sk#28, 5)
      :           :                                            +- *(19) Sort [ca_address_sk#18 ASC NULLS FIRST], false, 0
      :           :                                               +- ReusedExchange [ca_address_sk#18, ca_state#11], Exchange hashpartitioning(ca_address_sk#18, 5)
      :           +- *(27) Sort [c_customer_sk#20 ASC NULLS FIRST], false, 0
      :              +- Exchange hashpartitioning(c_customer_sk#20, 5)
      :                 +- *(26) Project [c_customer_sk#20, c_customer_id#1, c_current_addr_sk#17, c_salutation#2, c_first_name#3, c_last_name#4]
      :                    +- *(26) Filter (isnotnull(c_customer_sk#20) && isnotnull(c_current_addr_sk#17))
      :                       +- *(26) FileScan Hyperspace(Type: CI, Name: JoinIndex43-index-8-c_customer_sk-17, LogVersion: 0) default.customer[c_customer_sk#20,c_customer_id#1,c_current_addr_sk#17,c_salutation#2,c_first_name#3,c_last_name#4] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_addr_sk:int,c_salutation:string,c_first_n...
      +- *(31) Sort [ca_address_sk#18 ASC NULLS FIRST], false, 0
         +- Exchange hashpartitioning(ca_address_sk#18, 5)
            +- *(30) Project [ca_address_sk#18, ca_street_number#5, ca_street_name#6, ca_street_type#7, ca_suite_number#8, ca_city#9, ca_county#10, ca_state#11, ca_zip#12, ca_country#13, ca_gmt_offset#14, ca_location_type#15]
               +- *(30) Filter ((isnotnull(ca_state#11) && (ca_state#11 = GA)) && isnotnull(ca_address_sk#18))
                  +- *(30) FileScan Hyperspace(Type: CI, Name: FilterIndex32-index-35-ca_state-11, LogVersion: 0) default.customer_address[ca_address_sk#18,ca_street_number#5,ca_street_name#6,ca_street_type#7,ca_suite_number#8,ca_city#9,ca_county#10,ca_state#11,ca_zip#12,ca_country#13,ca_gmt_offset#14,ca_location_type#15] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,GA), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_street_number:string,ca_street_name:string,ca_street_type:string,ca_s...