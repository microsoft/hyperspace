== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[c_last_name#1 ASC NULLS FIRST,c_first_name#2 ASC NULLS FIRST,substring(s_city#3, 1, 30) ASC NULLS FIRST,profit#4 ASC NULLS FIRST], output=[c_last_name#1,c_first_name#2,substring(s_city, 1, 30)#5,ss_ticket_number#6,amt#7,profit#4])
+- *(16) Project [c_last_name#1, c_first_name#2, substring(s_city#3, 1, 30) AS substring(s_city, 1, 30)#5, ss_ticket_number#6, amt#7, profit#4, s_city#3]
   +- *(16) SortMergeJoin [ss_customer_sk#8], [c_customer_sk#9], Inner
      :- *(13) Sort [ss_customer_sk#8 ASC NULLS FIRST], false, 0
      :  +- Exchange hashpartitioning(ss_customer_sk#8, 5)
      :     +- *(12) HashAggregate(keys=[ss_ticket_number#6, ss_customer_sk#8, ss_addr_sk#10, s_city#3], functions=[sum(UnscaledValue(ss_coupon_amt#11)), sum(UnscaledValue(ss_net_profit#12))])
      :        +- Exchange hashpartitioning(ss_ticket_number#6, ss_customer_sk#8, ss_addr_sk#10, s_city#3, 5)
      :           +- *(11) HashAggregate(keys=[ss_ticket_number#6, ss_customer_sk#8, ss_addr_sk#10, s_city#3], functions=[partial_sum(UnscaledValue(ss_coupon_amt#11)), partial_sum(UnscaledValue(ss_net_profit#12))])
      :              +- *(11) Project [ss_customer_sk#8, ss_addr_sk#10, ss_ticket_number#6, ss_coupon_amt#11, ss_net_profit#12, s_city#3]
      :                 +- *(11) SortMergeJoin [ss_hdemo_sk#13], [hd_demo_sk#14], Inner
      :                    :- *(8) Sort [ss_hdemo_sk#13 ASC NULLS FIRST], false, 0
      :                    :  +- Exchange hashpartitioning(ss_hdemo_sk#13, 5)
      :                    :     +- *(7) Project [ss_customer_sk#8, ss_hdemo_sk#13, ss_addr_sk#10, ss_ticket_number#6, ss_coupon_amt#11, ss_net_profit#12, s_city#3]
      :                    :        +- *(7) SortMergeJoin [ss_store_sk#15], [s_store_sk#16], Inner
      :                    :           :- *(4) Sort [ss_store_sk#15 ASC NULLS FIRST], false, 0
      :                    :           :  +- Exchange hashpartitioning(ss_store_sk#15, 5)
      :                    :           :     +- *(3) Project [ss_customer_sk#8, ss_hdemo_sk#13, ss_addr_sk#10, ss_store_sk#15, ss_ticket_number#6, ss_coupon_amt#11, ss_net_profit#12]
      :                    :           :        +- *(3) SortMergeJoin [ss_sold_date_sk#17], [d_date_sk#18], Inner
      :                    :           :           :- *(1) Project [ss_sold_date_sk#17, ss_customer_sk#8, ss_hdemo_sk#13, ss_addr_sk#10, ss_store_sk#15, ss_ticket_number#6, ss_coupon_amt#11, ss_net_profit#12]
      :                    :           :           :  +- *(1) Filter (((isnotnull(ss_sold_date_sk#17) && isnotnull(ss_store_sk#15)) && isnotnull(ss_hdemo_sk#13)) && isnotnull(ss_customer_sk#8))
      :                    :           :           :     +- *(1) FileScan Hyperspace(Type: CI, Name: JoinIndex12-index-1-ss_sold_date_sk-21, LogVersion: 0) default.store_sales[ss_sold_date_sk#17,ss_customer_sk#8,ss_hdemo_sk#13,ss_addr_sk#10,ss_store_sk#15,ss_ticket_number#6,ss_coupon_amt#11,ss_net_profit#12] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_hdemo_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_t..., SelectedBucketsCount: 200 out of 200
      :                    :           :           +- *(2) Project [d_date_sk#18]
      :                    :           :              +- *(2) Filter (((isnotnull(d_dow#19) && (d_dow#19 = 1)) && d_year#20 IN (1999,2000,2001)) && isnotnull(d_date_sk#18))
      :                    :           :                 +- *(2) FileScan Hyperspace(Type: CI, Name: JoinIndex03-index-0-d_date_sk-10, LogVersion: 0) default.date_dim[d_date_sk#18,d_year#20,d_dow#19] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_dow), EqualTo(d_dow,1), In(d_year, [1999,2000,2001]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_dow:int>, SelectedBucketsCount: 200 out of 200
      :                    :           +- *(6) Sort [s_store_sk#16 ASC NULLS FIRST], false, 0
      :                    :              +- Exchange hashpartitioning(s_store_sk#16, 5)
      :                    :                 +- *(5) Project [s_store_sk#16, s_city#3]
      :                    :                    +- *(5) Filter (((isnotnull(s_number_employees#21) && (s_number_employees#21 >= 200)) && (s_number_employees#21 <= 295)) && isnotnull(s_store_sk#16))
      :                    :                       +- *(5) FileScan Hyperspace(Type: CI, Name: JoinIndex24-index-4-s_store_sk-15, LogVersion: 0) default.store[s_store_sk#16,s_number_employees#21,s_city#3] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(s_number_employees), GreaterThanOrEqual(s_number_employees,200), LessThanOrEqual(s_num..., ReadSchema: struct<s_store_sk:int,s_number_employees:int,s_city:string>
      :                    +- *(10) Sort [hd_demo_sk#14 ASC NULLS FIRST], false, 0
      :                       +- Exchange hashpartitioning(hd_demo_sk#14, 5)
      :                          +- *(9) Project [hd_demo_sk#14]
      :                             +- *(9) Filter (((hd_dep_count#22 = 6) || (hd_vehicle_count#23 > 2)) && isnotnull(hd_demo_sk#14))
      :                                +- *(9) FileScan Hyperspace(Type: CI, Name: JoinIndex46-index-19-hd_demo_sk-4, LogVersion: 0) default.household_demographics[hd_demo_sk#14,hd_dep_count#22,hd_vehicle_count#23] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [Or(EqualTo(hd_dep_count,6),GreaterThan(hd_vehicle_count,2)), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>
      +- *(15) Sort [c_customer_sk#9 ASC NULLS FIRST], false, 0
         +- Exchange hashpartitioning(c_customer_sk#9, 5)
            +- *(14) Project [c_customer_sk#9, c_first_name#2, c_last_name#1]
               +- *(14) Filter isnotnull(c_customer_sk#9)
                  +- *(14) FileScan Hyperspace(Type: CI, Name: JoinIndex43-index-8-c_customer_sk-17, LogVersion: 0) default.customer[c_customer_sk#9,c_first_name#2,c_last_name#1] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>