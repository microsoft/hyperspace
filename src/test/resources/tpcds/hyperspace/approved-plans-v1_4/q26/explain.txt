== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[i_item_id#1 ASC NULLS FIRST], output=[i_item_id#1,agg1#2,agg2#3,agg3#4,agg4#5])
+- *(18) HashAggregate(keys=[i_item_id#1], functions=[avg(cast(cs_quantity#6 as bigint)), avg(UnscaledValue(cs_list_price#7)), avg(UnscaledValue(cs_coupon_amt#8)), avg(UnscaledValue(cs_sales_price#9))])
   +- Exchange hashpartitioning(i_item_id#1, 5)
      +- *(17) HashAggregate(keys=[i_item_id#1], functions=[partial_avg(cast(cs_quantity#6 as bigint)), partial_avg(UnscaledValue(cs_list_price#7)), partial_avg(UnscaledValue(cs_coupon_amt#8)), partial_avg(UnscaledValue(cs_sales_price#9))])
         +- *(17) Project [cs_quantity#6, cs_list_price#7, cs_sales_price#9, cs_coupon_amt#8, i_item_id#1]
            +- *(17) SortMergeJoin [cs_promo_sk#10], [p_promo_sk#11], Inner
               :- *(14) Sort [cs_promo_sk#10 ASC NULLS FIRST], false, 0
               :  +- Exchange hashpartitioning(cs_promo_sk#10, 5)
               :     +- *(13) Project [cs_promo_sk#10, cs_quantity#6, cs_list_price#7, cs_sales_price#9, cs_coupon_amt#8, i_item_id#1]
               :        +- *(13) SortMergeJoin [cs_item_sk#12], [i_item_sk#13], Inner
               :           :- *(10) Sort [cs_item_sk#12 ASC NULLS FIRST], false, 0
               :           :  +- Exchange hashpartitioning(cs_item_sk#12, 5)
               :           :     +- *(9) Project [cs_item_sk#12, cs_promo_sk#10, cs_quantity#6, cs_list_price#7, cs_sales_price#9, cs_coupon_amt#8]
               :           :        +- *(9) SortMergeJoin [cs_sold_date_sk#14], [d_date_sk#15], Inner
               :           :           :- *(6) Sort [cs_sold_date_sk#14 ASC NULLS FIRST], false, 0
               :           :           :  +- Exchange hashpartitioning(cs_sold_date_sk#14, 5)
               :           :           :     +- *(5) Project [cs_sold_date_sk#14, cs_item_sk#12, cs_promo_sk#10, cs_quantity#6, cs_list_price#7, cs_sales_price#9, cs_coupon_amt#8]
               :           :           :        +- *(5) SortMergeJoin [cs_bill_cdemo_sk#16], [cd_demo_sk#17], Inner
               :           :           :           :- *(2) Sort [cs_bill_cdemo_sk#16 ASC NULLS FIRST], false, 0
               :           :           :           :  +- Exchange hashpartitioning(cs_bill_cdemo_sk#16, 5)
               :           :           :           :     +- *(1) Project [cs_sold_date_sk#14, cs_bill_cdemo_sk#16, cs_item_sk#12, cs_promo_sk#10, cs_quantity#6, cs_list_price#7, cs_sales_price#9, cs_coupon_amt#8]
               :           :           :           :        +- *(1) Filter (((isnotnull(cs_bill_cdemo_sk#16) && isnotnull(cs_sold_date_sk#14)) && isnotnull(cs_item_sk#12)) && isnotnull(cs_promo_sk#10))
               :           :           :           :           +- *(1) FileScan Hyperspace(Type: CI, Name: JoinIndex26-index-6-cs_sold_date_sk-26, LogVersion: 0) default.catalog_sales[cs_sold_date_sk#14,cs_bill_cdemo_sk#16,cs_item_sk#12,cs_promo_sk#10,cs_quantity#6,cs_list_price#7,cs_sales_price#9,cs_coupon_amt#8] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_item_sk), IsNotNull(cs_pro..., ReadSchema: struct<cs_sold_date_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_quantity:int,cs...
               :           :           :           +- *(4) Sort [cd_demo_sk#17 ASC NULLS FIRST], false, 0
               :           :           :              +- Exchange hashpartitioning(cd_demo_sk#17, 5)
               :           :           :                 +- *(3) Project [cd_demo_sk#17]
               :           :           :                    +- *(3) Filter ((((((isnotnull(cd_education_status#18) && isnotnull(cd_marital_status#19)) && isnotnull(cd_gender#20)) && (cd_gender#20 = M)) && (cd_marital_status#19 = S)) && (cd_education_status#18 = College)) && isnotnull(cd_demo_sk#17))
               :           :           :                       +- *(3) FileScan Hyperspace(Type: CI, Name: JoinIndex25-index-18-cd_demo_sk-8, LogVersion: 0) default.customer_demographics[cd_demo_sk#17,cd_gender#20,cd_marital_status#19,cd_education_status#18] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(cd_education_status), IsNotNull(cd_marital_status), IsNotNull(cd_gender), EqualTo(cd_g..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>
               :           :           +- *(8) Sort [d_date_sk#15 ASC NULLS FIRST], false, 0
               :           :              +- Exchange hashpartitioning(d_date_sk#15, 5)
               :           :                 +- *(7) Project [d_date_sk#15]
               :           :                    +- *(7) Filter ((isnotnull(d_year#21) && (d_year#21 = 2000)) && isnotnull(d_date_sk#15))
               :           :                       +- *(7) FileScan Hyperspace(Type: CI, Name: FilterIndex04-index-11-d_year-5, LogVersion: 0) default.date_dim[d_date_sk#15,d_year#21] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
               :           +- *(12) Sort [i_item_sk#13 ASC NULLS FIRST], false, 0
               :              +- Exchange hashpartitioning(i_item_sk#13, 5)
               :                 +- *(11) Project [i_item_sk#13, i_item_id#1]
               :                    +- *(11) Filter isnotnull(i_item_sk#13)
               :                       +- *(11) FileScan Hyperspace(Type: CI, Name: FilterIndex09-index-32-i_item_sk-1, LogVersion: 0) default.item[i_item_sk#13,i_item_id#1] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>
               +- *(16) Sort [p_promo_sk#11 ASC NULLS FIRST], false, 0
                  +- Exchange hashpartitioning(p_promo_sk#11, 5)
                     +- *(15) Project [p_promo_sk#11]
                        +- *(15) Filter (((p_channel_email#22 = N) || (p_channel_event#23 = N)) && isnotnull(p_promo_sk#11))
                           +- *(15) FileScan Hyperspace(Type: CI, Name: JoinIndex49-index-40-p_promo_sk-4, LogVersion: 0) default.promotion[p_promo_sk#11,p_channel_email#22,p_channel_event#23] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [Or(EqualTo(p_channel_email,N),EqualTo(p_channel_event,N)), IsNotNull(p_promo_sk)], ReadSchema: struct<p_promo_sk:int,p_channel_email:string,p_channel_event:string>