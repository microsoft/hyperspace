== Physical Plan ==
CollectLimit 100
+- *(42) HashAggregate(keys=[], functions=[sum(sales#1)])
   +- Exchange SinglePartition
      +- *(41) HashAggregate(keys=[], functions=[partial_sum(sales#1)])
         +- Union
            :- *(20) Project [CheckOverflow((promote_precision(cast(cast(cs_quantity#2 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#3 as decimal(12,2)))), DecimalType(18,2)) AS sales#1]
            :  +- *(20) SortMergeJoin [cs_sold_date_sk#4], [d_date_sk#5], Inner
            :     :- *(17) Sort [cs_sold_date_sk#4 ASC NULLS FIRST], false, 0
            :     :  +- Exchange hashpartitioning(cs_sold_date_sk#4, 5)
            :     :     +- *(16) Project [cs_sold_date_sk#4, cs_quantity#2, cs_list_price#3]
            :     :        +- SortMergeJoin [cs_bill_customer_sk#6], [c_customer_sk#7], LeftSemi
            :     :           :- *(12) Sort [cs_bill_customer_sk#6 ASC NULLS FIRST], false, 0
            :     :           :  +- Exchange hashpartitioning(cs_bill_customer_sk#6, 200)
            :     :           :     +- *(11) Project [cs_sold_date_sk#4, cs_bill_customer_sk#6, cs_quantity#2, cs_list_price#3]
            :     :           :        +- SortMergeJoin [cs_item_sk#8], [item_sk#9], LeftSemi
            :     :           :           :- *(2) Sort [cs_item_sk#8 ASC NULLS FIRST], false, 0
            :     :           :           :  +- Exchange hashpartitioning(cs_item_sk#8, 5)
            :     :           :           :     +- *(1) Project [cs_sold_date_sk#4, cs_bill_customer_sk#6, cs_item_sk#8, cs_quantity#2, cs_list_price#3]
            :     :           :           :        +- *(1) Filter isnotnull(cs_sold_date_sk#4)
            :     :           :           :           +- *(1) FileScan Hyperspace(Type: CI, Name: JoinIndex26-index-6-cs_sold_date_sk-26, LogVersion: 0) default.catalog_sales[cs_sold_date_sk#4,cs_bill_customer_sk#6,cs_item_sk#8,cs_quantity#2,cs_list_price#3] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:d...
            :     :           :           +- *(10) Sort [item_sk#9 ASC NULLS FIRST], false, 0
            :     :           :              +- Exchange hashpartitioning(item_sk#9, 5)
            :     :           :                 +- *(9) Project [item_sk#9]
            :     :           :                    +- *(9) Filter (count(1)#10 > 4)
            :     :           :                       +- *(9) HashAggregate(keys=[substring(i_item_desc#11, 1, 30)#12, i_item_sk#13, d_date#14], functions=[count(1)])
            :     :           :                          +- *(9) HashAggregate(keys=[substring(i_item_desc#11, 1, 30) AS substring(i_item_desc#11, 1, 30)#12, i_item_sk#13, d_date#14], functions=[partial_count(1)])
            :     :           :                             +- *(9) Project [d_date#14, i_item_sk#13, i_item_desc#11]
            :     :           :                                +- *(9) SortMergeJoin [ss_item_sk#15], [i_item_sk#13], Inner
            :     :           :                                   :- *(6) Sort [ss_item_sk#15 ASC NULLS FIRST], false, 0
            :     :           :                                   :  +- Exchange hashpartitioning(ss_item_sk#15, 5)
            :     :           :                                   :     +- *(5) Project [ss_item_sk#15, d_date#14]
            :     :           :                                   :        +- *(5) SortMergeJoin [ss_sold_date_sk#16], [d_date_sk#5], Inner
            :     :           :                                   :           :- *(3) Project [ss_sold_date_sk#16, ss_item_sk#15]
            :     :           :                                   :           :  +- *(3) Filter (isnotnull(ss_sold_date_sk#16) && isnotnull(ss_item_sk#15))
            :     :           :                                   :           :     +- *(3) FileScan Hyperspace(Type: CI, Name: JoinIndex12-index-1-ss_sold_date_sk-21, LogVersion: 0) default.store_sales[ss_sold_date_sk#16,ss_item_sk#15] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int>, SelectedBucketsCount: 200 out of 200
            :     :           :                                   :           +- *(4) Project [d_date_sk#5, d_date#14]
            :     :           :                                   :              +- *(4) Filter (d_year#17 IN (2000,2001,2002,2003) && isnotnull(d_date_sk#5))
            :     :           :                                   :                 +- *(4) FileScan Hyperspace(Type: CI, Name: JoinIndex03-index-0-d_date_sk-10, LogVersion: 0) default.date_dim[d_date_sk#5,d_date#14,d_year#17] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>, SelectedBucketsCount: 200 out of 200
            :     :           :                                   +- *(8) Sort [i_item_sk#13 ASC NULLS FIRST], false, 0
            :     :           :                                      +- Exchange hashpartitioning(i_item_sk#13, 5)
            :     :           :                                         +- *(7) Project [i_item_sk#13, i_item_desc#11]
            :     :           :                                            +- *(7) Filter isnotnull(i_item_sk#13)
            :     :           :                                               +- *(7) FileScan Hyperspace(Type: CI, Name: JoinIndex08-index-2-i_item_sk-17, LogVersion: 0) default.item[i_item_sk#13,i_item_desc#11] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
            :     :           +- *(15) Sort [c_customer_sk#7 ASC NULLS FIRST], false, 0
            :     :              +- *(15) Project [c_customer_sk#7]
            :     :                 +- *(15) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#18 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#19 as decimal(12,2)))), DecimalType(18,2)))#20) && (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#18 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#19 as decimal(12,2)))), DecimalType(18,2)))#20 as decimal(38,8)) > CheckOverflow((0.500000 * promote_precision(cast(Subquery subquery4179 as decimal(32,6)))), DecimalType(38,8))))
            :     :                    :  +- Subquery subquery4179
            :     :                    :     +- *(9) HashAggregate(keys=[], functions=[max(csales#21)])
            :     :                    :        +- Exchange SinglePartition
            :     :                    :           +- *(8) HashAggregate(keys=[], functions=[partial_max(csales#21)])
            :     :                    :              +- *(8) HashAggregate(keys=[c_customer_sk#7], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#18 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#19 as decimal(12,2)))), DecimalType(18,2)))])
            :     :                    :                 +- Exchange hashpartitioning(c_customer_sk#7, 5)
            :     :                    :                    +- *(7) HashAggregate(keys=[c_customer_sk#7], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#18 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#19 as decimal(12,2)))), DecimalType(18,2)))])
            :     :                    :                       +- *(7) Project [ss_quantity#18, ss_sales_price#19, c_customer_sk#7]
            :     :                    :                          +- *(7) SortMergeJoin [ss_sold_date_sk#16], [d_date_sk#5], Inner
            :     :                    :                             :- *(4) Sort [ss_sold_date_sk#16 ASC NULLS FIRST], false, 0
            :     :                    :                             :  +- Exchange hashpartitioning(ss_sold_date_sk#16, 5)
            :     :                    :                             :     +- *(3) Project [ss_sold_date_sk#16, ss_quantity#18, ss_sales_price#19, c_customer_sk#7]
            :     :                    :                             :        +- *(3) SortMergeJoin [ss_customer_sk#22], [c_customer_sk#7], Inner
            :     :                    :                             :           :- *(1) Project [ss_sold_date_sk#16, ss_customer_sk#22, ss_quantity#18, ss_sales_price#19]
            :     :                    :                             :           :  +- *(1) Filter (isnotnull(ss_customer_sk#22) && isnotnull(ss_sold_date_sk#16))
            :     :                    :                             :           :     +- *(1) FileScan Hyperspace(Type: CI, Name: JoinIndex15-index-12-ss_customer_sk-20, LogVersion: 0) default.store_sales[ss_sold_date_sk#16,ss_customer_sk#22,ss_quantity#18,ss_sales_price#19] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>, SelectedBucketsCount: 200 out of 200
            :     :                    :                             :           +- *(2) Project [c_customer_sk#7]
            :     :                    :                             :              +- *(2) Filter isnotnull(c_customer_sk#7)
            :     :                    :                             :                 +- *(2) FileScan Hyperspace(Type: CI, Name: JoinIndex43-index-8-c_customer_sk-17, LogVersion: 0) default.customer[c_customer_sk#7] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>, SelectedBucketsCount: 200 out of 200
            :     :                    :                             +- *(6) Sort [d_date_sk#5 ASC NULLS FIRST], false, 0
            :     :                    :                                +- Exchange hashpartitioning(d_date_sk#5, 5)
            :     :                    :                                   +- *(5) Project [d_date_sk#5]
            :     :                    :                                      +- *(5) Filter (d_year#17 IN (2000,2001,2002,2003) && isnotnull(d_date_sk#5))
            :     :                    :                                         +- *(5) FileScan Hyperspace(Type: CI, Name: FilterIndex04-index-11-d_year-5, LogVersion: 0) default.date_dim[d_date_sk#5,d_year#17] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
            :     :                    +- *(15) HashAggregate(keys=[c_customer_sk#7], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#18 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#19 as decimal(12,2)))), DecimalType(18,2)))])
            :     :                       +- *(15) HashAggregate(keys=[c_customer_sk#7], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#18 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#19 as decimal(12,2)))), DecimalType(18,2)))])
            :     :                          +- *(15) Project [ss_quantity#18, ss_sales_price#19, c_customer_sk#7]
            :     :                             +- *(15) SortMergeJoin [ss_customer_sk#22], [c_customer_sk#7], Inner
            :     :                                :- *(13) Project [ss_customer_sk#22, ss_quantity#18, ss_sales_price#19]
            :     :                                :  +- *(13) Filter isnotnull(ss_customer_sk#22)
            :     :                                :     +- *(13) FileScan Hyperspace(Type: CI, Name: JoinIndex15-index-12-ss_customer_sk-20, LogVersion: 0) default.store_sales[ss_customer_sk#22,ss_quantity#18,ss_sales_price#19] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>, SelectedBucketsCount: 200 out of 200
            :     :                                +- *(14) Project [c_customer_sk#7]
            :     :                                   +- *(14) Filter isnotnull(c_customer_sk#7)
            :     :                                      +- *(14) FileScan Hyperspace(Type: CI, Name: JoinIndex43-index-8-c_customer_sk-17, LogVersion: 0) default.customer[c_customer_sk#7] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>, SelectedBucketsCount: 200 out of 200
            :     +- *(19) Sort [d_date_sk#5 ASC NULLS FIRST], false, 0
            :        +- Exchange hashpartitioning(d_date_sk#5, 5)
            :           +- *(18) Project [d_date_sk#5]
            :              +- *(18) Filter ((((isnotnull(d_year#17) && isnotnull(d_moy#23)) && (d_year#17 = 2000)) && (d_moy#23 = 2)) && isnotnull(d_date_sk#5))
            :                 +- *(18) FileScan Hyperspace(Type: CI, Name: FilterIndex04-index-11-d_year-5, LogVersion: 0) default.date_dim[d_date_sk#5,d_year#17,d_moy#23] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,2), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
            +- *(40) Project [CheckOverflow((promote_precision(cast(cast(ws_quantity#24 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#25 as decimal(12,2)))), DecimalType(18,2)) AS sales#26]
               +- *(40) SortMergeJoin [ws_sold_date_sk#27], [d_date_sk#5], Inner
                  :- *(37) Sort [ws_sold_date_sk#27 ASC NULLS FIRST], false, 0
                  :  +- Exchange hashpartitioning(ws_sold_date_sk#27, 5)
                  :     +- *(36) Project [ws_sold_date_sk#27, ws_quantity#24, ws_list_price#25]
                  :        +- SortMergeJoin [ws_bill_customer_sk#28], [c_customer_sk#7], LeftSemi
                  :           :- *(32) Sort [ws_bill_customer_sk#28 ASC NULLS FIRST], false, 0
                  :           :  +- Exchange hashpartitioning(ws_bill_customer_sk#28, 200)
                  :           :     +- *(31) Project [ws_sold_date_sk#27, ws_bill_customer_sk#28, ws_quantity#24, ws_list_price#25]
                  :           :        +- SortMergeJoin [ws_item_sk#29], [item_sk#9], LeftSemi
                  :           :           :- *(22) Sort [ws_item_sk#29 ASC NULLS FIRST], false, 0
                  :           :           :  +- Exchange hashpartitioning(ws_item_sk#29, 5)
                  :           :           :     +- *(21) Project [ws_sold_date_sk#27, ws_item_sk#29, ws_bill_customer_sk#28, ws_quantity#24, ws_list_price#25]
                  :           :           :        +- *(21) Filter isnotnull(ws_sold_date_sk#27)
                  :           :           :           +- *(21) FileScan Hyperspace(Type: CI, Name: JoinIndex37-index-9-ws_sold_date_sk-21, LogVersion: 0) default.web_sales[ws_sold_date_sk#27,ws_item_sk#29,ws_bill_customer_sk#28,ws_quantity#24,ws_list_price#25] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:d...
                  :           :           +- *(30) Sort [item_sk#9 ASC NULLS FIRST], false, 0
                  :           :              +- ReusedExchange [item_sk#9], Exchange hashpartitioning(item_sk#9, 5)
                  :           +- *(35) Sort [c_customer_sk#7 ASC NULLS FIRST], false, 0
                  :              +- *(35) Project [c_customer_sk#7]
                  :                 +- *(35) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#18 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#19 as decimal(12,2)))), DecimalType(18,2)))#20) && (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#18 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#19 as decimal(12,2)))), DecimalType(18,2)))#20 as decimal(38,8)) > CheckOverflow((0.500000 * promote_precision(cast(Subquery subquery4179 as decimal(32,6)))), DecimalType(38,8))))
                  :                    :  +- Subquery subquery4179
                  :                    :     +- *(9) HashAggregate(keys=[], functions=[max(csales#21)])
                  :                    :        +- Exchange SinglePartition
                  :                    :           +- *(8) HashAggregate(keys=[], functions=[partial_max(csales#21)])
                  :                    :              +- *(8) HashAggregate(keys=[c_customer_sk#7], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#18 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#19 as decimal(12,2)))), DecimalType(18,2)))])
                  :                    :                 +- Exchange hashpartitioning(c_customer_sk#7, 5)
                  :                    :                    +- *(7) HashAggregate(keys=[c_customer_sk#7], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#18 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#19 as decimal(12,2)))), DecimalType(18,2)))])
                  :                    :                       +- *(7) Project [ss_quantity#18, ss_sales_price#19, c_customer_sk#7]
                  :                    :                          +- *(7) SortMergeJoin [ss_sold_date_sk#16], [d_date_sk#5], Inner
                  :                    :                             :- *(4) Sort [ss_sold_date_sk#16 ASC NULLS FIRST], false, 0
                  :                    :                             :  +- Exchange hashpartitioning(ss_sold_date_sk#16, 5)
                  :                    :                             :     +- *(3) Project [ss_sold_date_sk#16, ss_quantity#18, ss_sales_price#19, c_customer_sk#7]
                  :                    :                             :        +- *(3) SortMergeJoin [ss_customer_sk#22], [c_customer_sk#7], Inner
                  :                    :                             :           :- *(1) Project [ss_sold_date_sk#16, ss_customer_sk#22, ss_quantity#18, ss_sales_price#19]
                  :                    :                             :           :  +- *(1) Filter (isnotnull(ss_customer_sk#22) && isnotnull(ss_sold_date_sk#16))
                  :                    :                             :           :     +- *(1) FileScan Hyperspace(Type: CI, Name: JoinIndex15-index-12-ss_customer_sk-20, LogVersion: 0) default.store_sales[ss_sold_date_sk#16,ss_customer_sk#22,ss_quantity#18,ss_sales_price#19] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>, SelectedBucketsCount: 200 out of 200
                  :                    :                             :           +- *(2) Project [c_customer_sk#7]
                  :                    :                             :              +- *(2) Filter isnotnull(c_customer_sk#7)
                  :                    :                             :                 +- *(2) FileScan Hyperspace(Type: CI, Name: JoinIndex43-index-8-c_customer_sk-17, LogVersion: 0) default.customer[c_customer_sk#7] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>, SelectedBucketsCount: 200 out of 200
                  :                    :                             +- *(6) Sort [d_date_sk#5 ASC NULLS FIRST], false, 0
                  :                    :                                +- Exchange hashpartitioning(d_date_sk#5, 5)
                  :                    :                                   +- *(5) Project [d_date_sk#5]
                  :                    :                                      +- *(5) Filter (d_year#17 IN (2000,2001,2002,2003) && isnotnull(d_date_sk#5))
                  :                    :                                         +- *(5) FileScan Hyperspace(Type: CI, Name: FilterIndex04-index-11-d_year-5, LogVersion: 0) default.date_dim[d_date_sk#5,d_year#17] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                  :                    +- *(35) HashAggregate(keys=[c_customer_sk#7], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#18 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#19 as decimal(12,2)))), DecimalType(18,2)))])
                  :                       +- *(35) HashAggregate(keys=[c_customer_sk#7], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#18 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#19 as decimal(12,2)))), DecimalType(18,2)))])
                  :                          +- *(35) Project [ss_quantity#18, ss_sales_price#19, c_customer_sk#7]
                  :                             +- *(35) SortMergeJoin [ss_customer_sk#22], [c_customer_sk#7], Inner
                  :                                :- *(33) Project [ss_customer_sk#22, ss_quantity#18, ss_sales_price#19]
                  :                                :  +- *(33) Filter isnotnull(ss_customer_sk#22)
                  :                                :     +- *(33) FileScan Hyperspace(Type: CI, Name: JoinIndex15-index-12-ss_customer_sk-20, LogVersion: 0) default.store_sales[ss_customer_sk#22,ss_quantity#18,ss_sales_price#19] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>, SelectedBucketsCount: 200 out of 200
                  :                                +- *(34) Project [c_customer_sk#7]
                  :                                   +- *(34) Filter isnotnull(c_customer_sk#7)
                  :                                      +- *(34) FileScan Hyperspace(Type: CI, Name: JoinIndex43-index-8-c_customer_sk-17, LogVersion: 0) default.customer[c_customer_sk#7] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>, SelectedBucketsCount: 200 out of 200
                  +- *(39) Sort [d_date_sk#5 ASC NULLS FIRST], false, 0
                     +- ReusedExchange [d_date_sk#5], Exchange hashpartitioning(d_date_sk#5, 5)