== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[ca_zip#1 ASC NULLS FIRST,ca_city#2 ASC NULLS FIRST], output=[ca_zip#1,ca_city#2,sum(ws_sales_price)#3])
+- *(20) HashAggregate(keys=[ca_zip#1, ca_city#2], functions=[sum(UnscaledValue(ws_sales_price#4))])
   +- Exchange hashpartitioning(ca_zip#1, ca_city#2, 5)
      +- *(19) HashAggregate(keys=[ca_zip#1, ca_city#2], functions=[partial_sum(UnscaledValue(ws_sales_price#4))])
         +- *(19) Project [ws_sales_price#4, ca_city#2, ca_zip#1]
            +- *(19) Filter (substring(ca_zip#1, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) || exists#5)
               +- SortMergeJoin [i_item_id#6], [i_item_id#6#7], ExistenceJoin(exists#5)
                  :- *(16) Sort [i_item_id#6 ASC NULLS FIRST], false, 0
                  :  +- Exchange hashpartitioning(i_item_id#6, 5)
                  :     +- *(15) Project [ws_sales_price#4, ca_city#2, ca_zip#1, i_item_id#6]
                  :        +- *(15) SortMergeJoin [ws_item_sk#8], [i_item_sk#9], Inner
                  :           :- *(12) Sort [ws_item_sk#8 ASC NULLS FIRST], false, 0
                  :           :  +- Exchange hashpartitioning(ws_item_sk#8, 5)
                  :           :     +- *(11) Project [ws_item_sk#8, ws_sales_price#4, ca_city#2, ca_zip#1]
                  :           :        +- *(11) SortMergeJoin [ws_sold_date_sk#10], [d_date_sk#11], Inner
                  :           :           :- *(8) Sort [ws_sold_date_sk#10 ASC NULLS FIRST], false, 0
                  :           :           :  +- Exchange hashpartitioning(ws_sold_date_sk#10, 5)
                  :           :           :     +- *(7) Project [ws_sold_date_sk#10, ws_item_sk#8, ws_sales_price#4, ca_city#2, ca_zip#1]
                  :           :           :        +- *(7) SortMergeJoin [c_current_addr_sk#12], [ca_address_sk#13], Inner
                  :           :           :           :- *(4) Sort [c_current_addr_sk#12 ASC NULLS FIRST], false, 0
                  :           :           :           :  +- Exchange hashpartitioning(c_current_addr_sk#12, 5)
                  :           :           :           :     +- *(3) Project [ws_sold_date_sk#10, ws_item_sk#8, ws_sales_price#4, c_current_addr_sk#12]
                  :           :           :           :        +- *(3) SortMergeJoin [ws_bill_customer_sk#14], [c_customer_sk#15], Inner
                  :           :           :           :           :- *(1) Project [ws_sold_date_sk#10, ws_item_sk#8, ws_bill_customer_sk#14, ws_sales_price#4]
                  :           :           :           :           :  +- *(1) Filter ((isnotnull(ws_bill_customer_sk#14) && isnotnull(ws_sold_date_sk#10)) && isnotnull(ws_item_sk#8))
                  :           :           :           :           :     +- *(1) FileScan Hyperspace(Type: CI, Name: JoinIndex39-index-30-ws_bill_customer_sk-10, LogVersion: 0) default.web_sales[ws_sold_date_sk#10,ws_item_sk#8,ws_bill_customer_sk#14,ws_sales_price#4] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_sales_price:decimal(7,2)>, SelectedBucketsCount: 200 out of 200
                  :           :           :           :           +- *(2) Project [c_customer_sk#15, c_current_addr_sk#12]
                  :           :           :           :              +- *(2) Filter (isnotnull(c_customer_sk#15) && isnotnull(c_current_addr_sk#12))
                  :           :           :           :                 +- *(2) FileScan Hyperspace(Type: CI, Name: JoinIndex43-index-8-c_customer_sk-17, LogVersion: 0) default.customer[c_customer_sk#15,c_current_addr_sk#12] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>, SelectedBucketsCount: 200 out of 200
                  :           :           :           +- *(6) Sort [ca_address_sk#13 ASC NULLS FIRST], false, 0
                  :           :           :              +- Exchange hashpartitioning(ca_address_sk#13, 5)
                  :           :           :                 +- *(5) Project [ca_address_sk#13, ca_city#2, ca_zip#1]
                  :           :           :                    +- *(5) Filter isnotnull(ca_address_sk#13)
                  :           :           :                       +- *(5) FileScan Hyperspace(Type: CI, Name: JoinIndex31-index-7-ca_address_sk-11, LogVersion: 0) default.customer_address[ca_address_sk#13,ca_city#2,ca_zip#1] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_city:string,ca_zip:string>
                  :           :           +- *(10) Sort [d_date_sk#11 ASC NULLS FIRST], false, 0
                  :           :              +- Exchange hashpartitioning(d_date_sk#11, 5)
                  :           :                 +- *(9) Project [d_date_sk#11]
                  :           :                    +- *(9) Filter ((((isnotnull(d_qoy#16) && isnotnull(d_year#17)) && (d_qoy#16 = 2)) && (d_year#17 = 2001)) && isnotnull(d_date_sk#11))
                  :           :                       +- *(9) FileScan Hyperspace(Type: CI, Name: JoinIndex03-index-0-d_date_sk-10, LogVersion: 0) default.date_dim[d_date_sk#11,d_year#17,d_qoy#16] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
                  :           +- *(14) Sort [i_item_sk#9 ASC NULLS FIRST], false, 0
                  :              +- Exchange hashpartitioning(i_item_sk#9, 5)
                  :                 +- *(13) Project [i_item_sk#9, i_item_id#6]
                  :                    +- *(13) Filter isnotnull(i_item_sk#9)
                  :                       +- *(13) FileScan Hyperspace(Type: CI, Name: FilterIndex09-index-32-i_item_sk-1, LogVersion: 0) default.item[i_item_sk#9,i_item_id#6] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>
                  +- *(18) Sort [i_item_id#6#7 ASC NULLS FIRST], false, 0
                     +- Exchange hashpartitioning(i_item_id#6#7, 5)
                        +- *(17) Project [i_item_id#6 AS i_item_id#6#7]
                           +- *(17) Filter i_item_sk#9 IN (2,3,5,7,11,13,17,19,23,29)
                              +- *(17) FileScan Hyperspace(Type: CI, Name: FilterIndex09-index-32-i_item_sk-1, LogVersion: 0) default.item[i_item_sk#9,i_item_id#6] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [In(i_item_sk, [2,3,5,7,11,13,17,19,23,29])], ReadSchema: struct<i_item_sk:int,i_item_id:string>