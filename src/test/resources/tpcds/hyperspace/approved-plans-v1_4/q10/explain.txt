== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[cd_gender#1 ASC NULLS FIRST,cd_marital_status#2 ASC NULLS FIRST,cd_education_status#3 ASC NULLS FIRST,cd_purchase_estimate#4 ASC NULLS FIRST,cd_credit_rating#5 ASC NULLS FIRST,cd_dep_count#6 ASC NULLS FIRST,cd_dep_employed_count#7 ASC NULLS FIRST,cd_dep_college_count#8 ASC NULLS FIRST], output=[cd_gender#1,cd_marital_status#2,cd_education_status#3,cnt1#9,cd_purchase_estimate#4,cnt2#10,cd_credit_rating#5,cnt3#11,cd_dep_count#6,cnt4#12,cd_dep_employed_count#7,cnt5#13,cd_dep_college_count#8,cnt6#14])
+- *(26) HashAggregate(keys=[cd_gender#1, cd_marital_status#2, cd_education_status#3, cd_purchase_estimate#4, cd_credit_rating#5, cd_dep_count#6, cd_dep_employed_count#7, cd_dep_college_count#8], functions=[count(1)])
   +- Exchange hashpartitioning(cd_gender#1, cd_marital_status#2, cd_education_status#3, cd_purchase_estimate#4, cd_credit_rating#5, cd_dep_count#6, cd_dep_employed_count#7, cd_dep_college_count#8, 5)
      +- *(25) HashAggregate(keys=[cd_gender#1, cd_marital_status#2, cd_education_status#3, cd_purchase_estimate#4, cd_credit_rating#5, cd_dep_count#6, cd_dep_employed_count#7, cd_dep_college_count#8], functions=[partial_count(1)])
         +- *(25) Project [cd_gender#1, cd_marital_status#2, cd_education_status#3, cd_purchase_estimate#4, cd_credit_rating#5, cd_dep_count#6, cd_dep_employed_count#7, cd_dep_college_count#8]
            +- *(25) SortMergeJoin [c_current_cdemo_sk#15], [cd_demo_sk#16], Inner
               :- *(22) Sort [c_current_cdemo_sk#15 ASC NULLS FIRST], false, 0
               :  +- Exchange hashpartitioning(c_current_cdemo_sk#15, 5)
               :     +- *(21) Project [c_current_cdemo_sk#15]
               :        +- *(21) SortMergeJoin [c_current_addr_sk#17], [ca_address_sk#18], Inner
               :           :- *(18) Sort [c_current_addr_sk#17 ASC NULLS FIRST], false, 0
               :           :  +- Exchange hashpartitioning(c_current_addr_sk#17, 5)
               :           :     +- *(17) Project [c_current_cdemo_sk#15, c_current_addr_sk#17]
               :           :        +- *(17) Filter (exists#19 || exists#20)
               :           :           +- SortMergeJoin [c_customer_sk#21], [cs_ship_customer_sk#22], ExistenceJoin(exists#20)
               :           :              :- SortMergeJoin [c_customer_sk#21], [ws_bill_customer_sk#23], ExistenceJoin(exists#19)
               :           :              :  :- SortMergeJoin [c_customer_sk#21], [ss_customer_sk#24], LeftSemi
               :           :              :  :  :- *(2) Sort [c_customer_sk#21 ASC NULLS FIRST], false, 0
               :           :              :  :  :  +- Exchange hashpartitioning(c_customer_sk#21, 5)
               :           :              :  :  :     +- *(1) Project [c_customer_sk#21, c_current_cdemo_sk#15, c_current_addr_sk#17]
               :           :              :  :  :        +- *(1) Filter (isnotnull(c_current_addr_sk#17) && isnotnull(c_current_cdemo_sk#15))
               :           :              :  :  :           +- *(1) FileScan Hyperspace(Type: CI, Name: JoinIndex44-index-16-c_current_addr_sk-17, LogVersion: 0) default.customer[c_customer_sk#21,c_current_cdemo_sk#15,c_current_addr_sk#17] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>
               :           :              :  :  +- *(6) Sort [ss_customer_sk#24 ASC NULLS FIRST], false, 0
               :           :              :  :     +- Exchange hashpartitioning(ss_customer_sk#24, 5)
               :           :              :  :        +- *(5) Project [ss_customer_sk#24]
               :           :              :  :           +- *(5) SortMergeJoin [ss_sold_date_sk#25], [d_date_sk#26], Inner
               :           :              :  :              :- *(3) Project [ss_sold_date_sk#25, ss_customer_sk#24]
               :           :              :  :              :  +- *(3) Filter isnotnull(ss_sold_date_sk#25)
               :           :              :  :              :     +- *(3) FileScan Hyperspace(Type: CI, Name: JoinIndex12-index-1-ss_sold_date_sk-21, LogVersion: 0) default.store_sales[ss_sold_date_sk#25,ss_customer_sk#24] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int>, SelectedBucketsCount: 200 out of 200
               :           :              :  :              +- *(4) Project [d_date_sk#26]
               :           :              :  :                 +- *(4) Filter (((((isnotnull(d_year#27) && isnotnull(d_moy#28)) && (d_year#27 = 2002)) && (d_moy#28 >= 1)) && (d_moy#28 <= 4)) && isnotnull(d_date_sk#26))
               :           :              :  :                    +- *(4) FileScan Hyperspace(Type: CI, Name: JoinIndex03-index-0-d_date_sk-10, LogVersion: 0) default.date_dim[d_date_sk#26,d_year#27,d_moy#28] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2002), GreaterThanOrEqual(d_moy,1), LessThan..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>, SelectedBucketsCount: 200 out of 200
               :           :              :  +- *(10) Sort [ws_bill_customer_sk#23 ASC NULLS FIRST], false, 0
               :           :              :     +- Exchange hashpartitioning(ws_bill_customer_sk#23, 5)
               :           :              :        +- *(9) Project [ws_bill_customer_sk#23]
               :           :              :           +- *(9) SortMergeJoin [ws_sold_date_sk#29], [d_date_sk#26], Inner
               :           :              :              :- *(7) Project [ws_sold_date_sk#29, ws_bill_customer_sk#23]
               :           :              :              :  +- *(7) Filter isnotnull(ws_sold_date_sk#29)
               :           :              :              :     +- *(7) FileScan Hyperspace(Type: CI, Name: JoinIndex37-index-9-ws_sold_date_sk-21, LogVersion: 0) default.web_sales[ws_sold_date_sk#29,ws_bill_customer_sk#23] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int>, SelectedBucketsCount: 200 out of 200
               :           :              :              +- *(8) Project [d_date_sk#26]
               :           :              :                 +- *(8) Filter (((((isnotnull(d_year#27) && isnotnull(d_moy#28)) && (d_year#27 = 2002)) && (d_moy#28 >= 1)) && (d_moy#28 <= 4)) && isnotnull(d_date_sk#26))
               :           :              :                    +- *(8) FileScan Hyperspace(Type: CI, Name: JoinIndex03-index-0-d_date_sk-10, LogVersion: 0) default.date_dim[d_date_sk#26,d_year#27,d_moy#28] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2002), GreaterThanOrEqual(d_moy,1), LessThan..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>, SelectedBucketsCount: 200 out of 200
               :           :              +- *(16) Sort [cs_ship_customer_sk#22 ASC NULLS FIRST], false, 0
               :           :                 +- Exchange hashpartitioning(cs_ship_customer_sk#22, 5)
               :           :                    +- *(15) Project [cs_ship_customer_sk#22]
               :           :                       +- *(15) SortMergeJoin [cs_sold_date_sk#30], [d_date_sk#26], Inner
               :           :                          :- *(12) Sort [cs_sold_date_sk#30 ASC NULLS FIRST], false, 0
               :           :                          :  +- Exchange hashpartitioning(cs_sold_date_sk#30, 5)
               :           :                          :     +- *(11) Project [cs_sold_date_sk#30, cs_ship_customer_sk#22]
               :           :                          :        +- *(11) Filter isnotnull(cs_sold_date_sk#30)
               :           :                          :           +- *(11) FileScan parquet default.catalog_sales[cs_sold_date_sk#30,cs_ship_customer_sk#22] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_ship_customer_sk:int>
               :           :                          +- *(14) Sort [d_date_sk#26 ASC NULLS FIRST], false, 0
               :           :                             +- Exchange hashpartitioning(d_date_sk#26, 5)
               :           :                                +- *(13) Project [d_date_sk#26]
               :           :                                   +- *(13) Filter (((((isnotnull(d_year#27) && isnotnull(d_moy#28)) && (d_year#27 = 2002)) && (d_moy#28 >= 1)) && (d_moy#28 <= 4)) && isnotnull(d_date_sk#26))
               :           :                                      +- *(13) FileScan Hyperspace(Type: CI, Name: FilterIndex04-index-11-d_year-5, LogVersion: 0) default.date_dim[d_date_sk#26,d_year#27,d_moy#28] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2002), GreaterThanOrEqual(d_moy,1), LessThan..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
               :           +- *(20) Sort [ca_address_sk#18 ASC NULLS FIRST], false, 0
               :              +- Exchange hashpartitioning(ca_address_sk#18, 5)
               :                 +- *(19) Project [ca_address_sk#18]
               :                    +- *(19) Filter (ca_county#31 IN (Rush County,Toole County,Jefferson County,Dona Ana County,La Porte County) && isnotnull(ca_address_sk#18))
               :                       +- *(19) FileScan Hyperspace(Type: CI, Name: JoinIndex31-index-7-ca_address_sk-11, LogVersion: 0) default.customer_address[ca_address_sk#18,ca_county#31] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [In(ca_county, [Rush County,Toole County,Jefferson County,Dona Ana County,La Porte County]), IsNo..., ReadSchema: struct<ca_address_sk:int,ca_county:string>
               +- *(24) Sort [cd_demo_sk#16 ASC NULLS FIRST], false, 0
                  +- Exchange hashpartitioning(cd_demo_sk#16, 5)
                     +- *(23) Project [cd_demo_sk#16, cd_gender#1, cd_marital_status#2, cd_education_status#3, cd_purchase_estimate#4, cd_credit_rating#5, cd_dep_count#6, cd_dep_employed_count#7, cd_dep_college_count#8]
                        +- *(23) Filter isnotnull(cd_demo_sk#16)
                           +- *(23) FileScan Hyperspace(Type: CI, Name: JoinIndex25-index-18-cd_demo_sk-8, LogVersion: 0) default.customer_demographics[cd_demo_sk#16,cd_gender#1,cd_marital_status#2,cd_education_status#3,cd_purchase_estimate#4,cd_credit_rating#5,cd_dep_count#6,cd_dep_employed_count#7,cd_dep_college_count#8] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk)], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_pur...