== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[cd_gender#1 ASC NULLS FIRST,cd_marital_status#2 ASC NULLS FIRST,cd_education_status#3 ASC NULLS FIRST,cd_purchase_estimate#4 ASC NULLS FIRST,cd_credit_rating#5 ASC NULLS FIRST], output=[cd_gender#1,cd_marital_status#2,cd_education_status#3,cnt1#6,cd_purchase_estimate#4,cnt2#7,cd_credit_rating#5,cnt3#8])
+- *(26) HashAggregate(keys=[cd_gender#1, cd_marital_status#2, cd_education_status#3, cd_purchase_estimate#4, cd_credit_rating#5], functions=[count(1)])
   +- Exchange hashpartitioning(cd_gender#1, cd_marital_status#2, cd_education_status#3, cd_purchase_estimate#4, cd_credit_rating#5, 5)
      +- *(25) HashAggregate(keys=[cd_gender#1, cd_marital_status#2, cd_education_status#3, cd_purchase_estimate#4, cd_credit_rating#5], functions=[partial_count(1)])
         +- *(25) Project [cd_gender#1, cd_marital_status#2, cd_education_status#3, cd_purchase_estimate#4, cd_credit_rating#5]
            +- *(25) SortMergeJoin [c_current_cdemo_sk#9], [cd_demo_sk#10], Inner
               :- *(22) Sort [c_current_cdemo_sk#9 ASC NULLS FIRST], false, 0
               :  +- Exchange hashpartitioning(c_current_cdemo_sk#9, 5)
               :     +- *(21) Project [c_current_cdemo_sk#9]
               :        +- *(21) SortMergeJoin [c_current_addr_sk#11], [ca_address_sk#12], Inner
               :           :- *(18) Sort [c_current_addr_sk#11 ASC NULLS FIRST], false, 0
               :           :  +- Exchange hashpartitioning(c_current_addr_sk#11, 5)
               :           :     +- *(17) Project [c_current_cdemo_sk#9, c_current_addr_sk#11]
               :           :        +- SortMergeJoin [c_customer_sk#13], [cs_ship_customer_sk#14], LeftAnti
               :           :           :- SortMergeJoin [c_customer_sk#13], [ws_bill_customer_sk#15], LeftAnti
               :           :           :  :- SortMergeJoin [c_customer_sk#13], [ss_customer_sk#16], LeftSemi
               :           :           :  :  :- *(2) Sort [c_customer_sk#13 ASC NULLS FIRST], false, 0
               :           :           :  :  :  +- Exchange hashpartitioning(c_customer_sk#13, 5)
               :           :           :  :  :     +- *(1) Project [c_customer_sk#13, c_current_cdemo_sk#9, c_current_addr_sk#11]
               :           :           :  :  :        +- *(1) Filter (isnotnull(c_current_addr_sk#11) && isnotnull(c_current_cdemo_sk#9))
               :           :           :  :  :           +- *(1) FileScan Hyperspace(Type: CI, Name: JoinIndex44-index-16-c_current_addr_sk-17, LogVersion: 0) default.customer[c_customer_sk#13,c_current_cdemo_sk#9,c_current_addr_sk#11] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>
               :           :           :  :  +- *(6) Sort [ss_customer_sk#16 ASC NULLS FIRST], false, 0
               :           :           :  :     +- Exchange hashpartitioning(ss_customer_sk#16, 5)
               :           :           :  :        +- *(5) Project [ss_customer_sk#16]
               :           :           :  :           +- *(5) SortMergeJoin [ss_sold_date_sk#17], [d_date_sk#18], Inner
               :           :           :  :              :- *(3) Project [ss_sold_date_sk#17, ss_customer_sk#16]
               :           :           :  :              :  +- *(3) Filter isnotnull(ss_sold_date_sk#17)
               :           :           :  :              :     +- *(3) FileScan Hyperspace(Type: CI, Name: JoinIndex12-index-1-ss_sold_date_sk-21, LogVersion: 0) default.store_sales[ss_sold_date_sk#17,ss_customer_sk#16] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int>, SelectedBucketsCount: 200 out of 200
               :           :           :  :              +- *(4) Project [d_date_sk#18]
               :           :           :  :                 +- *(4) Filter (((((isnotnull(d_year#19) && isnotnull(d_moy#20)) && (d_year#19 = 2001)) && (d_moy#20 >= 4)) && (d_moy#20 <= 6)) && isnotnull(d_date_sk#18))
               :           :           :  :                    +- *(4) FileScan Hyperspace(Type: CI, Name: JoinIndex03-index-0-d_date_sk-10, LogVersion: 0) default.date_dim[d_date_sk#18,d_year#19,d_moy#20] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), GreaterThanOrEqual(d_moy,4), LessThan..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>, SelectedBucketsCount: 200 out of 200
               :           :           :  +- *(10) Sort [ws_bill_customer_sk#15 ASC NULLS FIRST], false, 0
               :           :           :     +- Exchange hashpartitioning(ws_bill_customer_sk#15, 5)
               :           :           :        +- *(9) Project [ws_bill_customer_sk#15]
               :           :           :           +- *(9) SortMergeJoin [ws_sold_date_sk#21], [d_date_sk#18], Inner
               :           :           :              :- *(7) Project [ws_sold_date_sk#21, ws_bill_customer_sk#15]
               :           :           :              :  +- *(7) Filter isnotnull(ws_sold_date_sk#21)
               :           :           :              :     +- *(7) FileScan Hyperspace(Type: CI, Name: JoinIndex37-index-9-ws_sold_date_sk-21, LogVersion: 0) default.web_sales[ws_sold_date_sk#21,ws_bill_customer_sk#15] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int>, SelectedBucketsCount: 200 out of 200
               :           :           :              +- *(8) Project [d_date_sk#18]
               :           :           :                 +- *(8) Filter (((((isnotnull(d_year#19) && isnotnull(d_moy#20)) && (d_year#19 = 2001)) && (d_moy#20 >= 4)) && (d_moy#20 <= 6)) && isnotnull(d_date_sk#18))
               :           :           :                    +- *(8) FileScan Hyperspace(Type: CI, Name: JoinIndex03-index-0-d_date_sk-10, LogVersion: 0) default.date_dim[d_date_sk#18,d_year#19,d_moy#20] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), GreaterThanOrEqual(d_moy,4), LessThan..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>, SelectedBucketsCount: 200 out of 200
               :           :           +- *(16) Sort [cs_ship_customer_sk#14 ASC NULLS FIRST], false, 0
               :           :              +- Exchange hashpartitioning(cs_ship_customer_sk#14, 5)
               :           :                 +- *(15) Project [cs_ship_customer_sk#14]
               :           :                    +- *(15) SortMergeJoin [cs_sold_date_sk#22], [d_date_sk#18], Inner
               :           :                       :- *(12) Sort [cs_sold_date_sk#22 ASC NULLS FIRST], false, 0
               :           :                       :  +- Exchange hashpartitioning(cs_sold_date_sk#22, 5)
               :           :                       :     +- *(11) Project [cs_sold_date_sk#22, cs_ship_customer_sk#14]
               :           :                       :        +- *(11) Filter isnotnull(cs_sold_date_sk#22)
               :           :                       :           +- *(11) FileScan parquet default.catalog_sales[cs_sold_date_sk#22,cs_ship_customer_sk#14] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_ship_customer_sk:int>
               :           :                       +- *(14) Sort [d_date_sk#18 ASC NULLS FIRST], false, 0
               :           :                          +- Exchange hashpartitioning(d_date_sk#18, 5)
               :           :                             +- *(13) Project [d_date_sk#18]
               :           :                                +- *(13) Filter (((((isnotnull(d_year#19) && isnotnull(d_moy#20)) && (d_year#19 = 2001)) && (d_moy#20 >= 4)) && (d_moy#20 <= 6)) && isnotnull(d_date_sk#18))
               :           :                                   +- *(13) FileScan Hyperspace(Type: CI, Name: FilterIndex04-index-11-d_year-5, LogVersion: 0) default.date_dim[d_date_sk#18,d_year#19,d_moy#20] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), GreaterThanOrEqual(d_moy,4), LessThan..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
               :           +- *(20) Sort [ca_address_sk#12 ASC NULLS FIRST], false, 0
               :              +- Exchange hashpartitioning(ca_address_sk#12, 5)
               :                 +- *(19) Project [ca_address_sk#12]
               :                    +- *(19) Filter (ca_state#23 IN (KY,GA,NM) && isnotnull(ca_address_sk#12))
               :                       +- *(19) FileScan Hyperspace(Type: CI, Name: FilterIndex32-index-35-ca_state-11, LogVersion: 0) default.customer_address[ca_address_sk#12,ca_state#23] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [In(ca_state, [KY,GA,NM]), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>
               +- *(24) Sort [cd_demo_sk#10 ASC NULLS FIRST], false, 0
                  +- Exchange hashpartitioning(cd_demo_sk#10, 5)
                     +- *(23) Project [cd_demo_sk#10, cd_gender#1, cd_marital_status#2, cd_education_status#3, cd_purchase_estimate#4, cd_credit_rating#5]
                        +- *(23) Filter isnotnull(cd_demo_sk#10)
                           +- *(23) FileScan Hyperspace(Type: CI, Name: JoinIndex25-index-18-cd_demo_sk-8, LogVersion: 0) default.customer_demographics[cd_demo_sk#10,cd_gender#1,cd_marital_status#2,cd_education_status#3,cd_purchase_estimate#4,cd_credit_rating#5] Batched: true, Format: Parquet, Location: InMemoryFileIndex[], PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk)], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_pur...