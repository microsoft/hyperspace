== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[customer_preferred_cust_flag#1 ASC NULLS FIRST], output=[customer_preferred_cust_flag#1])
+- *(17) Project [customer_preferred_cust_flag#1]
   +- *(17) BroadcastHashJoin [customer_id#2], [customer_id#3], Inner, BuildRight, (CASE WHEN (year_total#4 > 0.00) THEN CheckOverflow((promote_precision(year_total#5) / promote_precision(year_total#4)), DecimalType(38,20)) ELSE null END > CASE WHEN (year_total#6 > 0.00) THEN CheckOverflow((promote_precision(year_total#7) / promote_precision(year_total#6)), DecimalType(38,20)) ELSE null END)
      :- *(17) Project [customer_id#2, year_total#6, customer_preferred_cust_flag#1, year_total#7, year_total#4]
      :  +- *(17) BroadcastHashJoin [customer_id#2], [customer_id#8], Inner, BuildRight
      :     :- *(17) Project [customer_id#2, year_total#6, customer_preferred_cust_flag#1, year_total#7]
      :     :  +- *(17) BroadcastHashJoin [customer_id#2], [customer_id#9], Inner, BuildRight
      :     :     :- Union
      :     :     :  :- *(4) Filter (isnotnull(year_total#6) && (year_total#6 > 0.00))
      :     :     :  :  +- *(4) HashAggregate(keys=[c_customer_id#10, c_first_name#11, c_last_name#12, d_year#13, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#18 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#19 as decimal(8,2)))), DecimalType(8,2))))])
      :     :     :  :     +- Exchange hashpartitioning(c_customer_id#10, c_first_name#11, c_last_name#12, d_year#13, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17, 5)
      :     :     :  :        +- *(3) HashAggregate(keys=[c_customer_id#10, c_first_name#11, c_last_name#12, d_year#13, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#18 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#19 as decimal(8,2)))), DecimalType(8,2))))])
      :     :     :  :           +- *(3) Project [c_customer_id#10, c_first_name#11, c_last_name#12, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17, ss_ext_discount_amt#19, ss_ext_list_price#18, d_year#13]
      :     :     :  :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#20], [d_date_sk#21], Inner, BuildRight
      :     :     :  :                 :- *(3) Project [c_customer_id#10, c_first_name#11, c_last_name#12, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17, ss_sold_date_sk#20, ss_ext_discount_amt#19, ss_ext_list_price#18]
      :     :     :  :                 :  +- *(3) BroadcastHashJoin [c_customer_sk#22], [ss_customer_sk#23], Inner, BuildRight
      :     :     :  :                 :     :- *(3) Project [c_customer_sk#22, c_customer_id#10, c_first_name#11, c_last_name#12, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17]
      :     :     :  :                 :     :  +- *(3) Filter (isnotnull(c_customer_sk#22) && isnotnull(c_customer_id#10))
      :     :     :  :                 :     :     +- *(3) FileScan parquet default.customer[c_customer_sk#22,c_customer_id#10,c_first_name#11,c_last_name#12,c_preferred_cust_flag#14,c_birth_country#15,c_login#16,c_email_address#17] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
      :     :     :  :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)))
      :     :     :  :                 :        +- *(1) Project [ss_sold_date_sk#20, ss_customer_sk#23, ss_ext_discount_amt#19, ss_ext_list_price#18]
      :     :     :  :                 :           +- *(1) Filter (isnotnull(ss_customer_sk#23) && isnotnull(ss_sold_date_sk#20))
      :     :     :  :                 :              +- *(1) FileScan parquet default.store_sales[ss_sold_date_sk#20,ss_customer_sk#23,ss_ext_discount_amt#19,ss_ext_list_price#18] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_list_price:...
      :     :     :  :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :     :     :  :                    +- *(2) Project [d_date_sk#21, d_year#13]
      :     :     :  :                       +- *(2) Filter ((isnotnull(d_year#13) && (d_year#13 = 2001)) && isnotnull(d_date_sk#21))
      :     :     :  :                          +- *(2) FileScan parquet default.date_dim[d_date_sk#21,d_year#13] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
      :     :     :  +- LocalTableScan <empty>, [customer_id#24, year_total#25]
      :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]))
      :     :        +- Union
      :     :           :- *(8) HashAggregate(keys=[c_customer_id#10, c_first_name#11, c_last_name#12, d_year#13, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#18 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#19 as decimal(8,2)))), DecimalType(8,2))))])
      :     :           :  +- Exchange hashpartitioning(c_customer_id#10, c_first_name#11, c_last_name#12, d_year#13, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17, 5)
      :     :           :     +- *(7) HashAggregate(keys=[c_customer_id#10, c_first_name#11, c_last_name#12, d_year#13, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#18 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#19 as decimal(8,2)))), DecimalType(8,2))))])
      :     :           :        +- *(7) Project [c_customer_id#10, c_first_name#11, c_last_name#12, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17, ss_ext_discount_amt#19, ss_ext_list_price#18, d_year#13]
      :     :           :           +- *(7) BroadcastHashJoin [ss_sold_date_sk#20], [d_date_sk#21], Inner, BuildRight
      :     :           :              :- *(7) Project [c_customer_id#10, c_first_name#11, c_last_name#12, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17, ss_sold_date_sk#20, ss_ext_discount_amt#19, ss_ext_list_price#18]
      :     :           :              :  +- *(7) BroadcastHashJoin [c_customer_sk#22], [ss_customer_sk#23], Inner, BuildRight
      :     :           :              :     :- *(7) Project [c_customer_sk#22, c_customer_id#10, c_first_name#11, c_last_name#12, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17]
      :     :           :              :     :  +- *(7) Filter (isnotnull(c_customer_sk#22) && isnotnull(c_customer_id#10))
      :     :           :              :     :     +- *(7) FileScan parquet default.customer[c_customer_sk#22,c_customer_id#10,c_first_name#11,c_last_name#12,c_preferred_cust_flag#14,c_birth_country#15,c_login#16,c_email_address#17] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
      :     :           :              :     +- ReusedExchange [ss_sold_date_sk#20, ss_customer_sk#23, ss_ext_discount_amt#19, ss_ext_list_price#18], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)))
      :     :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :     :           :                 +- *(6) Project [d_date_sk#21, d_year#13]
      :     :           :                    +- *(6) Filter ((isnotnull(d_year#13) && (d_year#13 = 2002)) && isnotnull(d_date_sk#21))
      :     :           :                       +- *(6) FileScan parquet default.date_dim[d_date_sk#21,d_year#13] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
      :     :           +- LocalTableScan <empty>, [customer_id#24, customer_preferred_cust_flag#26, year_total#25]
      :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]))
      :        +- Union
      :           :- LocalTableScan <empty>, [customer_id#8, year_total#4]
      :           +- *(12) Filter (isnotnull(year_total#25) && (year_total#25 > 0.00))
      :              +- *(12) HashAggregate(keys=[c_customer_id#10, c_first_name#11, c_last_name#12, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17, d_year#13], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#27 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#28 as decimal(8,2)))), DecimalType(8,2))))])
      :                 +- Exchange hashpartitioning(c_customer_id#10, c_first_name#11, c_last_name#12, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17, d_year#13, 5)
      :                    +- *(11) HashAggregate(keys=[c_customer_id#10, c_first_name#11, c_last_name#12, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17, d_year#13], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#27 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#28 as decimal(8,2)))), DecimalType(8,2))))])
      :                       +- *(11) Project [c_customer_id#10, c_first_name#11, c_last_name#12, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17, ws_ext_discount_amt#28, ws_ext_list_price#27, d_year#13]
      :                          +- *(11) BroadcastHashJoin [ws_sold_date_sk#29], [d_date_sk#21], Inner, BuildRight
      :                             :- *(11) Project [c_customer_id#10, c_first_name#11, c_last_name#12, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17, ws_sold_date_sk#29, ws_ext_discount_amt#28, ws_ext_list_price#27]
      :                             :  +- *(11) BroadcastHashJoin [c_customer_sk#22], [ws_bill_customer_sk#30], Inner, BuildRight
      :                             :     :- *(11) Project [c_customer_sk#22, c_customer_id#10, c_first_name#11, c_last_name#12, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17]
      :                             :     :  +- *(11) Filter (isnotnull(c_customer_sk#22) && isnotnull(c_customer_id#10))
      :                             :     :     +- *(11) FileScan parquet default.customer[c_customer_sk#22,c_customer_id#10,c_first_name#11,c_last_name#12,c_preferred_cust_flag#14,c_birth_country#15,c_login#16,c_email_address#17] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
      :                             :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)))
      :                             :        +- *(9) Project [ws_sold_date_sk#29, ws_bill_customer_sk#30, ws_ext_discount_amt#28, ws_ext_list_price#27]
      :                             :           +- *(9) Filter (isnotnull(ws_bill_customer_sk#30) && isnotnull(ws_sold_date_sk#29))
      :                             :              +- *(9) FileScan parquet default.web_sales[ws_sold_date_sk#29,ws_bill_customer_sk#30,ws_ext_discount_amt#28,ws_ext_list_price#27] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_list_p...
      :                             +- ReusedExchange [d_date_sk#21, d_year#13], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]))
         +- Union
            :- LocalTableScan <empty>, [customer_id#3, year_total#5]
            +- *(16) HashAggregate(keys=[c_customer_id#10, c_first_name#11, c_last_name#12, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17, d_year#13], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#27 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#28 as decimal(8,2)))), DecimalType(8,2))))])
               +- Exchange hashpartitioning(c_customer_id#10, c_first_name#11, c_last_name#12, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17, d_year#13, 5)
                  +- *(15) HashAggregate(keys=[c_customer_id#10, c_first_name#11, c_last_name#12, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17, d_year#13], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#27 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#28 as decimal(8,2)))), DecimalType(8,2))))])
                     +- *(15) Project [c_customer_id#10, c_first_name#11, c_last_name#12, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17, ws_ext_discount_amt#28, ws_ext_list_price#27, d_year#13]
                        +- *(15) BroadcastHashJoin [ws_sold_date_sk#29], [d_date_sk#21], Inner, BuildRight
                           :- *(15) Project [c_customer_id#10, c_first_name#11, c_last_name#12, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17, ws_sold_date_sk#29, ws_ext_discount_amt#28, ws_ext_list_price#27]
                           :  +- *(15) BroadcastHashJoin [c_customer_sk#22], [ws_bill_customer_sk#30], Inner, BuildRight
                           :     :- *(15) Project [c_customer_sk#22, c_customer_id#10, c_first_name#11, c_last_name#12, c_preferred_cust_flag#14, c_birth_country#15, c_login#16, c_email_address#17]
                           :     :  +- *(15) Filter (isnotnull(c_customer_sk#22) && isnotnull(c_customer_id#10))
                           :     :     +- *(15) FileScan parquet default.customer[c_customer_sk#22,c_customer_id#10,c_first_name#11,c_last_name#12,c_preferred_cust_flag#14,c_birth_country#15,c_login#16,c_email_address#17] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
                           :     +- ReusedExchange [ws_sold_date_sk#29, ws_bill_customer_sk#30, ws_ext_discount_amt#28, ws_ext_list_price#27], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)))
                           +- ReusedExchange [d_date_sk#21, d_year#13], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))