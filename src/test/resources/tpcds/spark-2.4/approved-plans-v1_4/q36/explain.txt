== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#1 DESC NULLS LAST,CASE WHEN (cast(lochierarchy#1 as int) = 0) THEN i_category#2 END ASC NULLS FIRST,rank_within_parent#3 ASC NULLS FIRST], output=[gross_margin#4,i_category#2,i_class#5,lochierarchy#1,rank_within_parent#3])
+- *(7) Project [gross_margin#4, i_category#2, i_class#5, lochierarchy#1, rank_within_parent#3]
   +- Window [rank(_w3#6) windowspecdefinition(_w1#7, _w2#8, _w3#6 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#3], [_w1#7, _w2#8], [_w3#6 ASC NULLS FIRST]
      +- *(6) Sort [_w1#7 ASC NULLS FIRST, _w2#8 ASC NULLS FIRST, _w3#6 ASC NULLS FIRST], false, 0
         +- Exchange hashpartitioning(_w1#7, _w2#8, 5)
            +- *(5) HashAggregate(keys=[i_category#2, i_class#5, spark_grouping_id#9], functions=[sum(UnscaledValue(ss_net_profit#10)), sum(UnscaledValue(ss_ext_sales_price#11))])
               +- Exchange hashpartitioning(i_category#2, i_class#5, spark_grouping_id#9, 5)
                  +- *(4) HashAggregate(keys=[i_category#2, i_class#5, spark_grouping_id#9], functions=[partial_sum(UnscaledValue(ss_net_profit#10)), partial_sum(UnscaledValue(ss_ext_sales_price#11))])
                     +- *(4) Expand [List(ss_ext_sales_price#11, ss_net_profit#10, i_category#12, i_class#13, 0), List(ss_ext_sales_price#11, ss_net_profit#10, i_category#12, null, 1), List(ss_ext_sales_price#11, ss_net_profit#10, null, null, 3)], [ss_ext_sales_price#11, ss_net_profit#10, i_category#2, i_class#5, spark_grouping_id#9]
                        +- *(4) Project [ss_ext_sales_price#11, ss_net_profit#10, i_category#14 AS i_category#12, i_class#15 AS i_class#13]
                           +- *(4) BroadcastHashJoin [ss_store_sk#16], [s_store_sk#17], Inner, BuildRight
                              :- *(4) Project [ss_store_sk#16, ss_ext_sales_price#11, ss_net_profit#10, i_class#15, i_category#14]
                              :  +- *(4) BroadcastHashJoin [ss_item_sk#18], [i_item_sk#19], Inner, BuildRight
                              :     :- *(4) Project [ss_item_sk#18, ss_store_sk#16, ss_ext_sales_price#11, ss_net_profit#10]
                              :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#20], [d_date_sk#21], Inner, BuildRight
                              :     :     :- *(4) Project [ss_sold_date_sk#20, ss_item_sk#18, ss_store_sk#16, ss_ext_sales_price#11, ss_net_profit#10]
                              :     :     :  +- *(4) Filter ((isnotnull(ss_sold_date_sk#20) && isnotnull(ss_item_sk#18)) && isnotnull(ss_store_sk#16))
                              :     :     :     +- *(4) FileScan parquet default.store_sales[ss_sold_date_sk#20,ss_item_sk#18,ss_store_sk#16,ss_ext_sales_price#11,ss_net_profit#10] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_...
                              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                              :     :        +- *(1) Project [d_date_sk#21]
                              :     :           +- *(1) Filter ((isnotnull(d_year#22) && (d_year#22 = 2001)) && isnotnull(d_date_sk#21))
                              :     :              +- *(1) FileScan parquet default.date_dim[d_date_sk#21,d_year#22] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                              :        +- *(2) Project [i_item_sk#19, i_class#15, i_category#14]
                              :           +- *(2) Filter isnotnull(i_item_sk#19)
                              :              +- *(2) FileScan parquet default.item[i_item_sk#19,i_class#15,i_category#14] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>
                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                                 +- *(3) Project [s_store_sk#17]
                                    +- *(3) Filter ((isnotnull(s_state#23) && (s_state#23 = TN)) && isnotnull(s_store_sk#17))
                                       +- *(3) FileScan parquet default.store[s_store_sk#17,s_state#23] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_state), EqualTo(s_state,TN), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>