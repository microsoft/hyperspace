== Physical Plan ==
*(7) Project [i_item_desc#1, i_category#2, i_class#3, i_current_price#4, itemrevenue#5, revenueratio#6]
+- *(7) Sort [i_category#2 ASC NULLS FIRST, i_class#3 ASC NULLS FIRST, i_item_id#7 ASC NULLS FIRST, i_item_desc#1 ASC NULLS FIRST, revenueratio#6 ASC NULLS FIRST], true, 0
   +- Exchange rangepartitioning(i_category#2 ASC NULLS FIRST, i_class#3 ASC NULLS FIRST, i_item_id#7 ASC NULLS FIRST, i_item_desc#1 ASC NULLS FIRST, revenueratio#6 ASC NULLS FIRST, 5)
      +- *(6) Project [i_item_desc#1, i_category#2, i_class#3, i_current_price#4, itemrevenue#5, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#8) * 100.00), DecimalType(21,2)) as decimal(27,2))) / promote_precision(_we0#9)), DecimalType(38,17)) AS revenueratio#6, i_item_id#7]
         +- Window [sum(_w1#10) windowspecdefinition(i_class#3, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#9], [i_class#3]
            +- *(5) Sort [i_class#3 ASC NULLS FIRST], false, 0
               +- Exchange hashpartitioning(i_class#3, 5)
                  +- *(4) HashAggregate(keys=[i_item_id#7, i_item_desc#1, i_category#2, i_class#3, i_current_price#4], functions=[sum(UnscaledValue(ss_ext_sales_price#11))])
                     +- Exchange hashpartitioning(i_item_id#7, i_item_desc#1, i_category#2, i_class#3, i_current_price#4, 5)
                        +- *(3) HashAggregate(keys=[i_item_id#7, i_item_desc#1, i_category#2, i_class#3, i_current_price#4], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#11))])
                           +- *(3) Project [ss_ext_sales_price#11, i_item_id#7, i_item_desc#1, i_current_price#4, i_class#3, i_category#2]
                              +- *(3) BroadcastHashJoin [ss_sold_date_sk#12], [d_date_sk#13], Inner, BuildRight
                                 :- *(3) Project [ss_sold_date_sk#12, ss_ext_sales_price#11, i_item_id#7, i_item_desc#1, i_current_price#4, i_class#3, i_category#2]
                                 :  +- *(3) BroadcastHashJoin [ss_item_sk#14], [i_item_sk#15], Inner, BuildRight
                                 :     :- *(3) Project [ss_sold_date_sk#12, ss_item_sk#14, ss_ext_sales_price#11]
                                 :     :  +- *(3) Filter (isnotnull(ss_item_sk#14) && isnotnull(ss_sold_date_sk#12))
                                 :     :     +- *(3) FileScan parquet default.store_sales[ss_sold_date_sk#12,ss_item_sk#14,ss_ext_sales_price#11] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
                                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                                 :        +- *(1) Project [i_item_sk#15, i_item_id#7, i_item_desc#1, i_current_price#4, i_class#3, i_category#2]
                                 :           +- *(1) Filter (i_category#2 IN (Sports,Books,Home) && isnotnull(i_item_sk#15))
                                 :              +- *(1) FileScan parquet default.item[i_item_sk#15,i_item_id#7,i_item_desc#1,i_current_price#4,i_class#3,i_category#2] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/item], PartitionFilters: [], PushedFilters: [In(i_category, [Sports,Books,Home]), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
                                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                                    +- *(2) Project [d_date_sk#13]
                                       +- *(2) Filter (((isnotnull(d_date#16) && (d_date#16 >= 10644)) && (d_date#16 <= 10674)) && isnotnull(d_date_sk#13))
                                          +- *(2) FileScan parquet default.date_dim[d_date_sk#13,d_date#16] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1999-02-22), LessThanOrEqual(d_date,1999-03-24), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>