== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[promotions#1 ASC NULLS FIRST,total#2 ASC NULLS FIRST], output=[promotions#1,total#2,(CAST((CAST(CAST(promotions AS DECIMAL(15,4)) AS DECIMAL(15,4)) / CAST(CAST(total AS DECIMAL(15,4)) AS DECIMAL(15,4))) AS DECIMAL(35,20)) * CAST(CAST(100 AS DECIMAL(3,0)) AS DECIMAL(35,20)))#3])
+- *(16) Project [promotions#1, total#2, CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(promotions#1 as decimal(15,4))) / promote_precision(cast(total#2 as decimal(15,4)))), DecimalType(35,20))) * 100.00000000000000000000), DecimalType(38,19)) AS (CAST((CAST(CAST(promotions AS DECIMAL(15,4)) AS DECIMAL(15,4)) / CAST(CAST(total AS DECIMAL(15,4)) AS DECIMAL(15,4))) AS DECIMAL(35,20)) * CAST(CAST(100 AS DECIMAL(3,0)) AS DECIMAL(35,20)))#3]
   +- BroadcastNestedLoopJoin BuildRight, Inner
      :- *(8) HashAggregate(keys=[], functions=[sum(UnscaledValue(ss_ext_sales_price#4))])
      :  +- Exchange SinglePartition
      :     +- *(7) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#4))])
      :        +- *(7) Project [ss_ext_sales_price#4]
      :           +- *(7) BroadcastHashJoin [ss_item_sk#5], [i_item_sk#6], Inner, BuildRight
      :              :- *(7) Project [ss_item_sk#5, ss_ext_sales_price#4]
      :              :  +- *(7) BroadcastHashJoin [c_current_addr_sk#7], [ca_address_sk#8], Inner, BuildRight
      :              :     :- *(7) Project [ss_item_sk#5, ss_ext_sales_price#4, c_current_addr_sk#7]
      :              :     :  +- *(7) BroadcastHashJoin [ss_customer_sk#9], [c_customer_sk#10], Inner, BuildRight
      :              :     :     :- *(7) Project [ss_item_sk#5, ss_customer_sk#9, ss_ext_sales_price#4]
      :              :     :     :  +- *(7) BroadcastHashJoin [ss_sold_date_sk#11], [d_date_sk#12], Inner, BuildRight
      :              :     :     :     :- *(7) Project [ss_sold_date_sk#11, ss_item_sk#5, ss_customer_sk#9, ss_ext_sales_price#4]
      :              :     :     :     :  +- *(7) BroadcastHashJoin [ss_promo_sk#13], [p_promo_sk#14], Inner, BuildRight
      :              :     :     :     :     :- *(7) Project [ss_sold_date_sk#11, ss_item_sk#5, ss_customer_sk#9, ss_promo_sk#13, ss_ext_sales_price#4]
      :              :     :     :     :     :  +- *(7) BroadcastHashJoin [ss_store_sk#15], [s_store_sk#16], Inner, BuildRight
      :              :     :     :     :     :     :- *(7) Project [ss_sold_date_sk#11, ss_item_sk#5, ss_customer_sk#9, ss_store_sk#15, ss_promo_sk#13, ss_ext_sales_price#4]
      :              :     :     :     :     :     :  +- *(7) Filter ((((isnotnull(ss_store_sk#15) && isnotnull(ss_promo_sk#13)) && isnotnull(ss_sold_date_sk#11)) && isnotnull(ss_customer_sk#9)) && isnotnull(ss_item_sk#5))
      :              :     :     :     :     :     :     +- *(7) FileScan parquet default.store_sales[ss_sold_date_sk#11,ss_item_sk#5,ss_customer_sk#9,ss_store_sk#15,ss_promo_sk#13,ss_ext_sales_price#4] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_promo_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_e...
      :              :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :              :     :     :     :     :        +- *(1) Project [s_store_sk#16]
      :              :     :     :     :     :           +- *(1) Filter ((isnotnull(s_gmt_offset#17) && (s_gmt_offset#17 = -5.00)) && isnotnull(s_store_sk#16))
      :              :     :     :     :     :              +- *(1) FileScan parquet default.store[s_store_sk#16,s_gmt_offset#17] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_gmt_offset), EqualTo(s_gmt_offset,-5.00), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_gmt_offset:decimal(5,2)>
      :              :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :              :     :     :     :        +- *(2) Project [p_promo_sk#14]
      :              :     :     :     :           +- *(2) Filter ((((p_channel_dmail#18 = Y) || (p_channel_email#19 = Y)) || (p_channel_tv#20 = Y)) && isnotnull(p_promo_sk#14))
      :              :     :     :     :              +- *(2) FileScan parquet default.promotion[p_promo_sk#14,p_channel_dmail#18,p_channel_email#19,p_channel_tv#20] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/promotion], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(p_channel_dmail,Y),EqualTo(p_channel_email,Y)),EqualTo(p_channel_tv,Y)), IsNotNull..., ReadSchema: struct<p_promo_sk:int,p_channel_dmail:string,p_channel_email:string,p_channel_tv:string>
      :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :              :     :     :        +- *(3) Project [d_date_sk#12]
      :              :     :     :           +- *(3) Filter ((((isnotnull(d_year#21) && isnotnull(d_moy#22)) && (d_year#21 = 1998)) && (d_moy#22 = 11)) && isnotnull(d_date_sk#12))
      :              :     :     :              +- *(3) FileScan parquet default.date_dim[d_date_sk#12,d_year#21,d_moy#22] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
      :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :              :     :        +- *(4) Project [c_customer_sk#10, c_current_addr_sk#7]
      :              :     :           +- *(4) Filter (isnotnull(c_customer_sk#10) && isnotnull(c_current_addr_sk#7))
      :              :     :              +- *(4) FileScan parquet default.customer[c_customer_sk#10,c_current_addr_sk#7] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
      :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :              :        +- *(5) Project [ca_address_sk#8]
      :              :           +- *(5) Filter ((isnotnull(ca_gmt_offset#23) && (ca_gmt_offset#23 = -5.00)) && isnotnull(ca_address_sk#8))
      :              :              +- *(5) FileScan parquet default.customer_address[ca_address_sk#8,ca_gmt_offset#23] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-5.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>
      :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :                 +- *(6) Project [i_item_sk#6]
      :                    +- *(6) Filter ((isnotnull(i_category#24) && (i_category#24 = Jewelry)) && isnotnull(i_item_sk#6))
      :                       +- *(6) FileScan parquet default.item[i_item_sk#6,i_category#24] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Jewelry), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_category:string>
      +- BroadcastExchange IdentityBroadcastMode
         +- *(15) HashAggregate(keys=[], functions=[sum(UnscaledValue(ss_ext_sales_price#4))])
            +- Exchange SinglePartition
               +- *(14) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#4))])
                  +- *(14) Project [ss_ext_sales_price#4]
                     +- *(14) BroadcastHashJoin [ss_item_sk#5], [i_item_sk#6], Inner, BuildRight
                        :- *(14) Project [ss_item_sk#5, ss_ext_sales_price#4]
                        :  +- *(14) BroadcastHashJoin [c_current_addr_sk#7], [ca_address_sk#8], Inner, BuildRight
                        :     :- *(14) Project [ss_item_sk#5, ss_ext_sales_price#4, c_current_addr_sk#7]
                        :     :  +- *(14) BroadcastHashJoin [ss_customer_sk#9], [c_customer_sk#10], Inner, BuildRight
                        :     :     :- *(14) Project [ss_item_sk#5, ss_customer_sk#9, ss_ext_sales_price#4]
                        :     :     :  +- *(14) BroadcastHashJoin [ss_sold_date_sk#11], [d_date_sk#12], Inner, BuildRight
                        :     :     :     :- *(14) Project [ss_sold_date_sk#11, ss_item_sk#5, ss_customer_sk#9, ss_ext_sales_price#4]
                        :     :     :     :  +- *(14) BroadcastHashJoin [ss_store_sk#15], [s_store_sk#16], Inner, BuildRight
                        :     :     :     :     :- *(14) Project [ss_sold_date_sk#11, ss_item_sk#5, ss_customer_sk#9, ss_store_sk#15, ss_ext_sales_price#4]
                        :     :     :     :     :  +- *(14) Filter (((isnotnull(ss_store_sk#15) && isnotnull(ss_sold_date_sk#11)) && isnotnull(ss_customer_sk#9)) && isnotnull(ss_item_sk#5))
                        :     :     :     :     :     +- *(14) FileScan parquet default.store_sales[ss_sold_date_sk#11,ss_item_sk#5,ss_customer_sk#9,ss_store_sk#15,ss_ext_sales_price#4] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_item..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ext_sales_price:d...
                        :     :     :     :     +- ReusedExchange [s_store_sk#16], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                        :     :     :     +- ReusedExchange [d_date_sk#12], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                        :     :     +- ReusedExchange [c_customer_sk#10, c_current_addr_sk#7], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                        :     +- ReusedExchange [ca_address_sk#8], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                        +- ReusedExchange [i_item_sk#6], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))