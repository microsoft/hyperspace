== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[i_item_id#1 ASC NULLS FIRST,s_state#2 ASC NULLS FIRST], output=[i_item_id#1,s_state#2,g_state#3,agg1#4,agg2#5,agg3#6,agg4#7])
+- *(6) HashAggregate(keys=[i_item_id#1, s_state#2, spark_grouping_id#8], functions=[avg(cast(ss_quantity#9 as bigint)), avg(UnscaledValue(ss_list_price#10)), avg(UnscaledValue(ss_coupon_amt#11)), avg(UnscaledValue(ss_sales_price#12))])
   +- Exchange hashpartitioning(i_item_id#1, s_state#2, spark_grouping_id#8, 5)
      +- *(5) HashAggregate(keys=[i_item_id#1, s_state#2, spark_grouping_id#8], functions=[partial_avg(cast(ss_quantity#9 as bigint)), partial_avg(UnscaledValue(ss_list_price#10)), partial_avg(UnscaledValue(ss_coupon_amt#11)), partial_avg(UnscaledValue(ss_sales_price#12))])
         +- *(5) Expand [List(ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11, i_item_id#13, s_state#14, 0), List(ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11, i_item_id#13, null, 1), List(ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11, null, null, 3)], [ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11, i_item_id#1, s_state#2, spark_grouping_id#8]
            +- *(5) Project [ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11, i_item_id#15 AS i_item_id#13, s_state#16 AS s_state#14]
               +- *(5) BroadcastHashJoin [ss_item_sk#17], [i_item_sk#18], Inner, BuildRight
                  :- *(5) Project [ss_item_sk#17, ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11, s_state#16]
                  :  +- *(5) BroadcastHashJoin [ss_store_sk#19], [s_store_sk#20], Inner, BuildRight
                  :     :- *(5) Project [ss_item_sk#17, ss_store_sk#19, ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11]
                  :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#21], [d_date_sk#22], Inner, BuildRight
                  :     :     :- *(5) Project [ss_sold_date_sk#21, ss_item_sk#17, ss_store_sk#19, ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11]
                  :     :     :  +- *(5) BroadcastHashJoin [ss_cdemo_sk#23], [cd_demo_sk#24], Inner, BuildRight
                  :     :     :     :- *(5) Project [ss_sold_date_sk#21, ss_item_sk#17, ss_cdemo_sk#23, ss_store_sk#19, ss_quantity#9, ss_list_price#10, ss_sales_price#12, ss_coupon_amt#11]
                  :     :     :     :  +- *(5) Filter (((isnotnull(ss_cdemo_sk#23) && isnotnull(ss_sold_date_sk#21)) && isnotnull(ss_store_sk#19)) && isnotnull(ss_item_sk#17))
                  :     :     :     :     +- *(5) FileScan parquet default.store_sales[ss_sold_date_sk#21,ss_item_sk#17,ss_cdemo_sk#23,ss_store_sk#19,ss_quantity#9,ss_list_price#10,ss_sales_price#12,ss_coupon_amt#11] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_cdemo_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_cdemo_sk:int,ss_store_sk:int,ss_quantity:int,ss_list...
                  :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                  :     :     :        +- *(1) Project [cd_demo_sk#24]
                  :     :     :           +- *(1) Filter ((((((isnotnull(cd_education_status#25) && isnotnull(cd_marital_status#26)) && isnotnull(cd_gender#27)) && (cd_gender#27 = M)) && (cd_marital_status#26 = S)) && (cd_education_status#25 = College)) && isnotnull(cd_demo_sk#24))
                  :     :     :              +- *(1) FileScan parquet default.customer_demographics[cd_demo_sk#24,cd_gender#27,cd_marital_status#26,cd_education_status#25] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/customer_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(cd_education_status), IsNotNull(cd_marital_status), IsNotNull(cd_gender), EqualTo(cd_g..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>
                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                  :     :        +- *(2) Project [d_date_sk#22]
                  :     :           +- *(2) Filter ((isnotnull(d_year#28) && (d_year#28 = 2002)) && isnotnull(d_date_sk#22))
                  :     :              +- *(2) FileScan parquet default.date_dim[d_date_sk#22,d_year#28] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                  :        +- *(3) Project [s_store_sk#20, s_state#16]
                  :           +- *(3) Filter ((isnotnull(s_state#16) && (s_state#16 = TN)) && isnotnull(s_store_sk#20))
                  :              +- *(3) FileScan parquet default.store[s_store_sk#20,s_state#16] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_state), EqualTo(s_state,TN), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                     +- *(4) Project [i_item_sk#18, i_item_id#15]
                        +- *(4) Filter isnotnull(i_item_sk#18)
                           +- *(4) FileScan parquet default.item[i_item_sk#18,i_item_id#15] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>