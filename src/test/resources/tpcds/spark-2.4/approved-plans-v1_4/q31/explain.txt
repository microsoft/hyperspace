== Physical Plan ==
*(25) Sort [ca_county#1 ASC NULLS FIRST], true, 0
+- Exchange rangepartitioning(ca_county#1 ASC NULLS FIRST, 5)
   +- *(24) Project [ca_county#1, d_year#2, CheckOverflow((promote_precision(web_sales#3) / promote_precision(web_sales#4)), DecimalType(37,20)) AS web_q1_q2_increase#5, CheckOverflow((promote_precision(store_sales#6) / promote_precision(store_sales#7)), DecimalType(37,20)) AS store_q1_q2_increase#8, CheckOverflow((promote_precision(web_sales#9) / promote_precision(web_sales#3)), DecimalType(37,20)) AS web_q2_q3_increase#10, CheckOverflow((promote_precision(store_sales#11) / promote_precision(store_sales#6)), DecimalType(37,20)) AS store_q2_q3_increase#12]
      +- *(24) BroadcastHashJoin [ca_county#13], [ca_county#14], Inner, BuildRight, (CASE WHEN (web_sales#3 > 0.00) THEN CheckOverflow((promote_precision(web_sales#9) / promote_precision(web_sales#3)), DecimalType(37,20)) ELSE null END > CASE WHEN (store_sales#6 > 0.00) THEN CheckOverflow((promote_precision(store_sales#11) / promote_precision(store_sales#6)), DecimalType(37,20)) ELSE null END)
         :- *(24) Project [ca_county#1, d_year#2, store_sales#7, store_sales#6, store_sales#11, ca_county#13, web_sales#4, web_sales#3]
         :  +- *(24) BroadcastHashJoin [ca_county#13], [ca_county#15], Inner, BuildRight, (CASE WHEN (web_sales#4 > 0.00) THEN CheckOverflow((promote_precision(web_sales#3) / promote_precision(web_sales#4)), DecimalType(37,20)) ELSE null END > CASE WHEN (store_sales#7 > 0.00) THEN CheckOverflow((promote_precision(store_sales#6) / promote_precision(store_sales#7)), DecimalType(37,20)) ELSE null END)
         :     :- *(24) BroadcastHashJoin [ca_county#1], [ca_county#13], Inner, BuildRight
         :     :  :- *(24) Project [ca_county#1, d_year#2, store_sales#7, store_sales#6, store_sales#11]
         :     :  :  +- *(24) BroadcastHashJoin [ca_county#16], [ca_county#17], Inner, BuildRight
         :     :  :     :- *(24) BroadcastHashJoin [ca_county#1], [ca_county#16], Inner, BuildRight
         :     :  :     :  :- *(24) HashAggregate(keys=[ca_county#1, d_qoy#18, d_year#2], functions=[sum(UnscaledValue(ss_ext_sales_price#19))])
         :     :  :     :  :  +- Exchange hashpartitioning(ca_county#1, d_qoy#18, d_year#2, 5)
         :     :  :     :  :     +- *(3) HashAggregate(keys=[ca_county#1, d_qoy#18, d_year#2], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#19))])
         :     :  :     :  :        +- *(3) Project [ss_ext_sales_price#19, d_year#2, d_qoy#18, ca_county#1]
         :     :  :     :  :           +- *(3) BroadcastHashJoin [ss_addr_sk#20], [ca_address_sk#21], Inner, BuildRight
         :     :  :     :  :              :- *(3) Project [ss_addr_sk#20, ss_ext_sales_price#19, d_year#2, d_qoy#18]
         :     :  :     :  :              :  +- *(3) BroadcastHashJoin [ss_sold_date_sk#22], [d_date_sk#23], Inner, BuildRight
         :     :  :     :  :              :     :- *(3) Project [ss_sold_date_sk#22, ss_addr_sk#20, ss_ext_sales_price#19]
         :     :  :     :  :              :     :  +- *(3) Filter (isnotnull(ss_sold_date_sk#22) && isnotnull(ss_addr_sk#20))
         :     :  :     :  :              :     :     +- *(3) FileScan parquet default.store_sales[ss_sold_date_sk#22,ss_addr_sk#20,ss_ext_sales_price#19] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
         :     :  :     :  :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :     :  :     :  :              :        +- *(1) Project [d_date_sk#23, d_year#2, d_qoy#18]
         :     :  :     :  :              :           +- *(1) Filter ((((isnotnull(d_qoy#18) && isnotnull(d_year#2)) && (d_qoy#18 = 1)) && (d_year#2 = 2000)) && isnotnull(d_date_sk#23))
         :     :  :     :  :              :              +- *(1) FileScan parquet default.date_dim[d_date_sk#23,d_year#2,d_qoy#18] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
         :     :  :     :  :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :     :  :     :  :                 +- *(2) Project [ca_address_sk#21, ca_county#1]
         :     :  :     :  :                    +- *(2) Filter (isnotnull(ca_address_sk#21) && isnotnull(ca_county#1))
         :     :  :     :  :                       +- *(2) FileScan parquet default.customer_address[ca_address_sk#21,ca_county#1] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_county)], ReadSchema: struct<ca_address_sk:int,ca_county:string>
         :     :  :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]))
         :     :  :     :     +- *(7) HashAggregate(keys=[ca_county#16, d_qoy#24, d_year#25], functions=[sum(UnscaledValue(ss_ext_sales_price#19))])
         :     :  :     :        +- Exchange hashpartitioning(ca_county#16, d_qoy#24, d_year#25, 5)
         :     :  :     :           +- *(6) HashAggregate(keys=[ca_county#16, d_qoy#24, d_year#25], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#19))])
         :     :  :     :              +- *(6) Project [ss_ext_sales_price#19, d_year#25, d_qoy#24, ca_county#16]
         :     :  :     :                 +- *(6) BroadcastHashJoin [ss_addr_sk#20], [ca_address_sk#26], Inner, BuildRight
         :     :  :     :                    :- *(6) Project [ss_addr_sk#20, ss_ext_sales_price#19, d_year#25, d_qoy#24]
         :     :  :     :                    :  +- *(6) BroadcastHashJoin [ss_sold_date_sk#22], [d_date_sk#27], Inner, BuildRight
         :     :  :     :                    :     :- *(6) Project [ss_sold_date_sk#22, ss_addr_sk#20, ss_ext_sales_price#19]
         :     :  :     :                    :     :  +- *(6) Filter (isnotnull(ss_sold_date_sk#22) && isnotnull(ss_addr_sk#20))
         :     :  :     :                    :     :     +- *(6) FileScan parquet default.store_sales[ss_sold_date_sk#22,ss_addr_sk#20,ss_ext_sales_price#19] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
         :     :  :     :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :     :  :     :                    :        +- *(4) Project [d_date_sk#27, d_year#25, d_qoy#24]
         :     :  :     :                    :           +- *(4) Filter ((((isnotnull(d_qoy#24) && isnotnull(d_year#25)) && (d_qoy#24 = 2)) && (d_year#25 = 2000)) && isnotnull(d_date_sk#27))
         :     :  :     :                    :              +- *(4) FileScan parquet default.date_dim[d_date_sk#27,d_year#25,d_qoy#24] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
         :     :  :     :                    +- ReusedExchange [ca_address_sk#26, ca_county#16], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :     :  :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]))
         :     :  :        +- *(11) HashAggregate(keys=[ca_county#17, d_qoy#28, d_year#29], functions=[sum(UnscaledValue(ss_ext_sales_price#19))])
         :     :  :           +- Exchange hashpartitioning(ca_county#17, d_qoy#28, d_year#29, 5)
         :     :  :              +- *(10) HashAggregate(keys=[ca_county#17, d_qoy#28, d_year#29], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#19))])
         :     :  :                 +- *(10) Project [ss_ext_sales_price#19, d_year#29, d_qoy#28, ca_county#17]
         :     :  :                    +- *(10) BroadcastHashJoin [ss_addr_sk#20], [ca_address_sk#30], Inner, BuildRight
         :     :  :                       :- *(10) Project [ss_addr_sk#20, ss_ext_sales_price#19, d_year#29, d_qoy#28]
         :     :  :                       :  +- *(10) BroadcastHashJoin [ss_sold_date_sk#22], [d_date_sk#31], Inner, BuildRight
         :     :  :                       :     :- *(10) Project [ss_sold_date_sk#22, ss_addr_sk#20, ss_ext_sales_price#19]
         :     :  :                       :     :  +- *(10) Filter (isnotnull(ss_sold_date_sk#22) && isnotnull(ss_addr_sk#20))
         :     :  :                       :     :     +- *(10) FileScan parquet default.store_sales[ss_sold_date_sk#22,ss_addr_sk#20,ss_ext_sales_price#19] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
         :     :  :                       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :     :  :                       :        +- *(8) Project [d_date_sk#31, d_year#29, d_qoy#28]
         :     :  :                       :           +- *(8) Filter ((((isnotnull(d_qoy#28) && isnotnull(d_year#29)) && (d_qoy#28 = 3)) && (d_year#29 = 2000)) && isnotnull(d_date_sk#31))
         :     :  :                       :              +- *(8) FileScan parquet default.date_dim[d_date_sk#31,d_year#29,d_qoy#28] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
         :     :  :                       +- ReusedExchange [ca_address_sk#30, ca_county#17], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]))
         :     :     +- *(15) HashAggregate(keys=[ca_county#13, d_qoy#32, d_year#33], functions=[sum(UnscaledValue(ws_ext_sales_price#34))])
         :     :        +- Exchange hashpartitioning(ca_county#13, d_qoy#32, d_year#33, 5)
         :     :           +- *(14) HashAggregate(keys=[ca_county#13, d_qoy#32, d_year#33], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#34))])
         :     :              +- *(14) Project [ws_ext_sales_price#34, d_year#33, d_qoy#32, ca_county#13]
         :     :                 +- *(14) BroadcastHashJoin [ws_bill_addr_sk#35], [ca_address_sk#36], Inner, BuildRight
         :     :                    :- *(14) Project [ws_bill_addr_sk#35, ws_ext_sales_price#34, d_year#33, d_qoy#32]
         :     :                    :  +- *(14) BroadcastHashJoin [ws_sold_date_sk#37], [d_date_sk#38], Inner, BuildRight
         :     :                    :     :- *(14) Project [ws_sold_date_sk#37, ws_bill_addr_sk#35, ws_ext_sales_price#34]
         :     :                    :     :  +- *(14) Filter (isnotnull(ws_sold_date_sk#37) && isnotnull(ws_bill_addr_sk#35))
         :     :                    :     :     +- *(14) FileScan parquet default.web_sales[ws_sold_date_sk#37,ws_bill_addr_sk#35,ws_ext_sales_price#34] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
         :     :                    :     +- ReusedExchange [d_date_sk#38, d_year#33, d_qoy#32], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :     :                    +- ReusedExchange [ca_address_sk#36, ca_county#13], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]))
         :        +- *(19) HashAggregate(keys=[ca_county#15, d_qoy#39, d_year#40], functions=[sum(UnscaledValue(ws_ext_sales_price#34))])
         :           +- Exchange hashpartitioning(ca_county#15, d_qoy#39, d_year#40, 5)
         :              +- *(18) HashAggregate(keys=[ca_county#15, d_qoy#39, d_year#40], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#34))])
         :                 +- *(18) Project [ws_ext_sales_price#34, d_year#40, d_qoy#39, ca_county#15]
         :                    +- *(18) BroadcastHashJoin [ws_bill_addr_sk#35], [ca_address_sk#41], Inner, BuildRight
         :                       :- *(18) Project [ws_bill_addr_sk#35, ws_ext_sales_price#34, d_year#40, d_qoy#39]
         :                       :  +- *(18) BroadcastHashJoin [ws_sold_date_sk#37], [d_date_sk#42], Inner, BuildRight
         :                       :     :- *(18) Project [ws_sold_date_sk#37, ws_bill_addr_sk#35, ws_ext_sales_price#34]
         :                       :     :  +- *(18) Filter (isnotnull(ws_sold_date_sk#37) && isnotnull(ws_bill_addr_sk#35))
         :                       :     :     +- *(18) FileScan parquet default.web_sales[ws_sold_date_sk#37,ws_bill_addr_sk#35,ws_ext_sales_price#34] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
         :                       :     +- ReusedExchange [d_date_sk#42, d_year#40, d_qoy#39], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :                       +- ReusedExchange [ca_address_sk#41, ca_county#15], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]))
            +- *(23) HashAggregate(keys=[ca_county#14, d_qoy#43, d_year#44], functions=[sum(UnscaledValue(ws_ext_sales_price#34))])
               +- Exchange hashpartitioning(ca_county#14, d_qoy#43, d_year#44, 5)
                  +- *(22) HashAggregate(keys=[ca_county#14, d_qoy#43, d_year#44], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#34))])
                     +- *(22) Project [ws_ext_sales_price#34, d_year#44, d_qoy#43, ca_county#14]
                        +- *(22) BroadcastHashJoin [ws_bill_addr_sk#35], [ca_address_sk#45], Inner, BuildRight
                           :- *(22) Project [ws_bill_addr_sk#35, ws_ext_sales_price#34, d_year#44, d_qoy#43]
                           :  +- *(22) BroadcastHashJoin [ws_sold_date_sk#37], [d_date_sk#46], Inner, BuildRight
                           :     :- *(22) Project [ws_sold_date_sk#37, ws_bill_addr_sk#35, ws_ext_sales_price#34]
                           :     :  +- *(22) Filter (isnotnull(ws_sold_date_sk#37) && isnotnull(ws_bill_addr_sk#35))
                           :     :     +- *(22) FileScan parquet default.web_sales[ws_sold_date_sk#37,ws_bill_addr_sk#35,ws_ext_sales_price#34] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
                           :     +- ReusedExchange [d_date_sk#46, d_year#44, d_qoy#43], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           +- ReusedExchange [ca_address_sk#45, ca_county#14], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))