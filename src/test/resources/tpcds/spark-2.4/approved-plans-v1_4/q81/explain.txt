== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#1 ASC NULLS FIRST,c_salutation#2 ASC NULLS FIRST,c_first_name#3 ASC NULLS FIRST,c_last_name#4 ASC NULLS FIRST,ca_street_number#5 ASC NULLS FIRST,ca_street_name#6 ASC NULLS FIRST,ca_street_type#7 ASC NULLS FIRST,ca_suite_number#8 ASC NULLS FIRST,ca_city#9 ASC NULLS FIRST,ca_county#10 ASC NULLS FIRST,ca_state#11 ASC NULLS FIRST,ca_zip#12 ASC NULLS FIRST,ca_country#13 ASC NULLS FIRST,ca_gmt_offset#14 ASC NULLS FIRST,ca_location_type#15 ASC NULLS FIRST,ctr_total_return#16 ASC NULLS FIRST], output=[c_customer_id#1,c_salutation#2,c_first_name#3,c_last_name#4,ca_street_number#5,ca_street_name#6,ca_street_type#7,ca_suite_number#8,ca_city#9,ca_county#10,ca_state#11,ca_zip#12,ca_country#13,ca_gmt_offset#14,ca_location_type#15,ctr_total_return#16])
+- *(11) Project [c_customer_id#1, c_salutation#2, c_first_name#3, c_last_name#4, ca_street_number#5, ca_street_name#6, ca_street_type#7, ca_suite_number#8, ca_city#9, ca_county#10, ca_state#11, ca_zip#12, ca_country#13, ca_gmt_offset#14, ca_location_type#15, ctr_total_return#16]
   +- *(11) BroadcastHashJoin [c_current_addr_sk#17], [ca_address_sk#18], Inner, BuildRight
      :- *(11) Project [ctr_total_return#16, c_customer_id#1, c_current_addr_sk#17, c_salutation#2, c_first_name#3, c_last_name#4]
      :  +- *(11) BroadcastHashJoin [ctr_customer_sk#19], [c_customer_sk#20], Inner, BuildRight
      :     :- *(11) Project [ctr_customer_sk#19, ctr_total_return#16]
      :     :  +- *(11) BroadcastHashJoin [ctr_state#21], [ctr_state#21#22], Inner, BuildRight, (cast(ctr_total_return#16 as decimal(24,7)) > (CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#23)
      :     :     :- *(11) Filter isnotnull(ctr_total_return#16)
      :     :     :  +- *(11) HashAggregate(keys=[cr_returning_customer_sk#24, ca_state#11], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#25))])
      :     :     :     +- Exchange hashpartitioning(cr_returning_customer_sk#24, ca_state#11, 5)
      :     :     :        +- *(3) HashAggregate(keys=[cr_returning_customer_sk#24, ca_state#11], functions=[partial_sum(UnscaledValue(cr_return_amt_inc_tax#25))])
      :     :     :           +- *(3) Project [cr_returning_customer_sk#24, cr_return_amt_inc_tax#25, ca_state#11]
      :     :     :              +- *(3) BroadcastHashJoin [cr_returning_addr_sk#26], [ca_address_sk#18], Inner, BuildRight
      :     :     :                 :- *(3) Project [cr_returning_customer_sk#24, cr_returning_addr_sk#26, cr_return_amt_inc_tax#25]
      :     :     :                 :  +- *(3) BroadcastHashJoin [cr_returned_date_sk#27], [d_date_sk#28], Inner, BuildRight
      :     :     :                 :     :- *(3) Project [cr_returned_date_sk#27, cr_returning_customer_sk#24, cr_returning_addr_sk#26, cr_return_amt_inc_tax#25]
      :     :     :                 :     :  +- *(3) Filter ((isnotnull(cr_returned_date_sk#27) && isnotnull(cr_returning_addr_sk#26)) && isnotnull(cr_returning_customer_sk#24))
      :     :     :                 :     :     +- *(3) FileScan parquet default.catalog_returns[cr_returned_date_sk#27,cr_returning_customer_sk#24,cr_returning_addr_sk#26,cr_return_amt_inc_tax#25] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_returned_date_sk), IsNotNull(cr_returning_addr_sk), IsNotNull(cr_returning_customer..., ReadSchema: struct<cr_returned_date_sk:int,cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_am...
      :     :     :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :     :     :                 :        +- *(1) Project [d_date_sk#28]
      :     :     :                 :           +- *(1) Filter ((isnotnull(d_year#29) && (d_year#29 = 2000)) && isnotnull(d_date_sk#28))
      :     :     :                 :              +- *(1) FileScan parquet default.date_dim[d_date_sk#28,d_year#29] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
      :     :     :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :     :     :                    +- *(2) Project [ca_address_sk#18, ca_state#11]
      :     :     :                       +- *(2) Filter (isnotnull(ca_address_sk#18) && isnotnull(ca_state#11))
      :     :     :                          +- *(2) FileScan parquet default.customer_address[ca_address_sk#18,ca_state#11] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_state)], ReadSchema: struct<ca_address_sk:int,ca_state:string>
      :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, string, true]))
      :     :        +- *(8) Filter isnotnull((CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#23)
      :     :           +- *(8) HashAggregate(keys=[ctr_state#21], functions=[avg(ctr_total_return#16)])
      :     :              +- Exchange hashpartitioning(ctr_state#21, 5)
      :     :                 +- *(7) HashAggregate(keys=[ctr_state#21], functions=[partial_avg(ctr_total_return#16)])
      :     :                    +- *(7) HashAggregate(keys=[cr_returning_customer_sk#24, ca_state#11], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#25))])
      :     :                       +- Exchange hashpartitioning(cr_returning_customer_sk#24, ca_state#11, 5)
      :     :                          +- *(6) HashAggregate(keys=[cr_returning_customer_sk#24, ca_state#11], functions=[partial_sum(UnscaledValue(cr_return_amt_inc_tax#25))])
      :     :                             +- *(6) Project [cr_returning_customer_sk#24, cr_return_amt_inc_tax#25, ca_state#11]
      :     :                                +- *(6) BroadcastHashJoin [cr_returning_addr_sk#26], [ca_address_sk#18], Inner, BuildRight
      :     :                                   :- *(6) Project [cr_returning_customer_sk#24, cr_returning_addr_sk#26, cr_return_amt_inc_tax#25]
      :     :                                   :  +- *(6) BroadcastHashJoin [cr_returned_date_sk#27], [d_date_sk#28], Inner, BuildRight
      :     :                                   :     :- *(6) Project [cr_returned_date_sk#27, cr_returning_customer_sk#24, cr_returning_addr_sk#26, cr_return_amt_inc_tax#25]
      :     :                                   :     :  +- *(6) Filter (isnotnull(cr_returned_date_sk#27) && isnotnull(cr_returning_addr_sk#26))
      :     :                                   :     :     +- *(6) FileScan parquet default.catalog_returns[cr_returned_date_sk#27,cr_returning_customer_sk#24,cr_returning_addr_sk#26,cr_return_amt_inc_tax#25] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_returned_date_sk), IsNotNull(cr_returning_addr_sk)], ReadSchema: struct<cr_returned_date_sk:int,cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_am...
      :     :                                   :     +- ReusedExchange [d_date_sk#28], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :     :                                   +- ReusedExchange [ca_address_sk#18, ca_state#11], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :        +- *(9) Project [c_customer_sk#20, c_customer_id#1, c_current_addr_sk#17, c_salutation#2, c_first_name#3, c_last_name#4]
      :           +- *(9) Filter (isnotnull(c_customer_sk#20) && isnotnull(c_current_addr_sk#17))
      :              +- *(9) FileScan parquet default.customer[c_customer_sk#20,c_customer_id#1,c_current_addr_sk#17,c_salutation#2,c_first_name#3,c_last_name#4] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_addr_sk:int,c_salutation:string,c_first_n...
      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         +- *(10) Project [ca_address_sk#18, ca_street_number#5, ca_street_name#6, ca_street_type#7, ca_suite_number#8, ca_city#9, ca_county#10, ca_state#11, ca_zip#12, ca_country#13, ca_gmt_offset#14, ca_location_type#15]
            +- *(10) Filter ((isnotnull(ca_state#11) && (ca_state#11 = GA)) && isnotnull(ca_address_sk#18))
               +- *(10) FileScan parquet default.customer_address[ca_address_sk#18,ca_street_number#5,ca_street_name#6,ca_street_type#7,ca_suite_number#8,ca_city#9,ca_county#10,ca_state#11,ca_zip#12,ca_country#13,ca_gmt_offset#14,ca_location_type#15] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,GA), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_street_number:string,ca_street_name:string,ca_street_type:string,ca_s...