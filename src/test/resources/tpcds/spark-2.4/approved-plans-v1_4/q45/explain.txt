== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[ca_zip#1 ASC NULLS FIRST,ca_city#2 ASC NULLS FIRST], output=[ca_zip#1,ca_city#2,sum(ws_sales_price)#3])
+- *(7) HashAggregate(keys=[ca_zip#1, ca_city#2], functions=[sum(UnscaledValue(ws_sales_price#4))])
   +- Exchange hashpartitioning(ca_zip#1, ca_city#2, 5)
      +- *(6) HashAggregate(keys=[ca_zip#1, ca_city#2], functions=[partial_sum(UnscaledValue(ws_sales_price#4))])
         +- *(6) Project [ws_sales_price#4, ca_city#2, ca_zip#1]
            +- *(6) Filter (substring(ca_zip#1, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) || exists#5)
               +- *(6) BroadcastHashJoin [i_item_id#6], [i_item_id#6#7], ExistenceJoin(exists#5), BuildRight
                  :- *(6) Project [ws_sales_price#4, ca_city#2, ca_zip#1, i_item_id#6]
                  :  +- *(6) BroadcastHashJoin [ws_item_sk#8], [i_item_sk#9], Inner, BuildRight
                  :     :- *(6) Project [ws_item_sk#8, ws_sales_price#4, ca_city#2, ca_zip#1]
                  :     :  +- *(6) BroadcastHashJoin [ws_sold_date_sk#10], [d_date_sk#11], Inner, BuildRight
                  :     :     :- *(6) Project [ws_sold_date_sk#10, ws_item_sk#8, ws_sales_price#4, ca_city#2, ca_zip#1]
                  :     :     :  +- *(6) BroadcastHashJoin [c_current_addr_sk#12], [ca_address_sk#13], Inner, BuildRight
                  :     :     :     :- *(6) Project [ws_sold_date_sk#10, ws_item_sk#8, ws_sales_price#4, c_current_addr_sk#12]
                  :     :     :     :  +- *(6) BroadcastHashJoin [ws_bill_customer_sk#14], [c_customer_sk#15], Inner, BuildRight
                  :     :     :     :     :- *(6) Project [ws_sold_date_sk#10, ws_item_sk#8, ws_bill_customer_sk#14, ws_sales_price#4]
                  :     :     :     :     :  +- *(6) Filter ((isnotnull(ws_bill_customer_sk#14) && isnotnull(ws_sold_date_sk#10)) && isnotnull(ws_item_sk#8))
                  :     :     :     :     :     +- *(6) FileScan parquet default.web_sales[ws_sold_date_sk#10,ws_item_sk#8,ws_bill_customer_sk#14,ws_sales_price#4] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_sales_price:decimal(7,2)>
                  :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                  :     :     :     :        +- *(1) Project [c_customer_sk#15, c_current_addr_sk#12]
                  :     :     :     :           +- *(1) Filter (isnotnull(c_customer_sk#15) && isnotnull(c_current_addr_sk#12))
                  :     :     :     :              +- *(1) FileScan parquet default.customer[c_customer_sk#15,c_current_addr_sk#12] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
                  :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                  :     :     :        +- *(2) Project [ca_address_sk#13, ca_city#2, ca_zip#1]
                  :     :     :           +- *(2) Filter isnotnull(ca_address_sk#13)
                  :     :     :              +- *(2) FileScan parquet default.customer_address[ca_address_sk#13,ca_city#2,ca_zip#1] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_city:string,ca_zip:string>
                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                  :     :        +- *(3) Project [d_date_sk#11]
                  :     :           +- *(3) Filter ((((isnotnull(d_qoy#16) && isnotnull(d_year#17)) && (d_qoy#16 = 2)) && (d_year#17 = 2001)) && isnotnull(d_date_sk#11))
                  :     :              +- *(3) FileScan parquet default.date_dim[d_date_sk#11,d_year#17,d_qoy#16] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                  :        +- *(4) Project [i_item_sk#9, i_item_id#6]
                  :           +- *(4) Filter isnotnull(i_item_sk#9)
                  :              +- *(4) FileScan parquet default.item[i_item_sk#9,i_item_id#6] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>
                  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]))
                     +- *(5) Project [i_item_id#6 AS i_item_id#6#7]
                        +- *(5) Filter i_item_sk#9 IN (2,3,5,7,11,13,17,19,23,29)
                           +- *(5) FileScan parquet default.item[i_item_sk#9,i_item_id#6] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/item], PartitionFilters: [], PushedFilters: [In(i_item_sk, [2,3,5,7,11,13,17,19,23,29])], ReadSchema: struct<i_item_sk:int,i_item_id:string>