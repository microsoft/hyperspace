== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[ca_state#1 ASC NULLS FIRST,cd_gender#2 ASC NULLS FIRST,cd_marital_status#3 ASC NULLS FIRST,aggOrder#4 ASC NULLS FIRST,cd_dep_employed_count#5 ASC NULLS FIRST,cd_dep_college_count#6 ASC NULLS FIRST], output=[ca_state#1,cd_gender#2,cd_marital_status#3,cnt1#7,min(cd_dep_count)#8,max(cd_dep_count)#9,avg(cd_dep_count)#10,cd_dep_employed_count#5,cnt2#11,min(cd_dep_employed_count)#12,max(cd_dep_employed_count)#13,avg(cd_dep_employed_count)#14,cd_dep_college_count#6,cnt3#15,min(cd_dep_college_count)#16,max(cd_dep_college_count)#17,avg(cd_dep_college_count)#18])
+- *(10) HashAggregate(keys=[ca_state#1, cd_gender#2, cd_marital_status#3, cd_dep_count#19, cd_dep_employed_count#5, cd_dep_college_count#6], functions=[count(1), min(cd_dep_count#19), max(cd_dep_count#19), avg(cast(cd_dep_count#19 as bigint)), min(cd_dep_employed_count#5), max(cd_dep_employed_count#5), avg(cast(cd_dep_employed_count#5 as bigint)), min(cd_dep_college_count#6), max(cd_dep_college_count#6), avg(cast(cd_dep_college_count#6 as bigint))])
   +- Exchange hashpartitioning(ca_state#1, cd_gender#2, cd_marital_status#3, cd_dep_count#19, cd_dep_employed_count#5, cd_dep_college_count#6, 5)
      +- *(9) HashAggregate(keys=[ca_state#1, cd_gender#2, cd_marital_status#3, cd_dep_count#19, cd_dep_employed_count#5, cd_dep_college_count#6], functions=[partial_count(1), partial_min(cd_dep_count#19), partial_max(cd_dep_count#19), partial_avg(cast(cd_dep_count#19 as bigint)), partial_min(cd_dep_employed_count#5), partial_max(cd_dep_employed_count#5), partial_avg(cast(cd_dep_employed_count#5 as bigint)), partial_min(cd_dep_college_count#6), partial_max(cd_dep_college_count#6), partial_avg(cast(cd_dep_college_count#6 as bigint))])
         +- *(9) Project [ca_state#1, cd_gender#2, cd_marital_status#3, cd_dep_count#19, cd_dep_employed_count#5, cd_dep_college_count#6]
            +- *(9) BroadcastHashJoin [c_current_cdemo_sk#20], [cd_demo_sk#21], Inner, BuildRight
               :- *(9) Project [c_current_cdemo_sk#20, ca_state#1]
               :  +- *(9) BroadcastHashJoin [c_current_addr_sk#22], [ca_address_sk#23], Inner, BuildRight
               :     :- *(9) Project [c_current_cdemo_sk#20, c_current_addr_sk#22]
               :     :  +- *(9) Filter (exists#24 || exists#25)
               :     :     +- *(9) BroadcastHashJoin [c_customer_sk#26], [cs_ship_customer_sk#27], ExistenceJoin(exists#25), BuildRight
               :     :        :- *(9) BroadcastHashJoin [c_customer_sk#26], [ws_bill_customer_sk#28], ExistenceJoin(exists#24), BuildRight
               :     :        :  :- *(9) BroadcastHashJoin [c_customer_sk#26], [ss_customer_sk#29], LeftSemi, BuildRight
               :     :        :  :  :- *(9) Project [c_customer_sk#26, c_current_cdemo_sk#20, c_current_addr_sk#22]
               :     :        :  :  :  +- *(9) Filter (isnotnull(c_current_addr_sk#22) && isnotnull(c_current_cdemo_sk#20))
               :     :        :  :  :     +- *(9) FileScan parquet default.customer[c_customer_sk#26,c_current_cdemo_sk#20,c_current_addr_sk#22] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>
               :     :        :  :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :     :        :  :     +- *(2) Project [ss_customer_sk#29]
               :     :        :  :        +- *(2) BroadcastHashJoin [ss_sold_date_sk#30], [d_date_sk#31], Inner, BuildRight
               :     :        :  :           :- *(2) Project [ss_sold_date_sk#30, ss_customer_sk#29]
               :     :        :  :           :  +- *(2) Filter isnotnull(ss_sold_date_sk#30)
               :     :        :  :           :     +- *(2) FileScan parquet default.store_sales[ss_sold_date_sk#30,ss_customer_sk#29] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int>
               :     :        :  :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :     :        :  :              +- *(1) Project [d_date_sk#31]
               :     :        :  :                 +- *(1) Filter ((((isnotnull(d_year#32) && isnotnull(d_qoy#33)) && (d_year#32 = 2002)) && (d_qoy#33 < 4)) && isnotnull(d_date_sk#31))
               :     :        :  :                    +- *(1) FileScan parquet default.date_dim[d_date_sk#31,d_year#32,d_qoy#33] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_qoy), EqualTo(d_year,2002), LessThan(d_qoy,4), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
               :     :        :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :     :        :     +- *(4) Project [ws_bill_customer_sk#28]
               :     :        :        +- *(4) BroadcastHashJoin [ws_sold_date_sk#34], [d_date_sk#31], Inner, BuildRight
               :     :        :           :- *(4) Project [ws_sold_date_sk#34, ws_bill_customer_sk#28]
               :     :        :           :  +- *(4) Filter isnotnull(ws_sold_date_sk#34)
               :     :        :           :     +- *(4) FileScan parquet default.web_sales[ws_sold_date_sk#34,ws_bill_customer_sk#28] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int>
               :     :        :           +- ReusedExchange [d_date_sk#31], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :     :           +- *(6) Project [cs_ship_customer_sk#27]
               :     :              +- *(6) BroadcastHashJoin [cs_sold_date_sk#35], [d_date_sk#31], Inner, BuildRight
               :     :                 :- *(6) Project [cs_sold_date_sk#35, cs_ship_customer_sk#27]
               :     :                 :  +- *(6) Filter isnotnull(cs_sold_date_sk#35)
               :     :                 :     +- *(6) FileScan parquet default.catalog_sales[cs_sold_date_sk#35,cs_ship_customer_sk#27] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_ship_customer_sk:int>
               :     :                 +- ReusedExchange [d_date_sk#31], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :        +- *(7) Project [ca_address_sk#23, ca_state#1]
               :           +- *(7) Filter isnotnull(ca_address_sk#23)
               :              +- *(7) FileScan parquet default.customer_address[ca_address_sk#23,ca_state#1] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>
               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                  +- *(8) Project [cd_demo_sk#21, cd_gender#2, cd_marital_status#3, cd_dep_count#19, cd_dep_employed_count#5, cd_dep_college_count#6]
                     +- *(8) Filter isnotnull(cd_demo_sk#21)
                        +- *(8) FileScan parquet default.customer_demographics[cd_demo_sk#21,cd_gender#2,cd_marital_status#3,cd_dep_count#19,cd_dep_employed_count#5,cd_dep_college_count#6] Batched: true, Format: Parquet, Location [not included in comparison]/{warehouse_dir}/customer_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk)], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_dep_count:int,cd_dep_employed_...